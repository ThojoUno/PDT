<?xml version="1.0" encoding="utf-8"?>
<!-- Installer Workflow 2600       -->
<!-- Copyright 2013-4 Microsoft    -->
<!-- A WSSC CAT Solution           -->
<!-- Created by Rob Willis         -->
<!-- Rob.Willis@microsoft.com      -->
<!-- 20140302 SM Reports Deployment Fix -->
<!-- 20140307 SCO Web Svcs Fix -->
<Installer version="2.0">
  <Variable Name="SystemCenter2012ProductKey" Value="" />
  <Variable Name="SQLServer2012ProductKey" Value="" />
  <Variable Name="SQLServer2008R2ProductKey" Value="" />
  <Variable Name="InstallerServiceAccount" Value="" Required="True" />
  <Variable Name="InstallerServiceAccountPassword" Value="" Required="True" />
  <Variable Name="SourcePath" Value="" Required="True" />
  <Variable Name="TempPath" Value="$SystemDrive\Temp" />
  <Variable Name="Download" Value="$SystemDrive\Temp" />
  <Variable Name="RegisteredUser" Value="" Required="True" />
  <Variable Name="RegisteredOrganization" Value="" Required="True" />
  <Variable Name="MicrosoftUpdate" Value="0" />
  <Variable Name="CustomerExperienceImprovementProgram" Value="0" />
  <Variable Name="ErrorReporting" Value="Never" />
  <Variable Name="OperationalDataReporting" Value="0" />
  <ServerFeatures OSVersion="6.3.9600">
    <Group Name="1">
      <Source>$WindowsServer2012R2Source\sources\sxs</Source>
      <ServerFeature Name=".NET Framework 3.51">
        <Install>NET-Framework-Core</Install>
        <Validation>220</Validation>
      </ServerFeature>
    </Group>
    <Group Name="2">
      <ServerFeature Name=".NET Framework 4.5">
        <Install>NET-Framework-45-Core</Install>
        <Validation>418</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Web Server">
        <Install>Web-WebServer</Install>
        <Validation>140</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Default Document">
        <Install>Web-Default-Doc</Install>
        <Validation>143</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Directory Browsing">
        <Install>Web-Dir-Browsing</Install>
        <Validation>144</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Errors">
        <Install>Web-Http-Errors</Install>
        <Validation>145</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Static Content">
        <Install>Web-Static-Content</Install>
        <Validation>142</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Redirection">
        <Install>Web-Http-Redirect</Install>
        <Validation>146</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Logging">
        <Install>Web-Http-Logging</Install>
        <Validation>156</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Request Monitor">
        <Install>Web-Request-Monitor</Install>
        <Validation>158</Validation>
      </ServerFeature>      
      <ServerFeature Name="IIS Tracing">
        <Install>Web-Http-Tracing</Install>
        <Validation>159</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Static Content Compression">
        <Install>Web-Stat-Compression</Install>
        <Validation>172</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Dynamic Content Compression">
        <Install>Web-Dyn-Compression</Install>
        <Validation>173</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Request Filtering">
        <Install>Web-Filtering</Install>
        <Validation>169</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Basic Authentication">
        <Install>Web-Basic-Auth</Install>
        <Validation>163</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS URL Authorization">
        <Install>Web-Url-Auth</Install>
        <Validation>168</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Windows Authentication">
        <Install>Web-Windows-Auth</Install>
        <Validation>164</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS .NET Extensibility 3.5">
        <Install>Web-Net-Ext</Install>
        <Validation>149</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS .NET Extensibility 4.5">
        <Install>Web-Net-Ext45</Install>
        <Validation>414</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ASP.NET 3.5">
        <Install>Web-Asp-Net</Install>
        <Validation>148</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ASP.NET 4.5">
        <Install>Web-Asp-Net45</Install>
        <Validation>413</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ISAPI Extensions">
        <Install>Web-ISAPI-Ext</Install>
        <Validation>152</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ISAPI Filters">
        <Install>Web-ISAPI-Filter</Install>
        <Validation>153</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Console">
        <Install>Web-Mgmt-Console</Install>
        <Validation>175</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Management Compatibility">
        <Install>Web-Mgmt-Compat</Install>
        <Validation>178</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Metabase Compatibility">
        <Install>Web-Metabase</Install>
        <Validation>179</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 WMI Compatibility">
        <Install>Web-WMI</Install>
        <Validation>180</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Scripts and Tools">
        <Install>Web-Scripting-Tools</Install>
        <Validation>176</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Service">
        <Install>Web-Mgmt-Service</Install>
        <Validation>177</Validation>
      </ServerFeature>
      <ServerFeature Name="BITS IIS Server Extension">
        <Install>BITS-IIS-Ext</Install>
        <Validation>54</Validation>
      </ServerFeature>
      <ServerFeature Name="Management OData IIS Extension">
        <Install>ManagementOData</Install>
        <Validation>442</Validation>
      </ServerFeature>
      <ServerFeature Name="ASP.NET 4.5">
        <Install>NET-Framework-45-ASPNET</Install>
        <Validation>429</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET HTTP Activation 4.5">
        <Install>NET-WCF-HTTP-Activation45</Install>
        <Validation>421</Validation>
      </ServerFeature>
      <ServerFeature Name="Windows Identity Foundation">
        <Install>Windows-Identity-Foundation</Install>
        <Validation>427</Validation>
      </ServerFeature>
      <ServerFeature Name="PowerShell 2.0">
        <Install>PowerShell-V2</Install>
        <Validation>411</Validation>
      </ServerFeature>
      <ServerFeature Name="PowerShell">
        <Install>PowerShell</Install>
        <Validation>412</Validation>
      </ServerFeature>
      <ServerFeature Name="Process Model">
        <Install>WAS-Process-Model</Install>
        <Validation>219</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET Environment 3.5">
        <Install>WAS-NET-Environment</Install>
        <Validation>218</Validation>
      </ServerFeature>
      <ServerFeature Name="Configuration APIs">
        <Install>WAS-Config-APIs</Install>
        <Validation>217</Validation>
      </ServerFeature>
      <ServerFeature Name="Update Services API">
        <Install>UpdateServices-API</Install>
        <Validation>405</Validation>
      </ServerFeature>
      <ServerFeature Name="Update Services Console">
        <Install>UpdateServices-UI</Install>
        <Validation>408</Validation>
      </ServerFeature>
      <ServerFeature Name="Remote Differential Compression">
        <Install>RDC</Install>
        <Validation>73</Validation>
      </ServerFeature>
      <ServerFeature Name="RSAT Clustering Powershell">
        <Install>RSAT-Clustering-Powershell</Install>
        <Validation>483</Validation>
      </ServerFeature>
      <ServerFeature Name="File Server">
        <Install>FS-FileServer</Install>
        <Validation>255</Validation>
      </ServerFeature>
      <ServerFeature Name="File Server Resource Manager">
        <Install>FS-Resource-Manager</Install>
        <Validation>104</Validation>
      </ServerFeature>
    </Group>
  </ServerFeatures>
  <ServerFeatures OSVersion="6.2.9200">
    <Group Name="1">
      <Source>$WindowsServer2012Source\sources\sxs</Source>
      <ServerFeature Name=".NET Framework 3.51">
        <Install>NET-Framework-Core</Install>
        <Validation>220</Validation>
      </ServerFeature>
    </Group>
    <Group Name="2">
      <ServerFeature Name=".NET Framework 4.5">
        <Install>NET-Framework-45-Core</Install>
        <Validation>418</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Web Server">
        <Install>Web-WebServer</Install>
        <Validation>140</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Default Document">
        <Install>Web-Default-Doc</Install>
        <Validation>143</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Directory Browsing">
        <Install>Web-Dir-Browsing</Install>
        <Validation>144</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Errors">
        <Install>Web-Http-Errors</Install>
        <Validation>145</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Static Content">
        <Install>Web-Static-Content</Install>
        <Validation>142</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Redirection">
        <Install>Web-Http-Redirect</Install>
        <Validation>146</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Logging">
        <Install>Web-Http-Logging</Install>
        <Validation>156</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Request Monitor">
        <Install>Web-Request-Monitor</Install>
        <Validation>158</Validation>
      </ServerFeature>      
      <ServerFeature Name="IIS Tracing">
        <Install>Web-Http-Tracing</Install>
        <Validation>159</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Static Content Compression">
        <Install>Web-Stat-Compression</Install>
        <Validation>172</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Dynamic Content Compression">
        <Install>Web-Dyn-Compression</Install>
        <Validation>173</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Request Filtering">
        <Install>Web-Filtering</Install>
        <Validation>169</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Basic Authentication">
        <Install>Web-Basic-Auth</Install>
        <Validation>163</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS URL Authorization">
        <Install>Web-Url-Auth</Install>
        <Validation>168</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Windows Authentication">
        <Install>Web-Windows-Auth</Install>
        <Validation>164</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS .NET Extensibility 3.5">
        <Install>Web-Net-Ext</Install>
        <Validation>149</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS .NET Extensibility 4.5">
        <Install>Web-Net-Ext45</Install>
        <Validation>414</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ASP.NET 3.5">
        <Install>Web-Asp-Net</Install>
        <Validation>148</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ASP.NET 4.5">
        <Install>Web-Asp-Net45</Install>
        <Validation>413</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ISAPI Extensions">
        <Install>Web-ISAPI-Ext</Install>
        <Validation>152</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ISAPI Filters">
        <Install>Web-ISAPI-Filter</Install>
        <Validation>153</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Console">
        <Install>Web-Mgmt-Console</Install>
        <Validation>175</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Management Compatibility">
        <Install>Web-Mgmt-Compat</Install>
        <Validation>178</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Metabase Compatibility">
        <Install>Web-Metabase</Install>
        <Validation>179</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 WMI Compatibility">
        <Install>Web-WMI</Install>
        <Validation>180</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Scripts and Tools">
        <Install>Web-Scripting-Tools</Install>
        <Validation>176</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Service">
        <Install>Web-Mgmt-Service</Install>
        <Validation>177</Validation>
      </ServerFeature>
      <ServerFeature Name="BITS IIS Server Extension">
        <Install>BITS-IIS-Ext</Install>
        <Validation>54</Validation>
      </ServerFeature>
      <ServerFeature Name="Management OData IIS Extension">
        <Install>ManagementOData</Install>
        <Validation>442</Validation>
      </ServerFeature>
      <ServerFeature Name="ASP.NET 4.5">
        <Install>NET-Framework-45-ASPNET</Install>
        <Validation>429</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET HTTP Activation 4.5">
        <Install>NET-WCF-HTTP-Activation45</Install>
        <Validation>421</Validation>
      </ServerFeature>
      <ServerFeature Name="Windows Identity Foundation">
        <Install>Windows-Identity-Foundation</Install>
        <Validation>427</Validation>
      </ServerFeature>
      <ServerFeature Name="PowerShell 2.0">
        <Install>PowerShell-V2</Install>
        <Validation>411</Validation>
      </ServerFeature>
      <ServerFeature Name="PowerShell">
        <Install>PowerShell</Install>
        <Validation>412</Validation>
      </ServerFeature>
      <ServerFeature Name="Process Model">
        <Install>WAS-Process-Model</Install>
        <Validation>219</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET Environment 3.5">
        <Install>WAS-NET-Environment</Install>
        <Validation>218</Validation>
      </ServerFeature>
      <ServerFeature Name="Configuration APIs">
        <Install>WAS-Config-APIs</Install>
        <Validation>217</Validation>
      </ServerFeature>
      <ServerFeature Name="Update Services API">
        <Install>UpdateServices-API</Install>
        <Validation>405</Validation>
      </ServerFeature>
      <ServerFeature Name="Update Services Console">
        <Install>UpdateServices-UI</Install>
        <Validation>408</Validation>
      </ServerFeature>
      <ServerFeature Name="Remote Differential Compression">
        <Install>RDC</Install>
        <Validation>73</Validation>
      </ServerFeature>
      <ServerFeature Name="RSAT Clustering Powershell">
        <Install>RSAT-Clustering-Powershell</Install>
        <Validation>483</Validation>
      </ServerFeature>
      <ServerFeature Name="File Server">
        <Install>FS-FileServer</Install>
        <Validation>255</Validation>
      </ServerFeature>
      <ServerFeature Name="File Server Resource Manager">
        <Install>FS-Resource-Manager</Install>
        <Validation>104</Validation>
      </ServerFeature>
    </Group>
  </ServerFeatures>
  <ServerFeatures OSVersion="6.1.7601">
    <Group Name="1">
      <ServerFeature Name=".NET Framework 3.51">
        <Install>NET-Framework-Core</Install>
        <Validation>220</Validation>
      </ServerFeature>
    </Group>
    <Group Name="2">
      <ServerFeature Name="AS .NET Framework 3.5.1">
        <Install>AS-NET-Framework</Install>
        <Validation>230</Validation>
      </ServerFeature>
      <ServerFeature Name="AS Web Server (IIS) Support">
        <Install>AS-Web-Support</Install>
        <Validation>231</Validation>
      </ServerFeature>
      <ServerFeature Name="AS TCP Port Sharing">
        <Install>AS-TCP-Port-Sharing</Install>
        <Validation>233</Validation>
      </ServerFeature>
      <ServerFeature Name="AS HTTP Activation">
        <Install>AS-HTTP-Activation</Install>
        <Validation>235</Validation>
      </ServerFeature>
      <ServerFeature Name="AS Message Queuing Activation">
        <Install>AS-MSMQ-Activation</Install>
        <Validation>236</Validation>
      </ServerFeature>
      <ServerFeature Name="AS TCP Activation">
        <Install>AS-TCP-Activation</Install>
        <Validation>237</Validation>
      </ServerFeature>
      <ServerFeature Name="AS Named Pipes Activation">
        <Install>AS-Named-Pipes</Install>
        <Validation>238</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Web Server">
        <Install>Web-WebServer</Install>
        <Validation>140</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Static Content">
        <Install>Web-Static-Content</Install>
        <Validation>142</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Default Document">
        <Install>Web-Default-Doc</Install>
        <Validation>143</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Directory Browsing">
        <Install>Web-Dir-Browsing</Install>
        <Validation>144</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Errors">
        <Install>Web-Http-Errors</Install>
        <Validation>145</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Redirection">
        <Install>Web-Http-Redirect</Install>
        <Validation>146</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ASP.NET">
        <Install>Web-Asp-Net</Install>
        <Validation>148</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS .NET Extensibility">
        <Install>Web-Net-Ext</Install>
        <Validation>149</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ASP">
        <Install>Web-ASP</Install>
        <Validation>150</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS CGI">
        <Install>Web-CGI</Install>
        <Validation>151</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ISAPI Extensions">
        <Install>Web-ISAPI-Ext</Install>
        <Validation>152</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS ISAPI Filters">
        <Install>Web-ISAPI-Filter</Install>
        <Validation>153</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Server Side Includes">
        <Install>Web-Includes</Install>
        <Validation>154</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS HTTP Logging">
        <Install>Web-Http-Logging</Install>
        <Validation>156</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Logging Tools">
        <Install>Web-Log-Libraries</Install>
        <Validation>157</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Request Monitor">
        <Install>Web-Request-Monitor</Install>
        <Validation>158</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Tracing">
        <Install>Web-Http-Tracing</Install>
        <Validation>159</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Basic Authentication">
        <Install>Web-Basic-Auth</Install>
        <Validation>163</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Windows Authentication">
        <Install>Web-Windows-Auth</Install>
        <Validation>164</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Digest Authentication">
        <Install>Web-Digest-Auth</Install>
        <Validation>165</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Client Certificate Mapping Authentication">
        <Install>Web-Client-Auth</Install>
        <Validation>166</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS IIS Client Certificate Mapping Authentication">
        <Install>Web-Cert-Auth</Install>
        <Validation>167</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS URL Authorization">
        <Install>Web-Url-Auth</Install>
        <Validation>168</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Request Filtering">
        <Install>Web-Filtering</Install>
        <Validation>169</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS IP and Domain Restrictions">
        <Install>Web-IP-Security</Install>
        <Validation>170</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Static Content Compression">
        <Install>Web-Stat-Compression</Install>
        <Validation>172</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Dynamic Content Compression">
        <Install>Web-Dyn-Compression</Install>
        <Validation>173</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Console">
        <Install>Web-Mgmt-Console</Install>
        <Validation>175</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Scripts and Tools">
        <Install>Web-Scripting-Tools</Install>
        <Validation>176</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS Management Service">
        <Install>Web-Mgmt-Service</Install>
        <Validation>177</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Metabase Compatibility">
        <Install>Web-Metabase</Install>
        <Validation>179</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 WMI Compatibility">
        <Install>Web-WMI</Install>
        <Validation>180</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Scripting Tools">
        <Install>Web-Lgcy-Scripting</Install>
        <Validation>181</Validation>
      </ServerFeature>
      <ServerFeature Name="IIS 6 Management Console">
        <Install>Web-Lgcy-Mgmt-Console</Install>
        <Validation>182</Validation>
      </ServerFeature>
      <ServerFeature Name="BITS IIS Server Extension">
        <Install>BITS-IIS-Ext</Install>
        <Validation>54</Validation>
      </ServerFeature>
      <ServerFeature Name="Remote Differential Compression">
        <Install>RDC</Install>
        <Validation>73</Validation>
      </ServerFeature>
      <ServerFeature Name="Message Queuing Server">
        <Install>MSMQ-Server</Install>
        <Validation>191</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET HTTP Activation">
        <Install>NET-HTTP-Activation</Install>
        <Validation>222</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET Non-HTTP Activation">
        <Install>NET-Non-HTTP-Activ</Install>
        <Validation>223</Validation>
      </ServerFeature>
      <ServerFeature Name="Process Model">
        <Install>WAS-Process-Model</Install>
        <Validation>219</Validation>
      </ServerFeature>
      <ServerFeature Name=".NET Environment">
        <Install>WAS-NET-Environment</Install>
        <Validation>218</Validation>
      </ServerFeature>
      <ServerFeature Name="Configuration APIs">
        <Install>WAS-Config-APIs</Install>
        <Validation>217</Validation>
      </ServerFeature>
    </Group>
  </ServerFeatures>
  <Installables>
    <Installable Name="Windows Server 2012 R2">
      <Variable Name="WindowsServer2012R2Source" Value="WindowsServer2012R2" />
      <SourceFolder>$WindowsServer2012R2Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>setup.exe</File>
        <FileVersion>6.3.9600.16384</FileVersion>
      </Download>
    </Installable>
    <Installable Name="Windows Server 2012">
      <Variable Name="WindowsServer2012Source" Value="WindowsServer2012" />
      <SourceFolder>$WindowsServer2012Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>setup.exe</File>
        <FileVersion>6.2.9200.16384</FileVersion>
      </Download>
    </Installable>
    <Installable Name="SQL Server 2012">
      <Variable Name="SQLServer2012Source" Value="SQLServer2012.en" />
      <SourceFolder>$SQLServer2012Source</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/4/C/7/4C7D40B9-BCF8-4F8A-9E76-06E9B92FE5AE/ENU/x64/SQLFULL_x64_ENU_Install.exe</URL>
        <File>SQLFULL_x64_ENU_Install.exe</File>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>11.0.2100.60</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SQLFULL_x64_ENU_Install.exe</Command>
          <Argument></Argument>
        </Run>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
          <Command>cmd.exe</Command>
          <Argument>/c move $Download\Download\$DownloadFolder\SQLFULL_x64_ENU\*.* $Download\$DownloadFolder</Argument>
        </Run>
        <Run>
          <ExistingFile>1033_ENU_LP</ExistingFile>
          <Command>cmd.exe</Command>
          <Argument>/c move $Download\Download\$DownloadFolder\SQLFULL_x64_ENU\1033_ENU_LP $Download\$DownloadFolder</Argument>
        </Run>
        <Run>
          <ExistingFile>redist</ExistingFile>
          <Command>cmd.exe</Command>
          <Argument>/c move $Download\Download\$DownloadFolder\SQLFULL_x64_ENU\redist $Download\$DownloadFolder</Argument>
        </Run>
        <Run>
          <ExistingFile>resources</ExistingFile>
          <Command>cmd.exe</Command>
          <Argument>/c move $Download\Download\$DownloadFolder\SQLFULL_x64_ENU\resources $Download\$DownloadFolder</Argument>
        </Run>
        <Run>
          <ExistingFile>Tools</ExistingFile>
          <Command>cmd.exe</Command>
          <Argument>/c move $Download\Download\$DownloadFolder\SQLFULL_x64_ENU\Tools $Download\$DownloadFolder</Argument>
        </Run>
        <Run>
          <ExistingFile>x64</ExistingFile>
          <Command>cmd.exe</Command>
          <Argument>/c move $Download\Download\$DownloadFolder\SQLFULL_x64_ENU\x64 $Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/4/C/7/4C7D40B9-BCF8-4F8A-9E76-06E9B92FE5AE/ENU/x64/SQLFULL_x64_ENU_Core.box</URL>
        <File>SQLFULL_x64_ENU_Core.box</File>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
        </Run>
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/4/C/7/4C7D40B9-BCF8-4F8A-9E76-06E9B92FE5AE/ENU/x64/SQLFULL_x64_ENU_Lang.box</URL>
        <File>SQLFULL_x64_ENU_Lang.box</File>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
        </Run>
      </Download>
      <AdditionalDownload>SQL Server 2012 SP1</AdditionalDownload>
      <AdditionalDownload>SQL Server 2012 SP1 CU7</AdditionalDownload>
      <Install Name="SQL Server 2012">
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQLSERVER</Value>
        </Validation>
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQL`$$Instance</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQLServerOLAPService</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSOLAP`$$Instance</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and !($SQLFeatures.contains("AS")) -and ($SQLFeatures.contains("RS")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>ReportServer</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and !($SQLFeatures.contains("AS")) -and ($SQLFeatures.contains("RS")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>ReportServer`$$Instance</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft SQL Server\110\Setup Bootstrap\Log</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SQLServer2012Source\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/ACTION=`"Install`"</Value>
              </Switch>
              <Switch>
                <Value>/QUIET=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/UpdateEnabled=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/UpdateSource=`".\Updates`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLServer2012ProductKey -ne "") -and ($SQLServer2012ProductKey -ne $Null)</Condition>
                <Value>/PID=`"$SQLServer2012ProductKey`"</Value>
                <Log>/PID=`"*****-*****-*****-*****-*****`"</Log>
              </Switch>
              <Switch>
                <Value>/IACCEPTSQLSERVERLICENSETERMS=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/SQMREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Value>/FEATURES=$SQLFeatures</Value>
              </Switch>
              <Switch>
                <Value>/INSTALLSHAREDDIR=`"$SQLInstallSharedDir`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTALLSHAREDWOWDIR=`"$SQLInstallSharedWOWDir`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCENAME=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCEID=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCEDIR=`"$SQLInstanceDir`"</Value>
              </Switch>
              <Switch>
                <Value>/AGTSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/AGTSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Value>/SQLSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Value>/BROWSERSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLCOLLATION=`"$SQLCollation`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($SQLSecurityMode -eq "SQL")</Condition>
                <Value>/SECURITYMODE=`"SQL`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($SQLSecurityMode -eq "SQL")</Condition>
                <Value>/SAPWD=`"$SQLSAPassword`"</Value>
                <Log>/SAPWD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSYSADMINACCOUNTS=`"$InstallerServiceAccount`" `"$SQLAdmins`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/INSTALLSQLDATADIR=`"$SQLInstallSQLDataDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLUSERDBDIR=`"$SQLUserDBDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLUSERDBLOGDIR=`"$SQLUserDBLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLTEMPDBDIR=`"$SQLTempDBDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLTEMPDBLOGDIR=`"$SQLTempDBLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLBACKUPDIR=`"$SQLBackupDir`"</Value>
              </Switch>
              <Switch>
                <Value>/ERRORREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/TCPENABLED=`"1`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/NPENABLED=`"0`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("FULLTEXT")</Condition>
                <Value>/FTSVCACCOUNT=`"NT AUTHORITY\LOCAL SERVICE`"</Value>
              </Switch>
              <Switch>
                <Value>/RSSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("RS")</Condition>
                <Value>/RSSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("RS")) -and ($SQLFeatures.contains("SQLENGINE"))</Condition>
                <Value>/RSINSTALLMODE=`"DefaultNativeMode`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("RS")) -and !($SQLFeatures.contains("SQLENGINE"))</Condition>
                <Value>/RSINSTALLMODE=`"FilesOnlyMode`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASCOLLATION=`"$SQLCollation`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASPROVIDERMSOLAP=`"1`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSYSADMINACCOUNTS=`"$InstallerServiceAccount`" `"$SQLAdmins`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASDATADIR=`"$SQLASDataDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASLOGDIR=`"$SQLASLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASTEMPDIR=`"$SQLASTempDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASBACKUPDIR=`"$SQLASBackupDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("IS")</Condition>
                <Value>/ISSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("IS")</Condition>
                <Value>/ISSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
<!--Workaround Begin-->
          <CommandLine>
            <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLServiceAccount -ne "")</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name MSSQLSERVER;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name 'MSSQL`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>setspn.exe -D MSSQLSvc/$Server $ServerShort;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>setspn.exe -D MSSQLSvc/$Server`:1433 $ServerShort;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$WQL =  [char]34 + [char]39 + 'SELECT PropertyStrVal FROM ServerNetworkProtocolProperty WHERE InstanceName = ' + [char]39 + '$Instance' + [char]39 + ' AND IPAddressName = ' + [char]39 + 'IPAll' + [char]39 + ' AND PropertyName = ' + [char]39 + 'TcpDynamicPorts' + [char]39 + ' AND ProtocolName = ' + [char]39 + 'Tcp' + [char]39  + [char]34;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$SQLDynamicPort = (Get-WmiObject -query `$WQL -namespace 'root\Microsoft\SqlServer\ComputerManagement11').PropertyStrVal;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>setspn.exe -D MSSQLSvc/$Server`:`$Instance $ServerShort;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>setspn.exe -D MSSQLSvc/$Server`:`$SQLDynamicPort $ServerShort;</Value>
              </Switch>
              <Switch>
                <Value>[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SqlWmiManagement');</Value>
              </Switch>
              <Switch>
                <Value>`$SmoWmi = New-Object ('Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer') `$env:ComputerName;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>`$Service = `$SmoWmi.Services | Where-Object {`$_.Name -eq 'MSSQLSERVER'};</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$Service = `$SmoWmi.Services | Where-Object {`$_.Name -eq 'MSSQL`$$Instance'};</Value>
              </Switch>
              <Switch>
                <Value>`$Service.SetServiceAccount('$SQLServiceAccount','$SQLServiceAccountPassword');</Value>
                <Log>`$Service.SetServiceAccount('$SQLServiceAccount','********');</Log>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name MSSQLSERVER;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name 'MSSQL`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLAgtServiceAccount -ne "")</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Value>[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SqlWmiManagement');</Value>
              </Switch>
              <Switch>
                <Value>`$SmoWmi = New-Object ('Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer') `$env:ComputerName;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>`$Service = `$SmoWmi.Services | Where-Object {`$_.Name -eq 'SQLSERVERAGENT'};</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$Service = `$SmoWmi.Services | Where-Object {`$_.Name -eq 'SQLAGENT`$$Instance'};</Value>
              </Switch>
              <Switch>
                <Value>`$Service.SetServiceAccount('$SQLAgtServiceAccount','$SQLAgtServiceAccountPassword');</Value>
                <Log>`$Service.SetServiceAccount('$SQLAgtServiceAccount','********');</Log>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SQLFeatures.contains("AS") -and ($SQLASServiceAccount -ne "")</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name MSSQLServerOLAPService;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name 'MSOLAP`$$Instance';</Value>
              </Switch>
              <Switch>
                <Value>[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SqlWmiManagement');</Value>
              </Switch>
              <Switch>
                <Value>`$SmoWmi = New-Object ('Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer') `$env:ComputerName;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>`$Service = `$SmoWmi.Services | Where-Object {`$_.Name -eq 'MSSQLServerOLAPService'};</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$Service = `$SmoWmi.Services | Where-Object {`$_.Name -eq 'MSOLAP`$$Instance'};</Value>
              </Switch>
              <Switch>
                <Value>`$Service.SetServiceAccount('$SQLASServiceAccount','$SQLASServiceAccountPassword');</Value>
                <Log>`$Service.SetServiceAccount('$SQLASServiceAccount','********');</Log>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name MSSQLServerOLAPService;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name 'MSOLAP`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
<!--Workaround End-->
          <CommandLine>
            <Condition>($Instance -ne "MSSQLSERVER") -and ($SQLPort -ne $null)</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SqlWmiManagement');</Value>
              </Switch>
              <Switch>
                <Value>`$SmoWmi = New-Object ('Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer') `$env:ComputerName;</Value>
              </Switch>
              <Switch>
                <Value>`$urn = 'ManagedComputer[@Name=' + [char]39 + `$env:ComputerName + [char]39 + ']/ServerInstance[@Name=' + [char]39 + '$Instance' + [char]39 + ']/ServerProtocol[@Name=' + [char]39 + 'Tcp' + [char]39 + ']';</Value>
              </Switch>
              <Switch>
                <Value>`$tcp = `$SmoWmi.GetSmoObject(`$urn);</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$tcp.IPAddresses | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$_.IPAddressProperties | Where-Object {`$_.Name -eq 'TcpDynamicPorts'} | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$_.Value = ''</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$tcp.IPAddresses | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$_.IPAddressProperties | Where-Object {`$_.Name -eq 'TcpPort'} | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$_.Value = '$SQLPort'</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$tcp.Alter();</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Restart-Service -Name MSSQLSERVER;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Restart-Service -Name 'MSSQL`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>             <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SQLFeatures.contains('RS')</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = ((Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $Instance).$Instance);</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRSFile = `$SQLPath + '\RSReportServer.config';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS = [XML] (Get-Content `$RSRSFile);</Value>
              </Switch>
              <Switch>
                <Value>`(`$RSRS.Configuration.Add | Where-Object {`$_.Key -eq 'SecureConnectionLevel'}).Value='0';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS.Save(`$RSRSFile)</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
        <Firewall>
          <Rule>
            <Condition>$SQLFeatures.contains('SQLENGINE')</Condition>
            <Name>SQL Server 2012 Instance $Instance</Name>
            <Type>Application</Type>
            <Value>$SQLInstanceDir\MSSQL11.$Instance\MSSQL\Binn\sqlservr.exe</Value>
          </Rule>
          <Rule>
            <Condition>$SQLFeatures.contains('SQLENGINE')</Condition>
            <Name>SQL Server Browser</Name>
            <Type>Service</Type>
            <Value>SQLBrowser/$SQLInstallSharedWOWDir\90\Shared\sqlbrowser.exe</Value>
          </Rule>
          <Rule>
            <Condition>$SQLFeatures.contains('RS')</Condition>
            <Name>SQL Server Reporting Services</Name>
            <Type>Port</Type>
            <Value>TCP/80</Value>
          </Rule>
          <Rule>
            <Condition>($Instance -eq "MSSQLSERVER") -and ($SQLFeatures.contains('AS'))</Condition>
            <Name>SQL Server 2012 Analysis Services Instance $Instance</Name>
            <Type>Service</Type>
            <Value>MSSQLServerOLAPService/$SQLInstanceDir\MSAS11.$Instance\OLAP\bin\msmdsrv.exe</Value>
          </Rule>
          <Rule>
            <Condition>($Instance -ne "MSSQLSERVER") -and ($SQLFeatures.contains('AS'))</Condition>
            <Name>SQL Server 2012 Analysis Services Instance $Instance</Name>
            <Type>Service</Type>
            <Value>MSOLAP`$$Instance/$SQLInstanceDir\MSAS11.$Instance\OLAP\bin\msmdsrv.exe</Value>
          </Rule>
          <Rule>
            <Condition>$SQLFeatures.contains('IS')</Condition>
            <Name>SQL Server 2012 Integration Services</Name>
            <Type>Application</Type>
            <Value>$SQLInstallSharedDir\110\DTS\Binn\MsDtsSrvr.exe</Value>
          </Rule>
          <Rule>
            <Condition>$SQLFeatures.contains('IS')</Condition>
            <Name>SQL Server 2012 Integration Services</Name>
            <Type>Port</Type>
            <Value>TCP/135</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="SQL Server 2012 Cluster Prepare">
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQLSERVER</Value>
        </Validation>
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQL`$$Instance</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQLServerOLAPService</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSOLAP`$$Instance</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft SQL Server\110\Setup Bootstrap\Log</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SQLServer2012Source\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/SkipRules=Cluster_VerifyForErrors</Value>
              </Switch>
              <Switch>
                <Value>/ACTION=`"PrepareFailoverCluster`"</Value>
              </Switch>
              <Switch>
                <Value>/QUIET=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/UpdateEnabled=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/UpdateSource=`".\Updates`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLServer2012ProductKey -ne "") -and ($SQLServer2012ProductKey -ne $Null)</Condition>
                <Value>/PID=`"$SQLServer2012ProductKey`"</Value>
                <Log>/PID=`"*****-*****-*****-*****-*****`"</Log>
              </Switch>
              <Switch>
                <Value>/IACCEPTSQLSERVERLICENSETERMS=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/SQMREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Value>/FEATURES=$SQLFeatures</Value>
              </Switch>
              <Switch>
                <Value>/INSTALLSHAREDDIR=`"$SQLInstallSharedDir`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTALLSHAREDWOWDIR=`"$SQLInstallSharedWOWDir`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCENAME=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCEID=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCEDIR=`"$SQLInstanceDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/AGTSVCACCOUNT=`"$SQLAgtServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/AGTSVCPASSWORD=`"$SQLAgtServiceAccountPassword`"</Value>
                <Log>/AGTSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSVCACCOUNT=`"$SQLServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSVCPASSWORD=`"$SQLServiceAccountPassword`"</Value>
                <Log>/SQLSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSVCACCOUNT=`"$SQLASServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSVCPASSWORD=`"$SQLASServiceAccountPassword`"</Value>
                <Log>/ASSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Value>/ERRORREPORTING=`"False`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
        <Firewall>
          <Rule>
            <Condition>$SQLFeatures.contains('SQLENGINE')</Condition>
            <Name>SQL Server 2012 Instance $Instance</Name>
            <Type>Application</Type>
            <Value>$SQLInstanceDir\MSSQL11.$Instance\MSSQL\Binn\sqlservr.exe</Value>
          </Rule>
          <Rule>
            <Condition>$Instance -ne "MSSQLSERVER"</Condition>
            <Name>SQL Server Browser</Name>
            <Type>Service</Type>
            <Value>SQLBrowser/$SQLInstallSharedWOWDir\90\Shared\sqlbrowser.exe</Value>
          </Rule>
          <Rule>
            <Condition>$SQLFeatures.contains('RS')</Condition>
            <Name>SQL Server Reporting Services</Name>
            <Type>Port</Type>
            <Value>TCP/80</Value>
          </Rule>
          <Rule>
            <Condition>($Instance -eq "MSSQLSERVER") -and ($SQLFeatures.contains('AS'))</Condition>
            <Name>SQL Server 2012 Analysis Services Instance $Instance</Name>
            <Type>Service</Type>
            <Value>MSSQLServerOLAPService/$SQLInstanceDir\MSAS11.$Instance\OLAP\bin\msmdsrv.exe</Value>
          </Rule>
          <Rule>
            <Condition>($Instance -ne "MSSQLSERVER") -and ($SQLFeatures.contains('AS'))</Condition>
            <Name>SQL Server 2012 Analysis Services Instance $Instance</Name>
            <Type>Service</Type>
            <Value>MSOLAP`$$Instance/$SQLInstanceDir\MSAS11.$Instance\OLAP\bin\msmdsrv.exe</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="SQL Server 2012 Cluster Complete">
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>ServiceRunning</Type>
          <Value>MSSQLSERVER</Value>
        </Validation>
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>ServiceRunning</Type>
          <Value>MSSQL`$$Instance</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>ServiceRunning</Type>
          <Value>MSSQLServerOLAPService</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>ServiceRunning</Type>
          <Value>MSOLAP`$$Instance</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft SQL Server\110\Setup Bootstrap\Log</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SQLServer2012Source\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/SkipRules=Cluster_VerifyForErrors</Value>
              </Switch>
              <Switch>
                <Value>/ACTION=`"CompleteFailoverCluster`"</Value>
              </Switch>
              <Switch>
                <Value>/QUIET=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/IACCEPTSQLSERVERLICENSETERMS=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCENAME=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/FAILOVERCLUSTERNETWORKNAME=`"$SQLClusterShort`"</Value>
              </Switch>
              <Switch>
                <Value>/FAILOVERCLUSTERGROUP=`"$SQLClusterShort`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLClusterDisks -ne $null</Condition>
                <Value>/FAILOVERCLUSTERDISKS=$SQLClusterDisks</Value>
              </Switch>
              <Switch>
                <Condition>$SQLClusterIPAddress -ne $null</Condition>
                <Value>/FAILOVERCLUSTERIPADDRESSES=`"IPv4;$SQLClusterIPAddress;$SQLClusterNetwork;$SQLClusterIPSubnet`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLClusterIPAddress -eq $null</Condition>
                <Value>FAILOVERCLUSTERIPADDRESSES=`"IPv4;DHCP;$SQLClusterNetwork`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLCOLLATION=`"$SQLCollation`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($SQLSecurityMode -eq "SQL")</Condition>
                <Value>/SECURITYMODE=`"SQL`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($SQLSecurityMode -eq "SQL")</Condition>
                <Value>/SAPWD=`"$SQLSAPassword`"</Value>
                <Log>/SAPWD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSYSADMINACCOUNTS=`"$InstallerServiceAccount`" `"$SQLAdmins`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/INSTALLSQLDATADIR=`"$SQLInstallSQLDataDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLUSERDBDIR=`"$SQLUserDBDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLUSERDBLOGDIR=`"$SQLUserDBLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLTEMPDBDIR=`"$SQLTempDBDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLTEMPDBLOGDIR=`"$SQLTempDBLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASCOLLATION=`"$SQLCollation`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSYSADMINACCOUNTS=`"$InstallerServiceAccount`" `"$SQLAdmins`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASDATADIR=`"$SQLASDataDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASLOGDIR=`"$SQLASLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASTEMPDIR=`"$SQLASTempDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASBACKUPDIR=`"$SQLASBackupDir`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>($Instance -ne "MSSQLSERVER") -and ($SQLPort -ne $null)</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SqlWmiManagement');</Value>
              </Switch>
              <Switch>
                <Value>`$SmoWmi = New-Object ('Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer') '$SQLClusterShort';</Value>
              </Switch>
              <Switch>
                <Value>`$urn = 'ManagedComputer[@Name=' + [char]39 + '$SQLClusterShort' + [char]39 + ']/ServerInstance[@Name=' + [char]39 + '$Instance' + [char]39 + ']/ServerProtocol[@Name=' + [char]39 + 'Tcp' + [char]39 + ']';</Value>
              </Switch>
              <Switch>
                <Value>`$tcp = `$SmoWmi.GetSmoObject(`$urn);</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$tcp.IPAddresses | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$_.IPAddressProperties | Where-Object {`$_.Name -eq 'TcpDynamicPorts'} | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>`$_.Value = ''</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$tcp.IPAddresses | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$_.IPAddressProperties | Where-Object {`$_.Name -eq 'TcpPort'} | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$_.Value = '$SQLPort'</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$tcp.Alter();</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Stop-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Restart-Service -Name MSSQLSERVER;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Restart-Service -Name 'MSSQL`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -eq "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name SQLSERVERAGENT;</Value>
              </Switch>
              <Switch>
                <Condition>$Instance -ne "MSSQLSERVER"</Condition>
                <Value>Start-Service -Name 'SQLAGENT`$$Instance';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>             <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="SQL Server 2012 Management Tools">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{7842C220-6E9A-4D5A-AE70-0E138271F883}</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft SQL Server\110\Setup Bootstrap\Log</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SQLServer2012Source\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/ACTION=`"Install`"</Value>
              </Switch>
              <Switch>
                <Value>/QUIET=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/UpdateEnabled=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/UpdateSource=`".\Updates`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLServer2012ProductKey -ne "") -and ($SQLServer2012ProductKey -ne $Null)</Condition>
                <Value>/PID=`"$SQLServer2012ProductKey`"</Value>
                <Log>/PID=`"*****-*****-*****-*****-*****`"</Log>
              </Switch>
              <Switch>
                <Value>/IACCEPTSQLSERVERLICENSETERMS=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/SQMREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Value>/FEATURES=SSMS,ADV_SSMS</Value>
              </Switch>
              <Switch>
                <Value>/ERRORREPORTING=`"False`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="SQL Server 2012 Management Tools Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SQLServer2012ManagementToolsShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft SQL Server 2012' + [char]39 + ' -Application ' + [char]39 + 'SQL Server Management Studio' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SQLServer2012ManagementToolsShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2012 SP1">
      <Variable Name="SQLServer2012SP1Source" Value="SQLServer2012.en\Updates" />
      <SourceFolder>$SQLServer2012SP1Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/3/B/D/3BD9DD65-D3E3-43C3-BB50-0ED850A82AD5/SQLServer2012SP1-KB2674319-x64-ENU.exe</URL>
        <File>SQLServer2012SP1-KB2674319-x64-ENU.exe</File>
        <FileVersion>11.1.3000.0</FileVersion>
      </Download>
    </Installable>
    <Installable Name="SQL Server 2012 SP1 CU7">
      <Variable Name="SQLServer2012SP1Source" Value="SQLServer2012.en\Updates" />
      <SourceFolder>$SQLServer2012SP1Source</SourceFolder>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://hotfixv4.microsoft.com/SQL%20Server%202012/sp1/SQLServer2012_SP1_CU7_2894115_11_0_3393_/11.0.3393.0/free/470544_intl_x64_zip.exe</URL>
        <File>470544_intl_x64_zip.exe</File>
        <Extract>
          <Type>Zip</Type>
          <ExistingFile>SQLServer2012-KB2894115-x64.exe</ExistingFile>
          <FileVersion>11.1.3393.0</FileVersion>
        </Extract>
      </Download>
    </Installable>
    <Installable Name="SQL Server 2008 R2">
      <Variable Name="SQLServer2008R2Source" Value="SQLServer2008R2" />
      <SourceFolder>$SQLServer2008R2Source</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/D/8/0/D808E432-5AC6-4DA5-A087-21947AC4AC5F/1033/SQLFULL_x64_ENU.exe</URL>
        <File>SQLFULL_x64_ENU.exe</File>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>10.50.4000.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SQLFULL_x64_ENU.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <AdditionalDownload>SQL Server 2008 R2 SP2</AdditionalDownload>
      <Install Name="SQL Server 2008 R2">
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQLSERVER</Value>
        </Validation>
        <Validation>
          <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQL`$$Instance</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSSQLServerOLAPService</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and ($SQLFeatures.contains("AS")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>MSOLAP`$$Instance</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and !($SQLFeatures.contains("AS")) -and ($SQLFeatures.contains("RS")) -and ($Instance -eq "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>ReportServer</Value>
        </Validation>
        <Validation>
          <Condition>!($SQLFeatures.contains("SQLENGINE")) -and !($SQLFeatures.contains("AS")) -and ($SQLFeatures.contains("RS")) -and ($Instance -ne "MSSQLSERVER")</Condition>
          <Type>Service</Type>
          <Value>ReportServer`$$Instance</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft SQL Server\100\Setup Bootstrap\Log</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SQLServer2008R2Source\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/ACTION=`"Install`"</Value>
              </Switch>
              <Switch>
                <Value>/QUIET=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/PCUSOURCE=`"$TempPath\Installer\$SQLServer2008R2Source\PCU`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLServer2008R2ProductKey -ne "") -and ($SQLServer2008R2ProductKey -ne $Null)</Condition>
                <Value>/PID=`"$SQLServer2008R2ProductKey`"</Value>
                <Log>/PID=`"*****-*****-*****-*****-*****`"</Log>
              </Switch>
              <Switch>
                <Value>/IACCEPTSQLSERVERLICENSETERMS=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/SQMREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Value>/FEATURES=$SQLFeatures</Value>
              </Switch>
              <Switch>
                <Value>/INSTALLSHAREDDIR=`"$SQLInstallSharedDir`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTALLSHAREDWOWDIR=`"$SQLInstallSharedWOWDir`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCENAME=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCEID=`"$Instance`"</Value>
              </Switch>
              <Switch>
                <Value>/INSTANCEDIR=`"$SQLInstanceDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLAgtServiceAccount -eq "")</Condition>
                <Value>/AGTSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLAgtServiceAccount -ne "")</Condition>
                <Value>/AGTSVCACCOUNT=`"$SQLAgtServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLAgtServiceAccount -ne "")</Condition>
                <Value>/AGTSVCPASSWORD=`"$SQLAgtServiceAccountPassword`"</Value>
                <Log>/AGTSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/AGTSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLServiceAccount -eq "")</Condition>
                <Value>/SQLSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLServiceAccount -ne "")</Condition>
                <Value>/SQLSVCACCOUNT=`"$SQLServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE") -and ($SQLServiceAccount -ne "")</Condition>
                <Value>/SQLSVCPASSWORD=`"$SQLServiceAccountPassword`"</Value>
                <Log>/SQLSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Value>/BROWSERSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLCOLLATION=`"$SQLCollation`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($SQLSecurityMode -eq "SQL")</Condition>
                <Value>/SECURITYMODE=`"SQL`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("SQLENGINE")) -and ($SQLSecurityMode -eq "SQL")</Condition>
                <Value>/SAPWD=`"$SQLSAPassword`"</Value>
                <Log>/SAPWD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLSYSADMINACCOUNTS=`"$InstallerServiceAccount`" `"$SQLAdmins`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/INSTALLSQLDATADIR=`"$SQLInstallSQLDataDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLUSERDBDIR=`"$SQLUserDBDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLUSERDBLOGDIR=`"$SQLUserDBLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLTEMPDBDIR=`"$SQLTempDBDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLTEMPDBLOGDIR=`"$SQLTempDBLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/SQLBACKUPDIR=`"$SQLBackupDir`"</Value>
              </Switch>
              <Switch>
                <Value>/ERRORREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/TCPENABLED=`"1`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("SQLENGINE")</Condition>
                <Value>/NPENABLED=`"0`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("FULLTEXT")</Condition>
                <Value>/FTSVCACCOUNT=`"NT AUTHORITY\LOCAL SERVICE`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("RS") -and ($SQLRSServiceAccount -eq "")</Condition>
                <Value>/RSSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("RS") -and ($SQLRSServiceAccount -ne "")</Condition>
                <Value>/RSSVCACCOUNT=`"$SQLRSServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("RS") -and ($SQLRSServiceAccount -ne "")</Condition>
                <Value>/RSSVCPASSWORD=`"$SQLRSServiceAccountPassword`"</Value>
                <Log>/RSSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("RS")) -and ($SQLFeatures.contains("SQLENGINE"))</Condition>
                <Value>/RSINSTALLMODE=`"DefaultNativeMode`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLFeatures.contains("RS")) -and !($SQLFeatures.contains("SQLENGINE"))</Condition>
                <Value>/RSINSTALLMODE=`"FilesOnlyMode`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS") -and ($SQLASServiceAccount -eq "")</Condition>
                <Value>/ASSVCACCOUNT=`"NT AUTHORITY\SYSTEM`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS") -and ($SQLASServiceAccount -ne "")</Condition>
                <Value>/ASSVCACCOUNT=`"$SQLASServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS") -and ($SQLASServiceAccount -ne "")</Condition>
                <Value>/ASSVCPASSWORD=`"$SQLASServiceAccountPassword`"</Value>
                <Log>/ASSVCPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSVCSTARTUPTYPE=`"Automatic`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASCOLLATION=`"$SQLCollation`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASPROVIDERMSOLAP=`"1`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASSYSADMINACCOUNTS=`"$InstallerServiceAccount`" `"$SQLAdmins`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASDATADIR=`"$SQLASDataDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASLOGDIR=`"$SQLASLogDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASTEMPDIR=`"$SQLASTempDir`"</Value>
              </Switch>
              <Switch>
                <Condition>$SQLFeatures.contains("AS")</Condition>
                <Value>/ASBACKUPDIR=`"$SQLASBackupDir`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SQLFeatures.contains('RS')</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = ((Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $Instance).$Instance);</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRSFile = `$SQLPath + '\RSReportServer.config';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS = [XML] (Get-Content `$RSRSFile);</Value>
              </Switch>
              <Switch>
                <Value>`(`$RSRS.Configuration.Add | Where-Object {`$_.Key -eq 'SecureConnectionLevel'}).Value='0';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS.Save(`$RSRSFile)</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
        <Firewall>
          <Rule>
            <Condition>$SQLFeatures.contains('SQLENGINE')</Condition>
            <Name>SQL Server 2008 R2 Instance $Instance</Name>
            <Type>Application</Type>
            <Value>$SQLInstanceDir\MSSQL10_50.$Instance\MSSQL\Binn\sqlservr.exe</Value>
          </Rule>
          <Rule>
            <Condition>$Instance -ne "MSSQLSERVER"</Condition>
            <Name>SQL Server Browser</Name>
            <Type>Service</Type>
            <Value>SQLBrowser/$SQLInstallSharedWOWDir\90\Shared\sqlbrowser.exe</Value>
          </Rule>
          <Rule>
            <Condition>$SQLFeatures.contains('RS')</Condition>
            <Name>SQL Server Reporting Services</Name>
            <Type>Port</Type>
            <Value>TCP/80</Value>
          </Rule>
          <Rule>
            <Condition>($Instance -eq "MSSQLSERVER") -and ($SQLFeatures.contains('AS'))</Condition>
            <Name>SQL Server 2008 R2 Analysis Services Instance $Instance</Name>
            <Type>Service</Type>
            <Value>MSSQLServerOLAPService/$SQLInstanceDir\MSAS10_50.$Instance\OLAP\bin\msmdsrv.exe</Value>
          </Rule>
          <Rule>
            <Condition>($Instance -ne "MSSQLSERVER") -and ($SQLFeatures.contains('AS'))</Condition>
            <Name>SQL Server 2008 R2 Analysis Services Instance $Instance</Name>
            <Type>Service</Type>
            <Value>MSOLAP`$$Instance/$SQLInstanceDir\MSAS10_50.$Instance\OLAP\bin\msmdsrv.exe</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="SQL Server 2008 R2 Management Tools">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{72AB7E6F-BC24-481E-8C45-1AB5B3DD795D}</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft SQL Server\100\Setup Bootstrap\Log</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SQLServer2008R2Source\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/ACTION=`"Install`"</Value>
              </Switch>
              <Switch>
                <Value>/QUIET=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/PCUSOURCE=`"$TempPath\Installer\$SQLServer2008R2Source\PCU`"</Value>
              </Switch>
              <Switch>
                <Condition>($SQLServer2008R2ProductKey -ne "") -and ($SQLServer2008R2ProductKey -ne $Null)</Condition>
                <Value>/PID=`"$SQLServer2008R2ProductKey`"</Value>
                <Log>/PID=`"*****-*****-*****-*****-*****`"</Log>
              </Switch>
              <Switch>
                <Value>/IACCEPTSQLSERVERLICENSETERMS=`"True`"</Value>
              </Switch>
              <Switch>
                <Value>/SQMREPORTING=`"False`"</Value>
              </Switch>
              <Switch>
                <Value>/FEATURES=SSMS,ADV_SSMS</Value>
              </Switch>
              <Switch>
                <Value>/ERRORREPORTING=`"False`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 R2 SP2">
      <Variable Name="SQLServer2008R2SP2Source" Value="SQLServer2008R2" />
      <SourceFolder>$SQLServer2008R2SP2Source</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/3/D/C/3DC6663D-8A76-40A6-BCF2-2808C385D56A/SQLServer2008R2SP2-KB2630458-x64-ENU.exe</URL>
        <File>SQLServer2008R2SP2-KB2630458-x64-ENU.exe</File>
        <Run>
          <ExistingFile>PCU\setup.exe</ExistingFile>
          <FileVersion>10.50.4000.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SQLServer2008R2SP2-KB2630458-x64-ENU.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder\PCU</Argument>
        </Run>
        <Run>
          <Command>robocopy.exe</Command>
          <Argument>$Download\$DownloadFolder\PCU $Download\$DownloadFolder setup.exe</Argument>
        </Run>
        <Run>
          <Command>robocopy.exe</Command>
          <Argument>$Download\$DownloadFolder\PCU\x64 $Download\$DownloadFolder\x64 /xf microsoft.sql.chainer.packagedata.dll</Argument>
        </Run>
      </Download>
    </Installable>
    <Installable Name=".NET Framework 4.0 Full">
      <Variable Name="NETFramework40FullSource" Value="Prerequisites\NetFx40" />
      <SourceFolder>$NETFramework40FullSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/9/5/A/95A9616B-7A37-4AF6-BC36-D6EA96C8DAAE/dotNetFx40_Full_x86_x64.exe</URL>
        <File>dotNetFx40_Full_x86_x64.exe</File>
        <FileVersion>4.0.30319.01</FileVersion>
      </Download>
      <Install Name=".NET Framework 4.0 Full">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{8E34682C-8118-31F1-BC4C-98CD9675E1C2}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$NETFramework40FullSource\dotNetFx40_Full_x86_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/norestart</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 R2 Native Client">
      <Variable Name="SQLServer2008R2NativeClientSource" Value="Prerequisites\SQL2008R2NC" />
      <SourceFolder>$SQLServer2008R2NativeClientSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://go.microsoft.com/fwlink/?LinkID=188401</URL>
        <File>sqlncli.msi</File>
        <FileSize>8113152</FileSize>
      </Download>
      <Install Name="SQL Server 2008 R2 Native Client">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{2180B33F-3225-423E-BBC1-7798CFD3CD1F}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2008R2NativeClientSource\SQLNCli.msi</Value>
              </Switch>
              <Switch>
                <Value>IACCEPTSQLNCLILICENSETERMS=YES</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 R2 Command Line Utilities">
      <Variable Name="SQLServer2008R2CommandLineUtilitiesSource" Value="Prerequisites\SQL2008R2CLU" />
      <SourceFolder>$SQLServer2008R2CommandLineUtilitiesSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://go.microsoft.com/fwlink/?LinkID=188430</URL>
        <File>SqlCmdLnUtils.msi</File>
        <FileSize>12497408</FileSize>
      </Download>
      <Install Name="SQL Server 2008 R2 Command Line Utilities">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D9F711D3-3C90-4D79-9292-47C90C722E2A}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2008R2CommandLineUtilitiesSource\SQLCmdLnUtils.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 R2 Analysis Management Objects">
      <Variable Name="SQLServer2008R2AnalysisManagementObjectsSource" Value="Prerequisites\SQL2008R2AMO" />
      <SourceFolder>$SQLServer2008R2AnalysisManagementObjectsSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://go.microsoft.com/fwlink/?LinkID=188448</URL>
        <File>SQLSERVER2008_ASAMO10.msi</File>
        <FileSize>4763648</FileSize>
      </Download>
      <Install Name="SQL Server 2008 R2 Analysis Management Objects">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{1D1B79DF-69ED-424E-B881-9F7C89D6524F}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2008R2AnalysisManagementObjectsSource\SQLSERVER2008_ASAMO10.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Server Update Services 3.0 SP2">
      <Variable Name="WindowsServerUpdateServices30SP2Source" Value="Prerequisites\WSUS30SP2" />
      <SourceFolder>$WindowsServerUpdateServices30SP2Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/B/0/6/B06A69C3-CF97-42CF-86BF-3C59D762E0B2/WSUS30-KB972455-x64.exe</URL>
        <File>WSUS30-KB972455-x64.exe</File>
        <FileVersion>6.2.0029.0</FileVersion>
      </Download>
      <Install Name="Windows Server Update Services 3.0 SP2 Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{77846B52-14C9-4FC4-BE63-FE06AF501442}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsServerUpdateServices30SP2Source\WSUS30-KB972455-x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>CONSOLE_INSTALL=1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="ASP.NET Web Pages 2">
      <Variable Name="ASPNETWebPages2Source" Value="Prerequisites\ASPNETWebPages2" />
      <SourceFolder>$ASPNETWebPages2Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/2/D/C/2DCA2ADA-AD18-40FC-9F2D-715977CB2FCC/AspNetWebPages2Setup.exe</URL>
        <File>AspNetWebPages2Setup.exe</File>
        <FileVersion>2.0.20715.0</FileVersion>
      </Download>
      <Install Name="ASP.NET Web Pages 2">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{EA63C5C1-EBBC-477C-9CC7-41454DDFAFF2}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$ASPNETWebPages2Source\AspNetWebPages2Setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Visual C++ 2008 Redistributable">
      <Variable Name="VisualCPP2008Redistributable" Value="Prerequisites\VC2008" />
      <SourceFolder>$VisualCPP2008Redistributable</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/d/2/4/d242c3fb-da5a-4542-ad66-f9661d0a8d19/vcredist_x64.exe</URL>
        <File>vcredist_x64.exe</File>
        <FileVersion>9.0.21022.08</FileVersion>
      </Download>
      <Install Name="Visual C++ 2008 Redistributable">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{350AA351-21FA-3270-8B7A-835434E766AD}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$VisualCPP2008Redistributable\vcredist_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Visual C++ 2010 Redistributable">
      <Variable Name="VisualCPP2010Redistributable" Value="Prerequisites\VC2010" />
      <SourceFolder>$VisualCPP2010Redistributable</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/A/8/0/A80747C3-41BD-45DF-B505-E9710D2744E0/vcredist_x64.exe</URL>
        <File>vcredist_x64.exe</File>
        <FileVersion>10.0.40219.01</FileVersion>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/C/6/D/C6D0FD4E-9E53-4897-9B91-836EBA2AACD3/vcredist_x86.exe</URL>
        <File>vcredist_x86.exe</File>
        <FileVersion>10.0.40219.01</FileVersion>
      </Download>
      <Install Name="Visual C++ 2010 Redistributable x64">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{1D8E6291-B0D5-35EC-8441-6616F567A0F7}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$VisualCPP2010Redistributable\vcredist_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Visual C++ 2010 Redistributable x86">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{F0C3E5D1-1ADE-321E-8167-68EF0DE699A5}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$VisualCPP2010Redistributable\vcredist_x86.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Visual C++ 2012 Redistributable">
      <Variable Name="VisualCPP2012Redistributable" Value="Prerequisites\VC2012" />
      <SourceFolder>$VisualCPP2012Redistributable</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU1/vcredist_x64.exe</URL>
        <File>vcredist_x64.exe</File>
        <FileVersion>11.0.51106.1</FileVersion>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU1/vcredist_x86.exe</URL>
        <File>vcredist_x86.exe</File>
        <FileVersion>11.0.51106.1</FileVersion>
      </Download>
      <Install Name="Visual C++ 2012 Redistributable x64">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{5AF4E09F-5C9B-3AAF-B731-544D3DC821DD}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$VisualCPP2012Redistributable\vcredist_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Visual C++ 2012 Redistributable x86">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{E824E81C-80A4-3DFF-B5F9-4842A9FF5F7F}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$VisualCPP2012Redistributable\vcredist_x86.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="URL Rewrite 2">
      <Variable Name="URLRewrite2Source" Value="Prerequisites\URLRewrite2" />
      <SourceFolder>$URLRewrite2Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/6/7/D/67D80164-7DD0-48AF-86E3-DE7A182D6815/rewrite_amd64_en-US.msi</URL>
        <File>rewrite_amd64_en-US.msi</File>
        <FileSize>6391296</FileSize>
      </Download>
      <Install Name="URL Rewrite 2">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{EB675D0A-2C95-405B-BEE8-B42A65D23E11}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>net.exe</Executable>
            <Switches>
              <Switch>
                <Value>stop</Value>
              </Switch>
              <Switch>
                <Value>was</Value>
              </Switch>
              <Switch>
                <Value>/y</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$URLRewrite2Source\rewrite_amd64_en-US.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>net.exe</Executable>
            <Switches>
              <Switch>
                <Value>start</Value>
              </Switch>
              <Switch>
                <Value>w3svc</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>net.exe</Executable>
            <Switches>
              <Switch>
                <Value>start</Value>
              </Switch>
              <Switch>
                <Value>was</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="MySQL Connector Net 6.5.4">
      <Variable Name="MySQLConnectorNet654Source" Value="Prerequisites\MySQLConnectorNet654" />
      <SourceFolder>$MySQLConnectorNet654Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://mysql.mirrors.pair.com/Downloads/Connector-Net/mysql-connector-net-6.5.4.msi</URL>
        <File>mysql-connector-net-6.5.4.msi</File>
        <FileSize>13426688</FileSize>
      </Download>
      <Install Name="MySQL Connector Net 6.5.4">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{92E19B5A-1985-49BF-9022-9CF4AD652C72}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$MySQLConnectorNet654Source\mysql-connector-net-6.5.4.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="ASP.NET MVC 3">
      <Variable Name="ASPNETMVC3Source" Value="Prerequisites\ASPNETMVC3" />
      <SourceFolder>$ASPNETMVC3Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/3/1/F31EF055-3C46-4E35-AB7B-3261A303A3B6/AspNetMVC3ToolsUpdateSetup.exe</URL>
        <File>AspNetMVC3ToolsUpdateSetup.exe</File>
        <FileVersion></FileVersion>
      </Download>
      <Install Name="ASP.NET MVC 3">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{DCDEC776-BADD-48B9-8F9A-DFF513C3D7FA}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$ASPNETMVC3Source\AspNetMVC3ToolsUpdateSetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="ASP.NET MVC 4">
      <Variable Name="ASPNETMVC4Source" Value="Prerequisites\ASPNETMVC4" />
      <SourceFolder>$ASPNETMVC4Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/2/F/6/2F63CCD8-9288-4CC8-B58C-81D109F8F5A3/AspNetMVC4Setup.exe</URL>
        <File>AspNetMVC4Setup.exe</File>
        <FileVersion>4.0.20714.0</FileVersion>
      </Download>
      <Install Name="ASP.NET MVC 4">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{942CC691-5B98-42A3-8BC5-A246BA69D983}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$ASPNETMVC4Source\AspNetMVC4Setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Automated Deployment Kit 8.1">
      <Variable Name="WindowsAutomatedDeploymentKit81Source" Value="Prerequisites\ADK81" />
      <SourceFolder>$WindowsAutomatedDeploymentKit81Source</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/6/A/E/6AEA92B0-A412-4622-983E-5B305D2EBE56/adk/adksetup.exe</URL>
        <File>adksetup.exe</File>
        <Run>
          <ExistingFile>adksetup.exe</ExistingFile>
          <FileVersion>8.100.26020</FileVersion>
          <Command>$Download\Download\$DownloadFolder\adksetup.exe</Command>
          <Argument>/silent /layout $Download\$DownloadFolder</Argument>
        </Run>
      </Download>      
      <Install Name="Windows Deployment Tools 8.1">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{FEA31583-30A7-0951-718C-AF75DCB003B1}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsAutomatedDeploymentKit81Source\adksetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/features OptionId.DeploymentTools</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Preinstallation Environment 8.1">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{6FDE09DB-D711-593B-0823-D99D2A757227}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsAutomatedDeploymentKit81Source\adksetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/features OptionId.WindowsPreinstallationEnvironment</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="User State Migration Tool 8.1">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{0C4384AC-02DB-B4E5-E537-EE6CF22392CF}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsAutomatedDeploymentKit81Source\adksetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/features OptionId.UserStateMigrationTool</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2012 Native Client">
      <Variable Name="SQLServer2012NativeClientSource" Value="Prerequisites\SQL2012NC" />
      <SourceFolder>$SQLServer2012NativeClientSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://go.microsoft.com/fwlink/?LinkID=239648</URL>
        <File>sqlncli.msi</File>
        <FileSize>5074944</FileSize>
      </Download>
      <Install Name="SQL Server 2012 Native Client">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{49D665A2-4C2A-476E-9AB8-FCC425F526FC}/{FD91CA5F-6BBD-4AC5-A649-09E9E57CFD1E}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2012NativeClientSource\SQLNCli.msi</Value>
              </Switch>
              <Switch>
                <Value>IACCEPTSQLNCLILICENSETERMS=YES</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2012 Command Line Utilities">
      <Variable Name="SQLServer2012CommandLineUtilitiesSource" Value="Prerequisites\SQL2012CLU" />
      <SourceFolder>$SQLServer2012CommandLineUtilitiesSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://go.microsoft.com/fwlink/?LinkID=239650</URL>
        <File>SqlCmdLnUtils.msi</File>
        <FileSize>2420736</FileSize>
      </Download>
      <Install Name="SQL Server 2012 Command Line Utilities">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{9D573E71-1077-4C7E-B4DB-4E22A5D2B48B}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2012CommandLineUtilitiesSource\SQLCmdLnUtils.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Silverlight">
      <Variable Name="SilverlightSource" Value="Prerequisites\Silverlight" />
      <SourceFolder>$SilverlightSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/5/A/C/5AC56802-B26B-4876-8872-7303C8F27072/20125.00/runtime/Silverlight_x64.exe </URL>
        <File>Silverlight_x64.exe</File>
        <FileVersion>5.5.0031.0</FileVersion>
      </Download>
      <Install Name="Silverlight">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{89F4137D-6C26-4A84-BDB8-2E5A4BB71E00}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SilverlightSource\Silverlight_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2012 Analysis Management Objects">
      <Variable Name="SQLServer2012AnalysisManagementObjectsSource" Value="Prerequisites\SQL2012AMO" />
      <SourceFolder>$SQLServer2012AnalysisManagementObjectsSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://go.microsoft.com/fwlink/?LinkID=239666</URL>
        <File>SQL_AS_AMO.msi</File>
        <FileSize>2772992</FileSize>
      </Download>
      <Install Name="SQL Server 2012 Analysis Management Objects">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{33370E75-B064-4025-9702-04E0DAEB6A80}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2012AnalysisManagementObjectsSource\SQL_AS_AMO.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2012 System CLR Types">
      <Variable Name="SQLServer2012SystemCLRTypesSource" Value="Prerequisites\SQL2012CLR" />
      <SourceFolder>$SQLServer2012SystemCLRTypesSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/E/D/FEDB200F-DE2A-46D8-B661-D019DFE9D470/ENU/x64/SQLSysClrTypes.msi</URL>
        <File>SQLSysClrTypes.msi</File>
        <FileSize>2519040</FileSize>
      </Download>
      <Install Name="SQL Server 2012 System CLR Types">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{F1949145-EB64-4DE7-9D81-E6D27937146C}/{99AC7F47-A4E0-4706-9C65-8948775C2652}/{05FF8209-C4F1-4C77-BC28-791653156D20}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2012SystemCLRTypesSource\SQLSysClrTypes.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2012 Shared Management Objects">
      <Variable Name="SQLServer2012SharedManagementObjectsSource" Value="Prerequisites\SQL2012SMO" />
      <SourceFolder>$SQLServer2012SharedManagementObjectsSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/E/D/FEDB200F-DE2A-46D8-B661-D019DFE9D470/ENU/x64/SharedManagementObjects.msi</URL>
        <File>SharedManagementObjects.msi</File>
        <FileSize>7667712</FileSize>
      </Download>
      <Install Name="SQL Server 2012 Shared Management Objects">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{FA0A244E-F3C2-4589-B42A-3D522DE79A42}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2012SharedManagementObjectsSource\SharedManagementObjects.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="PowerShell Extensions for SQL Server 2012">
      <Variable Name="PowerShellExtensionsforSQLServer2012Source" Value="Prerequisites\SQL2012PS" />
      <SourceFolder>$PowerShellExtensionsforSQLServer2012Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/E/D/FEDB200F-DE2A-46D8-B661-D019DFE9D470/ENU/x64/PowerShellTools.msi</URL>
        <File>PowerShellTools.msi</File>
        <FileSize>2322432</FileSize>
      </Download>
      <Install Name="PowerShell Extensions for SQL Server 2012">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{F353325D-DA71-4F50-878D-A704A35D10BB}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$PowerShellExtensionsforSQLServer2012Source\PowerShellTools.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Report Viewer 2012 Redistributable">
      <Variable Name="ReportViewer2012RedistributableSource" Value="Prerequisites\RV2012" />
      <SourceFolder>$ReportViewer2012RedistributableSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/B/7/FB728406-A1EE-4AB5-9C56-74EB8BDDF2FF/ReportViewer.msi</URL>
        <File>ReportViewer.msi</File>
        <FileSize>7622656</FileSize>
      </Download>
      <Install Name="Report Viewer 2012 Redistributable">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{421B88F8-D7C9-44CB-8B73-166D65B18DCC}/{9CCE40CE-A9E6-4916-8729-B008558EEF3F}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$ReportViewer2012RedistributableSource\ReportViewer.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Report Viewer 2010 Redistributable">
      <Variable Name="ReportViewer2010RedistributableSource" Value="Prerequisites\RV2010" />
      <SourceFolder>$ReportViewer2010RedistributableSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/E/A/1/EA1BF9E8-D164-4354-8959-F96843DD8F46/ReportViewer.exe</URL>
        <File>ReportViewer.exe</File>
        <FileVersion>10.0.30319.01</FileVersion>
      </Download>
      <Install Name="Report Viewer 2010 Redistributable">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{C19B3EB6-B54C-3204-A4DF-88432E0C79F7}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$ReportViewer2010RedistributableSource\ReportViewer.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Report Viewer 2008 SP1 Redistributable">
      <Variable Name="ReportViewer2008SP1RedistributableSource" Value="Prerequisites\RV2008" />
      <SourceFolder>$ReportViewer2008SP1RedistributableSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/0/4/F/04F99ADD-9E02-4C40-838E-76A95BCEFB8B/ReportViewer.exe</URL>
        <File>ReportViewer.exe</File>
        <FileVersion>9.0.30729.4402</FileVersion>
      </Download>
      <Install Name="Report Viewer 2008 SP1 Redistributable">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{CED243AB-C7BA-3D42-9609-14EF5A6FC601}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$ReportViewer2008SP1RedistributableSource\ReportViewer.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 Native Client">
      <Variable Name="SQLServer2008NativeClientSource" Value="Prerequisites\SQL2008NC" />
      <SourceFolder>$SQLServer2008NativeClientSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/3/5/5/35522a0d-9743-4b8c-a5b3-f10529178b8a/sqlncli.msi</URL>
        <File>sqlncli.msi</File>
        <FileSize>8073728</FileSize>
      </Download>
      <Install Name="SQL Server 2008 Native Client">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{C79A7EAB-9D6F-4072-8A6D-F8F54957CD93}/{BBDE8A3D-64A2-43A6-95F3-C27B87DF7AC1}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2008NativeClientSource\SQLNCli.msi</Value>
              </Switch>
              <Switch>
                <Value>IACCEPTSQLNCLILICENSETERMS=YES</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Identity Foundation 3.5">
      <Variable Name="WindowsIdentityFoundation35Source" Value="Prerequisites\WIF35" />
      <SourceFolder>$WindowsIdentityFoundation35Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/D/7/2/D72FD747-69B6-40B7-875B-C2B40A6B2BDD/Windows6.1-KB974405-x64.msu</URL>
        <File>Windows6.1-KB974405-x64.msu</File>
        <FileSize>1545666</FileSize>
      </Download>
      <Install Name="Windows Identity Foundation 3.5 - Windows 6.1 x64">
        <Validation>
          <Type>QFE</Type>
          <Value>KB974405</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>wusa.exe</Executable>
            <Switches>
              <Switch>
                <Value>$TempPath\Installer\$WindowsIdentityFoundation35Source\Windows6.1-KB974405-x64.msu</Value>
              </Switch>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/norestart</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Sync Framework Runtime 1.0">
      <Variable Name="SyncFrameworkRuntime10Source" Value="Prerequisites\WSF" />
      <SourceFolder>$SyncFrameworkRuntime10Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/C/9/F/C9F6B386-824B-4F9E-BD5D-F95BB254EC61/Redist/amd64/Microsoft%20Sync%20Framework/Synchronization.msi</URL>
        <File>Synchronization.msi</File>
        <FileSize>2725376</FileSize>
      </Download>
      <Install Name="Sync Framework Runtime 1.0">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{53D7A054-4598-4947-A159-E8FCC77720AB}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SyncFrameworkRuntime10Source\Synchronization.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Microsoft Chart Controls">
      <Variable Name="MicrosoftChartControlsSource" Value="Prerequisites\Chart" />
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/c/c/4/cc4dcac6-ea60-4868-a8e0-62a8510aa747/MSChart.exe</URL>
        <File>MSChart.exe</File>
        <FileVersion>9.0.30729.116</FileVersion>
      </Download>
      <SourceFolder>$MicrosoftChartControlsSource</SourceFolder>
      <Install Name="Microsoft Chart Controls">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Program Files (x86)\Microsoft Chart Controls\Assemblies\System.Web.DataVisualization.dll</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$MicrosoftChartControlsSource\MSChart.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Filter Pack 2.0">
      <Variable Name="FilterPack20Source" Value="Prerequisites\FilterPack20" />
      <SourceFolder>$FilterPack20Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/0/A/2/0A28BBFA-CBFA-4C03-A739-30CCA5E21659/FilterPack64bit.exe</URL>
        <File>FilterPack64bit.exe</File>
        <FileVersion>14.0.4730.1010</FileVersion>
      </Download>
      <Install Name="Filter Pack 2.0">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{95140000-2000-0409-1000-0000000FF1CE}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$FilterPack20Source\FilterPack64bit.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 Analysis Services ADOMD.NET">
      <Variable Name="SQLServer2008AnalysisServicesADOMDSource" Value="Prerequisites\SQL2008ADOMD" />
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/A/D/0/AD021EF1-9CBC-4D11-AB51-6A65019D4706/SQLSERVER2008_ASADOMD10.msi</URL>
        <File>SQLSERVER2008_ASADOMD10.msi</File>
        <FileSize>7090176</FileSize>
      </Download>
      <SourceFolder>$SQLServer2008AnalysisServicesADOMDSource</SourceFolder>
      <Install Name="SQL Server 2008 Analysis Services ADOMD.NET">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{68442820-C846-4E8A-8D53-EDEDD1511CDE}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2008AnalysisServicesADOMDSource\SQLSERVER2008_ASADOMD10.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Server Speech Platform Runtime">
      <Variable Name="ServerSpeechPlatformRuntimeSource" Value="Prerequisites\Speech" />
      <SourceFolder>$ServerSpeechPlatformRuntimeSource</SourceFolder>
      <Download>
        <Type>Download</Type>
          <URL>http://download.microsoft.com/download/8/D/F/8DFE3CE7-6424-4801-90C3-85879DE2B3DE/Platform/x64/SpeechPlatformRuntime.msi</URL>
        <File>SpeechPlatformRuntime.msi</File>
        <FileSize>2950656</FileSize>
      </Download>
      <Install Name="Server Speech Platform Runtime">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{2DEE0FC0-72EE-4AC1-82DF-1E4AE8155B75}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$ServerSpeechPlatformRuntimeSource\SpeechPlatformRuntime.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Server Speech Recognition Language en-US">
      <Variable Name="ServerSpeechRecognitionLanguageenUSSource" Value="Prerequisites\Speech" />
      <SourceFolder>$ServerSpeechRecognitionLanguageenUSSource</SourceFolder>
      <Download>
        <Type>Download</Type>
          <URL>http://download.microsoft.com/download/E/0/3/E033A120-73D0-4629-8AED-A1D728CB6E34/SR/MSSpeech_SR_en-US_TELE.msi</URL>
        <File>MSSpeech_SR_en-US_TELE.msi</File>
        <FileSize>24560640</FileSize>
      </Download>
      <Install Name="Server Speech Recognition Language en-US">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{66D57636-BD4B-402F-9E7D-5E89C28C8136}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$ServerSpeechRecognitionLanguageenUSSource\MSSpeech_SR_en-US_TELE.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SQL Server 2008 R2 SP2 SSRS">
      <Variable Name="SQLServer2008R2SP2SSRSSource" Value="Prerequisites\SQL2008R2RSSP" />
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/1/0/F/10F1C44B-6607-41ED-9E82-DF7003BFBC40/rsSharePoint.msi</URL>
        <File>rsSharePoint.msi</File>
        <FileSize>38784000</FileSize>
      </Download>
      <SourceFolder>$SQLServer2008R2SP2SSRSSource</SourceFolder>
      <Install Name="SQL Server 2008 R2 SP2 SSRS">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D8D77D54-55A5-49A7-AE6D-DC9653507D49}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SQLServer2008R2SP2SSRSSource\rsSharePoint.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SharePoint 2010 Module">
      <Variable Name="SharePoint2010ModuleSource" Value="SharePoint2010Module" />
      <SourceFolder>$SharePoint2010ModuleSource</SourceFolder>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://download.microsoft.com/download/A/8/F/A8FB4651-86D6-440E-9F41-8F638E1FDDDE/SPModule.zip</URL>
        <File>SPModule.zip</File>
        <Extract>
          <Type>Zip</Type>
          <ExistingFile>SPModule\SPModule.setup\Install-SharePoint.ps1</ExistingFile>
          <FileSize>25460</FileSize>
        </Extract>
      </Download>
      <Install Name="SharePoint 2010 Module misc">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Windows\System32\WindowsPowershell\v1.0\Modules\SPModule.misc</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>robocopy.exe</Executable>
            <Switches>
              <Switch>
                <Value>$TempPath\Installer\$SharePoint2010ModuleSource\SPModule\SPModule.misc</Value>
              </Switch>
              <Switch>
                <Value>$WinDir\System32\WindowsPowerShell\v1.0\Modules\SPModule.misc</Value>
              </Switch>
              <Switch>
                <Value>/e</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="SharePoint 2010 Module setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Windows\System32\WindowsPowershell\v1.0\Modules\SPModule.setup</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>robocopy.exe</Executable>
            <Switches>
              <Switch>
                <Value>$TempPath\Installer\$SharePoint2010ModuleSource\SPModule\SPModule.setup</Value>
              </Switch>
              <Switch>
                <Value>$WinDir\System32\WindowsPowerShell\v1.0\Modules\SPModule.setup</Value>
              </Switch>
              <Switch>
                <Value>/e</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="SharePoint 2010 Foundation">
      <Variable Name="SharePoint2010FoundationSource" Value="SharePoint2010SP2Foundation" />
      <SourceFolder>$SharePoint2010FoundationSource</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/9/7/6/97602C6D-45A8-4E0B-AC17-6C814314B857/SharePoint_SP2_en-us.exe</URL>
        <File>SharePoint_SP2_en-us.exe</File>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>14.0.4755.1000</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SharePoint_SP2_en-us.exe</Command>
          <Argument>/quiet /extract:$Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Install Name="SharePoint 2010 Foundation">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{90140000-1110-0000-1000-0000000FF1CE}/{90140000-110D-0000-1000-0000000FF1CE}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>Import-Module SPModule.misc;</Value>
              </Switch>
              <Switch>
                <Value>Import-Module SPModule.setup;</Value>
              </Switch>
              <Switch>
                <Value>Install-SharePoint -SetupExePath $TempPath\Installer\$SharePoint2010FoundationSource\setup.exe -AcceptEula -ServerRole SINGLESERVER -SkipPreReqInstaller</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Automated Deployment Kit">
      <Variable Name="WindowsAutomatedDeploymentKitSource" Value="Prerequisites\ADK" />
      <SourceFolder>$WindowsAutomatedDeploymentKitSource</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/9/9/F/99F5E440-5EB5-4952-9935-B99662C3DF70/adk/adksetup.exe</URL>
        <File>adksetup.exe</File>
        <Run>
          <ExistingFile>adksetup.exe</ExistingFile>
          <FileVersion>8.59.25584</FileVersion>
          <Command>$Download\Download\$DownloadFolder\adksetup.exe</Command>
          <Argument>/silent /layout $Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Install Name="Windows Deployment Tools">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{BFC9778E-9765-C94C-C082-C2514F8DEB9B}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsAutomatedDeploymentKitSource\adksetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/features OptionId.DeploymentTools</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Preinstallation Environment">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{F89D69CA-6EE1-E037-DD3B-08CDDE1BED1C}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsAutomatedDeploymentKitSource\adksetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/features OptionId.WindowsPreinstallationEnvironment</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="User State Migration Tool">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{195C2CE6-CAE8-6ADC-5B63-82FC21CD1093}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WindowsAutomatedDeploymentKitSource\adksetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/features OptionId.UserStateMigrationTool</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Management Framework 3.0">
      <Variable Name="WindowsManagementFramework30Source" Value="Prerequisites\WMF30" />
      <SourceFolder>$WindowsManagementFramework30Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/E/7/6/E76850B8-DA6E-4FF5-8CCE-A24FC513FD16/Windows6.1-KB2506143-x64.msu</URL>
        <File>Windows6.1-KB2506143-x64.msu</File>
        <FileSize>16558542</FileSize>
      </Download>
      <Install Name="Windows Management Framework 3.0 - Windows 6.1 x64">
        <Validation>
          <Type>QFE</Type>
          <Value>KB2506143</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>wusa.exe</Executable>
            <Switches>
              <Switch>
                <Value>$TempPath\Installer\$WindowsManagementFramework30Source\Windows6.1-KB2506143-x64.msu</Value>
              </Switch>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/norestart</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="WCF Data Services 5.0">
      <Variable Name="WCFDataServices50Source" Value="Prerequisites\WCF50" />
      <SourceFolder>$WCFDataServices50Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/F/9/8F93DBBD-896B-4760-AC81-646F61363A6D/WcfDataServices.exe</URL>
        <File>WcfDataServices.exe</File>
        <FileVersion>5.0.51212.0</FileVersion>
      </Download>
      <Install Name="WCF Data Services 5.0">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{F478D90A-D495-4543-8374-CD736B9DE917}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$WCFDataServices50Source\WCFDataServices.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Fabric">
      <Variable Name="WindowsFabricSource" Value="Prerequisites\WindowsFabric" />
      <SourceFolder>$WindowsFabricSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/0/0/4/004DE3A9-4D30-4CC2-9FD1-CDC229BDDAA3/WindowsFabric.msi</URL>
        <File>WindowsFabric.msi</File>
        <FileSize>14696448</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/B/3/3/B33EC622-B250-49A1-A314-97CCB0DEFFC0/WindowsFabricCU1.1.0.976.0.msp</URL>
        <File>WindowsFabricCU1.1.0.976.0.msp</File>
        <FileSize>10915840</FileSize>
      </Download>
      <Install Name="Windows Fabric">
        <Validation>
          <Type>ProductCodeVersion</Type>
          <Value>{DC35903C-6D48-40A1-BBDD-307E27E691A3}1.0.976.0</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsFabricSource\WindowsFabric.msi</Value>
              </Switch>
              <Switch>
                <Value>IACCEPTEULA=yes</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/update</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsFabricSource\WindowsFabricCU1.1.0.976.0.msp</Value>
              </Switch>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/norestart</Value>
              </Switch>
              <Switch>
                <Value>IACCEPTEULA=yes</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Web Platform Installer 4.6">
      <Variable Name="WebPlatformInstaller46Source" Value="Prerequisites\WebPI46" />
      <SourceFolder>$WebPlatformInstaller46Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/7/0/4/704CEB4C-9F42-4962-A2B0-5C84B0682C7A/WebPlatformInstaller_amd64_en-US.msi</URL>
        <File>WebPlatformInstaller_amd64_en-US.msi</File>
        <FileSize>1642496</FileSize>
      </Download>
      <Install Name="Web Platform Installer 4.6 x64">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{16C7D2AD-20CA-491E-80BC-8607A9AACED9}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WebPlatformInstaller46Source\WebPlatformInstaller_amd64_en-US.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Single Instance Storage">
      <Install Name="Single Instance Storage">
        <Validation>
          <Type>RegKey</Type>
          <Value>SYSTEM\CurrentControlSet\Services\SIS</Value>
        </Validation>
        <CommandLines>
          <CommandLine Reboot="True">
            <Executable>dism.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Online</Value>
              </Switch>
              <Switch>
                <Value>/Enable-feature</Value>
              </Switch>
              <Switch>
                <Value>/FeatureName:SIS-Limited</Value>
              </Switch>
              <Switch>
                <Value>/quiet</Value>
              </Switch>
              <Switch>
                <Value>/norestart</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="User Account Control">
      <Install Name="User Account Control">
        <Validation>
          <Type>RegValue</Type>
          <Value>SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System,LocalAccountTokenFilterPolicy=1</Value>
        </Validation>
        <CommandLines>
          <CommandLine Reboot="True">
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>Set-ItemProperty -Path 'HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System' -Name 'LocalAccountTokenFilterPolicy' -Value 1</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Management Packs">
      <Variable Name="SystemCenter2012SP1ManagementPacksSource" Value="SystemCenter2012SP1\ManagementPacks" />
      <SourceFolder>$SystemCenter2012SP1ManagementPacksSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/f/7/b/f7b960c9-7392-4c5a-bab4-efbb8a66ec2a/BaseOSBlueGA/Microsoft.Windows.Server.Library.mp</URL>
        <File>Microsoft.Windows.Server.Library.mp</File>
        <FileSize>76488</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/f/7/b/f7b960c9-7392-4c5a-bab4-efbb8a66ec2a/BaseOSBlueGA/Microsoft.Windows.Server.2008.Discovery.mp</URL>
        <File>Microsoft.Windows.Server.2008.Discovery.mp</File>
        <FileSize>72392</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/F/1/FF13C2CF-C955-4D3F-94EA-4094AD0DBFF3/Microsoft.Windows.InternetInformationServices.CommonLibrary.MP</URL>
        <File>Microsoft.Windows.InternetInformationServices.CommonLibrary.mp</File>
        <FileSize>55152</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/F/1/FF13C2CF-C955-4D3F-94EA-4094AD0DBFF3/Microsoft.Windows.InternetInformationServices.2003.MP</URL>
        <File>Microsoft.Windows.InternetInformationServices.2003.mp</File>
        <FileSize>186224</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/F/1/FF13C2CF-C955-4D3F-94EA-4094AD0DBFF3/Microsoft.Windows.InternetInformationServices.2008.MP</URL>
        <File>Microsoft.Windows.InternetInformationServices.2008.mp</File>
        <FileSize>199496</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/0/7/7/07714012-3B7C-4691-9F2B-7ADE4188E552/Microsoft.SQLServer.Library.mp</URL>
        <File>Microsoft.SQLServer.Library.mp</File>
        <FileSize>171800</FileSize>
      </Download>
      <Install Name="System Center 2012 SP1 Management Packs">
        <Validation>
          <Type>None</Type>
          <Value>None</Value>
        </Validation>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Integration Packs">
      <Variable Name="SystemCenter2012SP1IntegrationPacksSource" Value="SystemCenter2012SP1\IntegrationPacks" />
      <SourceFolder>$SystemCenter2012SP1IntegrationPacksSource</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/1/6/5/16536A3A-DD03-4FE8-AD32-6DDA091FDC03/System_Center_2012_SP1_Integration_Packs.EXE</URL>
        <File>System_Center_2012_SP1_Integration_Packs.EXE</File>
        <Run>
          <ExistingFile>SC2012SP1_Integration_Pack_for_Operations_Manager.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Integration_Packs.EXE</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/1/6/5/16536A3A-DD03-4FE8-AD32-6DDA091FDC03/System_Center_2012_SP1_Orchestrator_Integration_ToolKit.exe</URL>
        <File>System_Center_2012_SP1_Orchestrator_Integration_ToolKit.exe</File>
        <Run>
          <ExistingFile>OrchestratorToolkitSetup.msi</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Orchestrator_Integration_ToolKit.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/9/2/9/9296C5AB-65FE-4012-B1D9-07BA597468FE/System_Center_2012_SP1_Integration_Pack_for_HP_iLO_OA.exe</URL>
        <File>System_Center_2012_SP1_Integration_Pack_for_HP_iLO_OA.exe</File>
        <Run>
          <ExistingFile>System_Center_2012_SP1_Integration_Pack_for_HP_iLO_OA.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Integration_Pack_for_HP_iLO_OA.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/8/9/F/89FF3558-B4E6-4E16-AF61-7638A1B86107/System_Center_2012_SP1_Integration_Pack_for_HP_Operations_Manager.exe</URL>
        <File>System_Center_2012_SP1_Integration_Pack_for_HP_Operations_Manager.exe</File>
        <Run>
          <ExistingFile>System_Center_2012_SP1_Integration_Pack_for_HP_Operations_Manager.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Integration_Pack_for_HP_Operations_Manager.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/8/6/D/86D9DA53-88E5-4406-B2E1-4C3AD524FB40/System_Center_2012_SP1_Integration_pack_for_HP_Service_Manager.exe</URL>
        <File>System_Center_2012_SP1_Integration_pack_for_HP_Service_Manager.exe</File>
        <Run>
          <ExistingFile>System_Center_2012_SP1_Integration_Pack_for_HP_Service_Manager.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Integration_pack_for_HP_Service_Manager.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/E/1/3/E131DFD5-D584-4133-9D07-91570D31C992/System_Center_2012_SP1_Integration_Pack_for_VMware_vSphere.EXE</URL>
        <File>System_Center_2012_SP1_Integration_Pack_for_VMware_vSphere.EXE</File>
        <Run>
          <ExistingFile>System_Center_2012_SP1_Integration_Pack_for_VMware_vSphere.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Integration_Pack_for_VMware_vSphere.EXE</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/E/B/1/EB11226B-D4FD-4C3B-ACD1-F5E8F89A56E0/System_Center_2012_SP1_Integration_Pack_for_IBM_Netcool_OMNIbus.EXE</URL>
        <File>System_Center_2012_SP1_Integration_Pack_for_IBM_Netcool_OMNIbus.EXE</File>
        <Run>
          <ExistingFile>System_Center_2012_SP1_Integration_Pack_for_IBM_Netcool_OMNIbus.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_SP1_Integration_Pack_for_IBM_Netcool_OMNIbus.EXE</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
    </Installable>
    <Installable Name="System Center 2012 SP1 Orchestrator">
      <Variable Name="SystemCenter2012SP1OrchestratorSource" Value="SystemCenter2012SP1\Orchestrator" />
      <SourceFolder>$SystemCenter2012SP1OrchestratorSource</SourceFolder>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/9/9/4/99473D48-B8E2-453D-9B34-33FEA42038F7/SC2012_SP1_SCO.exe</URL>
        <File>SC2012_SP1_SCO.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>SetupOrchestrator.exe</ExistingFile>
          <FileVersion>7.1.3022.0</FileVersion>
        </Extract>
      </Download>
      <Install Name="System Center 2012 SP1 Orchestrator Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D0CB5FFD-E0AB-4FA0-96CD-7AE7B5BEBA36}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:ManagementServer</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/ServiceUserName:$SystemCenter2012SP1OrchestratorServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword:$SystemCenter2012SP1OrchestratorServiceAccountPassword</Value>
                <Log>/ServicePassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DbServer:$SystemCenter2012SP1OrchestratorDatabaseServer\$SystemCenter2012SP1OrchestratorDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/DbNameNew:$SystemCenter2012SP1OrchestratorDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorRemote -ne $False</Condition>
                <Value>/OrchestratorRemote</Value>
              </Switch>
              <Switch>
                <Value>/InstallDir:$SystemCenter2012SP1OrchestratorInstallDir</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
        <Firewall>
          <Rule>
             <Name>System Center 2012 SP1 Orchestrator Management Server</Name>
             <Type>Application</Type>
             <Value>$SystemCenter2012SP1OrchestratorInstallDir\Management Server\ManagementService.exe</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="System Center 2012 SP1 Orchestrator Runbook Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{77C5EA09-E67A-4C99-A505-E2EDA3585969}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:RunbookServer</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/ServiceUserName:$SystemCenter2012SP1OrchestratorServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword:$SystemCenter2012SP1OrchestratorServiceAccountPassword</Value>
                <Log>/ServicePassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DbServer:$SystemCenter2012SP1OrchestratorDatabaseServer\$SystemCenter2012SP1OrchestratorDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/DbNameExisting:$SystemCenter2012SP1OrchestratorDatabase</Value>
              </Switch>
              <Switch>
                <Value>/InstallDir:$SystemCenter2012SP1OrchestratorInstallDir</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Orchestrator Web Components Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{6D421114-43E0-466F-9848-8F604BDA2539}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:WebComponents</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/ServiceUserName:$SystemCenter2012SP1OrchestratorServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword:$SystemCenter2012SP1OrchestratorServiceAccountPassword</Value>
                <Log>/ServicePassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DbServer:$SystemCenter2012SP1OrchestratorDatabaseServer\$SystemCenter2012SP1OrchestratorDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/DbNameExisting:$SystemCenter2012SP1OrchestratorDatabase</Value>
              </Switch>
              <Switch>
                <Value>/WebServicePort:$SystemCenter2012SP1OrchestratorWebServicePort</Value>
              </Switch>
              <Switch>
                <Value>/WebConsolePort:$SystemCenter2012SP1OrchestratorWebConsolePort</Value>
              </Switch>
              <Switch>
                <Value>/InstallDir:$SystemCenter2012SP1OrchestratorInstallDir</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
        <Firewall>
          <Rule>
            <Name>System Center 2012 SP1 Orchestrator Web Service</Name>
            <Type>Port</Type>
            <Value>TCP/$SystemCenter2012SP1OrchestratorWebServicePort</Value>
          </Rule>
          <Rule>
            <Name>System Center 2012 SP1 Orchestrator Web Console</Name>
            <Type>Port</Type>
            <Value>TCP/$SystemCenter2012SP1OrchestratorWebConsolePort</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="System Center 2012 SP1 Orchestrator Runbook Designer">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{88CA6D9B-4F06-468D-905A-BC991518D299}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:RunbookDesigner</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Provider Foundation Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{69344E86-7183-4384-A230-499E9914BE14}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OrchestratorSource\SPF\setup.exe</Executable>
            <AnswerFile>
              <Entry>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>-SendCEIPReports true</Value>
              </Entry>
              <Entry>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>-SendCEIPReports false</Value>
              </Entry>
              <Entry>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>-UseMicrosoftUpdate true</Value>
              </Entry>
              <Entry>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>-UseMicrosoftUpdate false</Value>
              </Entry>
              <Entry>
                <Value>-CertificateSerialNumber $SSLCertSerialNumber</Value>
              </Entry>
              <Entry>
                <Value>-InstallFolder $SystemCenter2012SP1ServiceProviderFoundationInstallFolder</Value>
              </Entry>
              <Entry>
                <Value>-WebSitePortNumber $SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber</Value>
              </Entry>
              <Entry>
                <Value>-DatabaseServer $SystemCenter2012SP1ServiceProviderFoundationDatabaseServer</Value>
              </Entry>
              <Entry>
                <Value>-DatabasePortNumber $SystemCenter2012SP1ServiceProviderFoundationDatabasePort</Value>
              </Entry>
              <Entry>
                <Value>-ScvmmUserName $SystemCenter2012SP1ServiceProviderFoundationSCVMMServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-ScvmmPassword $SystemCenter2012SP1ServiceProviderFoundationSCVMMServiceAccountPassword</Value>
                <Log>ScvmmPassword ********</Log>
              </Entry>
              <Entry>
                <Value>-ScvmmDomain $SystemCenter2012SP1ServiceProviderFoundationSCVMMServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-ScvmmNetworkServiceSelected $SystemCenter2012SP1ServiceProviderFoundationSCVMMNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-VmmSecurityGroupUsers `"$SystemCenter2012SP1ServiceProviderFoundationVMMSecurityGroupUsers`"</Value>
              </Entry>
              <Entry>
                <Value>-SCadminUserName $SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-SCadminPassword $SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountPassword</Value>
                <Log>SCadminPassword ********</Log>
              </Entry>
              <Entry>
                <Value>-SCadminDomain $SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-SCadminNetworkServiceSelected $SystemCenter2012SP1ServiceProviderFoundationSCAdminNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-AdminSecurityGroupUsers `"$SystemCenter2012SP1ServiceProviderFoundationAdminSecurityGroupUsers`"</Value>
              </Entry>
              <Entry>
                <Value>-SCproviderUserName $SystemCenter2012SP1ServiceProviderFoundationSCProviderServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-SCproviderPassword $SystemCenter2012SP1ServiceProviderFoundationSCProviderServiceAccountPassword</Value>
                <Log>SCproviderPassword ********</Log>
              </Entry>
              <Entry>
                <Value>-SCproviderDomain $SystemCenter2012SP1ServiceProviderFoundationSCProviderServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-SCproviderNetworkServiceSelected $SystemCenter2012SP1ServiceProviderFoundationSCProviderNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-ProviderSecurityGroupUsers `"$SystemCenter2012SP1ServiceProviderFoundationProviderSecurityGroupUsers`"</Value>
              </Entry>
            </AnswerFile>
            <Switches>
              <Switch>
                <Value>-Silent</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer.txt</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Virtual Machine Manager">
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerSource" Value="SystemCenter2012SP1\VirtualMachineManager" />
      <SourceFolder>$SystemCenter2012SP1VirtualMachineManagerSource</SourceFolder>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/4/8/5/485D6D85-5811-4E7E-83F5-84F9492D3234/SC2012_SP1_SCVMM.exe</URL>
        <File>SC2012_SP1_SCVMM.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>3.1.6011.0</FileVersion>
        </Extract>
      </Download>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{59518B15-FC64-4CF9-A4D1-0EE1B4A63088}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>MUOptIn=$MicrosoftUpdate</Value>
                </Entry>
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>SQMOptIn=$CustomerExperienceImprovementProgram</Value>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012SP1VirtualMachineManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLMachineName=$SystemCenter2012SP1VirtualMachineManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Value>RemoteDatabaseImpersonation=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLInstanceName=$SystemCenter2012SP1VirtualMachineManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewSQLDatabase=1</Value>
                </Entry>
                <Entry>
                  <Value>SQLDatabaseName=$SystemCenter2012SP1VirtualMachineManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>VMMServiceLocalAccount=0</Value>
                </Entry>
                <Entry>
                  <Value>IndigoTcpPort=$SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>WSManTcpPort=$SystemCenter2012SP1VirtualMachineManagerWSManTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>BitsTcpPort=$SystemCenter2012SP1VirtualMachineManagerBitsTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoNETTCPPort=$SystemCenter2012SP1VirtualMachineManagerIndigoNETTCPPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPSPort=$SystemCenter2012SP1VirtualMachineManagerIndigoHTTPSPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPPort=$SystemCenter2012SP1VirtualMachineManagerIndigoHTTPPort</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewLibraryShare=1</Value>
                </Entry>
                <Entry>
                  <Value>LibraryShareName=MSSCVMMLibrary</Value>
                </Entry>
                <Entry>
                  <Value>LibrarySharePath=$SystemCenter2012SP1VirtualMachineManagerLibraryPath</Value>
                </Entry>
                <Entry>
                  <Value>LibraryShareDescription=VMM Library Share</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/server</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
              <Switch>
                <Value>/f $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceDomain $SystemCenter2012SP1VirtualMachineManagerServiceAccountDomain</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserName $SystemCenter2012SP1VirtualMachineManagerServiceAccountUsername</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserPassword $SystemCenter2012SP1VirtualMachineManagerServiceAccountPassword</Value>
                <Log>/vmmServiceUserPassword ********</Log>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{59518B15-FC64-4CF9-A4D1-0EE1B4A63088}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>MUOptIn=$MicrosoftUpdate</Value>
                </Entry>
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>SQMOptIn=$CustomerExperienceImprovementProgram</Value>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012SP1VirtualMachineManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLMachineName=$SystemCenter2012SP1VirtualMachineManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Value>RemoteDatabaseImpersonation=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLInstanceName=$SystemCenter2012SP1VirtualMachineManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewSQLDatabase=1</Value>
                </Entry>
                <Entry>
                  <Value>SQLDatabaseName=$SystemCenter2012SP1VirtualMachineManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>VMMServiceLocalAccount=0</Value>
                </Entry>
                <Entry>
                  <Value>IndigoTcpPort=$SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>WSManTcpPort=$SystemCenter2012SP1VirtualMachineManagerWSManTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>BitsTcpPort=$SystemCenter2012SP1VirtualMachineManagerBitsTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoNETTCPPort=$SystemCenter2012SP1VirtualMachineManagerIndigoNETTCPPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPSPort=$SystemCenter2012SP1VirtualMachineManagerIndigoHTTPSPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPPort=$SystemCenter2012SP1VirtualMachineManagerIndigoHTTPPort</Value>
                </Entry>
                <Entry>
                  <Value>VmmServerName=$SystemCenter2012SP1VirtualMachineManagerVmmServerName</Value>
                </Entry>
                <Entry>
                  <Value>TopContainerName=$SystemCenter2012SP1VirtualMachineManagerTopContainerName</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable=1</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable2ndNode=0</Value>
                </Entry>
                <Entry>
                  <Condition>$SystemCenter2012SP1VirtualMachineManagerVMMStaticIPAddress -ne ""</Condition>
                  <Value>VMMStaticIPAddress=$SystemCenter2012SP1VirtualMachineManagerVMMStaticIPAddress</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/server</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
              <Switch>
                <Value>/f $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceDomain $SystemCenter2012SP1VirtualMachineManagerServiceAccountDomain</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserName $SystemCenter2012SP1VirtualMachineManagerServiceAccountUsername</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserPassword $SystemCenter2012SP1VirtualMachineManagerServiceAccountPassword</Value>
                <Log>/vmmServiceUserPassword ********</Log>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{59518B15-FC64-4CF9-A4D1-0EE1B4A63088}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>MUOptIn=$MicrosoftUpdate</Value>
                </Entry>
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>SQMOptIn=$CustomerExperienceImprovementProgram</Value>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012SP1VirtualMachineManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLMachineName=$SystemCenter2012SP1VirtualMachineManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Value>RemoteDatabaseImpersonation=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLInstanceName=$SystemCenter2012SP1VirtualMachineManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewSQLDatabase=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLDatabaseName=$SystemCenter2012SP1VirtualMachineManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>VMMServiceLocalAccount=0</Value>
                </Entry>
                <Entry>
                  <Value>IndigoTcpPort=$SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>WSManTcpPort=$SystemCenter2012SP1VirtualMachineManagerWSManTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>BitsTcpPort=$SystemCenter2012SP1VirtualMachineManagerBitsTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoNETTCPPort=$SystemCenter2012SP1VirtualMachineManagerIndigoNETTCPPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPSPort=$SystemCenter2012SP1VirtualMachineManagerIndigoHTTPSPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPPort=$SystemCenter2012SP1VirtualMachineManagerIndigoHTTPPort</Value>
                </Entry>
                <Entry>
                  <Value>VmmServerName=$SystemCenter2012SP1VirtualMachineManagerVmmServerName</Value>
                </Entry>
                <Entry>
                  <Value>TopContainerName=$SystemCenter2012SP1VirtualMachineManagerTopContainerName</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable=1</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable2ndNode=1</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/server</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
              <Switch>
                <Value>/f $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceDomain $SystemCenter2012SP1VirtualMachineManagerServiceAccountDomain</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserName $SystemCenter2012SP1VirtualMachineManagerServiceAccountUsername</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserPassword $SystemCenter2012SP1VirtualMachineManagerServiceAccountPassword</Value>
                <Log>/vmmServiceUserPassword ********</Log>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{CDFB453F-5FA4-4884-B282-F46BDFC06051}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/client</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 App Controller">
      <Variable Name="SystemCenter2012SP1AppControllerSource" Value="SystemCenter2012SP1\AppController" />
      <SourceFolder>$SystemCenter2012SP1AppControllerSource</SourceFolder>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/F/9/1/F916020F-CCFF-427C-BF88-30318B72582F/SC2012_SP1_SCAC.exe</URL>
        <File>SC2012_SP1_SCAC.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>1.0.1600.0</FileVersion>
        </Extract>
      </Download>
      <Install Name="System Center 2012 SP1 App Controller Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{559A7EE3-2C38-4746-8E21-C7921B91D6E5}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\AppControllerLogs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1AppControllerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/MU</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/SelfUpdate True</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>/SelfUpdate False</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath `"$SystemCenter2012SP1AppControllerInstallPath`"</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey $SystemCenter2012ProductKey</Value>
              </Switch>
              <Switch>
                <Value>/ServiceUsername $SystemCenter2012SP1AppControllerServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword $SystemCenter2012SP1AppControllerServiceAccountPassword</Value>
                <Log>/ServicePassword ********</Log>
              </Switch>
              <Switch>
                <Value>/Port $SystemCenter2012SP1AppControllerPort</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>/SslCert $SSLCert</Value>
              </Switch>
              <Switch>
                <Value>/SQL $SystemCenter2012SP1AppControllerDatabaseServer,$SystemCenter2012SP1AppControllerDatabasePort\$SystemCenter2012SP1AppControllerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/SQLDB $SystemCenter2012SP1AppControllerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEULA`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SystemCenter2012SP1AppControllerAdditionalServer -ne $null</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>Export-SCACAesKey -Path $TempPath\AesKeyFile -Password `$SecurePassword</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 App Controller Additional Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{559A7EE3-2C38-4746-8E21-C7921B91D6E5}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\AppControllerLogs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1AppControllerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/MU</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/SelfUpdate True</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>/SelfUpdate False</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath `"$SystemCenter2012SP1AppControllerInstallPath`"</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey $SystemCenter2012ProductKey</Value>
              </Switch>
              <Switch>
                <Value>/ServiceUsername $SystemCenter2012SP1AppControllerServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword $SystemCenter2012SP1AppControllerServiceAccountPassword</Value>
                <Log>/ServicePassword ********</Log>
              </Switch>
              <Switch>
                <Value>/Port $SystemCenter2012SP1AppControllerPort</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>/SslCert $SSLCert</Value>
              </Switch>
              <Switch>
                <Value>/SQL $SystemCenter2012SP1AppControllerDatabaseServer,$SystemCenter2012SP1AppControllerDatabasePort\$SystemCenter2012SP1AppControllerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/SQLDB $SystemCenter2012SP1AppControllerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/AesKeyFilePath \\$SystemCenter2012SP1AppControllerServer\$TempPathUNC\AesKeyFile</Value>
              </Switch>
              <Switch>
                <Value>/AesKeyPassword $InstallerServiceAccountPassword</Value>
                <Log>/AesKeyPassword ********</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Operations Manager">
      <Variable Name="SystemCenter2012SP1OperationsManagerSource" Value="SystemCenter2012SP1\OperationsManager.en" />
      <SourceFolder>$SystemCenter2012SP1OperationsManagerSource</SourceFolder>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/0/3/F/03F1B876-E7D7-45BE-8B0B-0BDBD02DD800/SC2012_SP1_SCOM_EN.exe</URL>
        <File>SC2012_SP1_SCOM_EN.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>7.0.9538.0</FileVersion>
        </Extract>
      </Download>
      <Install Name="System Center 2012 SP1 Operations Manager Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{8070C91C-7D7C-4DAD-88B1-0966EEA9A8FE}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMServer</Value>
              </Switch>
              <Switch>
                <Value>/ManagementGroupName:$SystemCenter2012SP1OperationsManagerManagementGroupName</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012SP1OperationsManagerDatabaseServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012SP1OperationsManagerDatabaseServer\$SystemCenter2012SP1OperationsManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/DWSqlServerInstance:$SystemCenter2012SP1OperationsManagerDatawarehouseServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/DWSqlServerInstance:$SystemCenter2012SP1OperationsManagerDatawarehouseServer\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseName:$SystemCenter2012SP1OperationsManagerDatabaseName</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseSize:$SystemCenter2012SP1OperationsManagerDatabaseSize</Value>
              </Switch>
              <Switch>
                <Value>/DWDatabaseName:$SystemCenter2012SP1OperationsManagerDWDatabaseName</Value>
              </Switch>
              <Switch>
                <Value>/DWDatabaseSize:$SystemCenter2012SP1OperationsManagerDWDatabaseSize</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountUser:$SystemCenter2012SP1OperationsManagerActionServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountPassword:$SystemCenter2012SP1OperationsManagerActionServiceAccountPassword</Value>
                <Log>/ActionAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DASAccountUser:$SystemCenter2012SP1OperationsManagerDASServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DASAccountPassword:$SystemCenter2012SP1OperationsManagerDASServiceAccountPassword</Value>
                <Log>/DASAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataReaderUser:$SystemCenter2012SP1OperationsManagerDataReaderServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderPassword:$SystemCenter2012SP1OperationsManagerDataReaderServiceAccountPassword</Value>
                <Log>/DataReaderPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataWriterUser:$SystemCenter2012SP1OperationsManagerDataWriterServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataWriterPassword:$SystemCenter2012SP1OperationsManagerDataWriterServiceAccountPassword</Value>
                <Log>/DataWriterPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>Import-Module '$SystemCenter2012SP1OperationsManagerInstallPath\Powershell\OperationsManager';</Value>
              </Switch>
              <Switch>
                <Value>Set-SCOMLicense -ProductID $SystemCenter2012ProductKey -Confirm:`$false;</Value>
                <Log>Set-SCOMLicense -ProductID *****-*****-*****-*****-***** -Confirm:`$false;</Log>
              </Switch>
              <Switch>
                <Value>Restart-Service omsdk</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Additional Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{8070C91C-7D7C-4DAD-88B1-0966EEA9A8FE}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012SP1OperationsManagerDatabaseServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012SP1OperationsManagerDatabaseServer\$SystemCenter2012SP1OperationsManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountUser:$SystemCenter2012SP1OperationsManagerActionServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountPassword:$SystemCenter2012SP1OperationsManagerActionServiceAccountPassword</Value>
                <Log>/ActionAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DASAccountUser:$SystemCenter2012SP1OperationsManagerDASServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DASAccountPassword:$SystemCenter2012SP1OperationsManagerDASServiceAccountPassword</Value>
                <Log>/DASAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataReaderUser:$SystemCenter2012SP1OperationsManagerDataReaderServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderPassword:$SystemCenter2012SP1OperationsManagerDataReaderServiceAccountPassword</Value>
                <Log>/DataReaderPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataWriterUser:$SystemCenter2012SP1OperationsManagerDataWriterServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataWriterPassword:$SystemCenter2012SP1OperationsManagerDataWriterServiceAccountPassword</Value>
                <Log>/DataWriterPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Reporting Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{A2D27C0E-181D-4955-B95D-D3FB651E6AF7}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Condition>$SystemCenter2012SP1OperationsManagerReportingServer -ne $SystemCenter2012SP1OperationsManagerDatawarehouseServer</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingVersion -eq "SQL Server 2012"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012SP1OperationsManagerReportingInstance\v11\Admin;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingVersion -eq "SQL Server 2008 R2"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012SP1OperationsManagerReportingInstance\v10\Admin;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSConfig.DatabaseName)) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer_$SystemCenter2012SP1OperationsManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportServerWebService','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports_$SystemCenter2012SP1OperationsManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportManager','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer`$$SystemCenter2012SP1OperationsManagerReportingInstance',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012SP1OperationsManagerReportingServerDomain\$SystemCenter2012SP1OperationsManagerReportingServerShort`$','ReportServer',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012SP1OperationsManagerReportingServerDomain\$SystemCenter2012SP1OperationsManagerReportingServerShort`$','ReportServer`$$SystemCenter2012SP1OperationsManagerReportingInstance',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1OperationsManagerDatawarehouseServerShort\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1OperationsManagerDatawarehouseServerShort','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1OperationsManagerDatawarehouseServerShort','ReportServer`$$SystemCenter2012SP1OperationsManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1OperationsManagerDatawarehouseServerShort\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1OperationsManagerDatawarehouseServerShort\$SystemCenter2012SP1OperationsManagerDatawarehouseInstance','ReportServer`$$SystemCenter2012SP1OperationsManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.InitializeReportServer(`$RSConfig.InstallationID)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMReporting</Value>
              </Switch>
              <Switch>
                <Value>/ManagementServer:$SystemCenter2012SP1OperationsManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SRSInstance:$SystemCenter2012SP1OperationsManagerReportingServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SRSInstance:$SystemCenter2012SP1OperationsManagerReportingServer\$SystemCenter2012SP1OperationsManagerReportingInstance</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderUser:$SystemCenter2012SP1OperationsManagerDataReaderServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderPassword:$SystemCenter2012SP1OperationsManagerDataReaderServiceAccountPassword</Value>
                <Log>/DataReaderPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Web Console Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{5ED945BA-2BDD-4567-804E-8D3D2DB5CC9B}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Condition>$OSVersion -eq '6.1.7601'</Condition>
            <Executable>$WinDir\Microsoft.NET\Framework64\v4.0.30319\aspnet_regiis.exe</Executable>
            <Switches>
              <Switch>
                <Value>-r</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$OSVersion -eq '6.1.7601'</Condition>
            <Executable>$WinDir\System32\inetsrv\appcmd.exe</Executable>
            <Switches>
              <Switch>
                <Value>set</Value>
              </Switch>
              <Switch>
                <Value>config</Value>
              </Switch>
              <Switch>
                <Value>/section:isapiCgiRestriction</Value>
              </Switch>
              <Switch>
                <Value>/[path='$WinDir\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll'].allowed:True</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMWebConsole</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerWebConsoleServer -ne $SystemCenter2012SP1OperationsManagerReportingServer</Condition>
                <Value>/ManagementServer:$SystemCenter2012SP1OperationsManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/WebConsoleAuthorizationMode:$SystemCenter2012SP1OperationsManagerWebConsoleAuthorizationMode</Value>
              </Switch>
              <Switch>
                <Value>/WebSiteName:`"Default Web Site`"</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{5142AB0B-73E3-4AD3-9D0F-65B3D9026769}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMConsole</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Configuration Manager">
      <Variable Name="SystemCenter2012SP1ConfigurationManagerSource" Value="SystemCenter2012SP1\ConfigurationManager" />
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/D/7/9/D792FC0F-D278-43CB-8ABB-ECAF2A52DAA7/SC2012_SP1_RTM_SCCM_SCEP.exe</URL>
        <File>SC2012_SP1_RTM_SCCM_SCEP.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>splash.hta</ExistingFile>
          <FileSize>31952</FileSize>
        </Extract>
      </Download>
      <SourceFolder>$SystemCenter2012SP1ConfigurationManagerSource</SourceFolder>
      <Install Name="System Center 2012 SP1 Configuration Manager Site Server">
        <Validation>
          <Type>Service</Type>
          <Value>SMS_EXECUTIVE</Value>
        </Validation>
        <Log>C:\</Log>
        <LogFile>ConfigMgr*.log</LogFile>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Identification">
                <Entry>
                  <Value>Action=InstallPrimarySite</Value>
                </Entry>
              </Section>
              <Section Name="Options">
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductID=$SystemCenter2012ProductKey</Value>
                  <Log>ProductID=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -eq "") -or ($SystemCenter2012ProductKey -eq $Null)</Condition>
                  <Value>ProductID=EVAL</Value>
                </Entry>
                <Entry>
                  <Value>SiteCode=$SystemCenter2012SP1ConfigurationManagerSiteCode</Value>
                </Entry>
                <Entry>
                  <Value>SiteName=$SystemCenter2012SP1ConfigurationManagerSite</Value>
                </Entry>
                <Entry>
                  <Value>SMSInstallDir=$SystemCenter2012SP1ConfigurationManagerInstallDir</Value>
                </Entry>
                <Entry>
                  <Value>SDKServer=$SystemCenter2012SP1ConfigurationManagerProviderServer</Value>
                </Entry>
                <Entry>
                  <Value>RoleCommunicationProtocol=HTTPorHTTPS</Value>
                </Entry>
                <Entry>
                  <Value>ClientsUsePKICertificate=0</Value>
                </Entry>
                <Entry>
                  <Value>PrerequisiteComp=1</Value>
                </Entry>
                <Entry>
                  <Value>PrerequisitePath=$TempPath\Installer\$SystemCenter2012SP1ConfigurationManagerPrerequisitesSource</Value>
                </Entry>
                <Entry>
                  <Value>MobileDeviceLanguage=0</Value>
                </Entry>
                <Entry>
                  <Value>ManagementPoint=$SystemCenter2012SP1ConfigurationManagerSiteServer</Value>
                </Entry>
                <Entry>
                  <Value>ManagementPointProtocol=HTTP</Value>
                </Entry>
                <Entry>
                  <Value>DistributionPoint=$SystemCenter2012SP1ConfigurationManagerSiteServer</Value>
                </Entry>
                <Entry>
                  <Value>DistributionPointProtocol=HTTP</Value>
                </Entry>
                <Entry>
                  <Value>DistributionPointInstallIIS=0</Value>
                </Entry>
                <Entry>
                  <Value>AdminConsole=0</Value>
                </Entry>
                <Entry>
                  <Value>JoinCEIP=$CustomerExperienceImprovementProgram</Value>
                </Entry>
              </Section>
              <Section Name="SQLConfigOptions">
                <Entry>
                  <Value>SQLServerName=$SystemCenter2012SP1ConfigurationManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                  <Value>DatabaseName=$SystemCenter2012SP1ConfigurationManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                  <Value>DatabaseName=$SystemCenter2012SP1ConfigurationManagerDatabaseInstance\$SystemCenter2012SP1ConfigurationManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>SQLSSBPort=4022</Value>
                </Entry>
              </Section>
              <Section Name="HierarchyExpansionOption"></Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ConfigurationManagerSource\SMSSetup\BIN\X64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Script $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/NoUserInput</Value>
              </Switch>
              <Switch>
                <Value>/Hidden</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Configuration Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{2091E6EC-D9E4-4017-903D-4F56632E933F}</Value>
        </Validation>
        <Log>C:\</Log>
        <LogFile>ConfigMgr*.log</LogFile>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ConfigurationManagerSource\SMSSETUP\BIN\I386\consolesetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>TargetDir=`"$SystemCenter2012SP1ConfigurationManagerConsoleTargetDir`"</Value>
              </Switch>
              <Switch>
                <Value>DefaultSiteServerName=$SystemCenter2012SP1ConfigurationManagerSiteServer</Value>
              </Switch>
              <Switch>
                <Value>EnableSQM=$CustomerExperienceImprovementProgram</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>    </Installable>
    <Installable Name="System Center 2012 SP1 Configuration Manager Prerequisites">
      <Variable Name="SystemCenter2012SP1ConfigurationManagerPrerequisitesSource" Value="SystemCenter2012SP1\ConfigurationManager.DL" />
      <SourceFolder>$SystemCenter2012SP1ConfigurationManagerPrerequisitesSource</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <Run>
          <ExistingFile>ConfigMgr.Manifest.cab</ExistingFile>
          <FileSize>8049</FileSize>
          <Command>$Download\SystemCenter2012SP1\ConfigurationManager\SMSSETUP\BIN\X64\setupdl.exe</Command>
          <Argument>/NoUI $Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Install Name="System Center 2012 SP1 Configuration Manager Prerequisites">
        <Validation>
          <Type>None</Type>
          <Value>None</Value>
        </Validation>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Service Manager">
      <Variable Name="SystemCenter2012SP1ServiceManagerSource" Value="SystemCenter2012SP1\ServiceManager" />
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/B/F/5/BF5B6A61-D12C-41F3-B220-6A127E24C57F/SC2012_SP1_SCSM.exe</URL>
        <File>SC2012_SP1_SCSM.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>amd64\setup.exe</ExistingFile>
          <FileVersion>7.5.2905.0</FileVersion>
        </Extract>
      </Download>
      <SourceFolder>$SystemCenter2012SP1ServiceManagerSource</SourceFolder>
      <Install Name="System Center 2012 SP1 Service Manager Reporting Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerReportingServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Condition>$SystemCenter2012SP1ServiceManagerReportingServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseServer</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingVersion -eq "SQL Server 2012"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012SP1ServiceManagerReportingInstance\v11\Admin;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingVersion -eq "SQL Server 2008 R2"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012SP1ServiceManagerReportingInstance\v10\Admin;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSConfig.DatabaseName)) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer_$SystemCenter2012SP1ServiceManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportServerWebService','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports_$SystemCenter2012SP1ServiceManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportManager','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer`$$SystemCenter2012SP1ServiceManagerReportingInstance',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012SP1ServiceManagerReportingServerDomain\$SystemCenter2012SP1ServiceManagerReportingServerShort`$','ReportServer',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012SP1ServiceManagerReportingServerDomain\$SystemCenter2012SP1ServiceManagerReportingServerShort`$','ReportServer`$$SystemCenter2012SP1ServiceManagerReportingInstance',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012SP1ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort','ReportServer`$$SystemCenter2012SP1ServiceManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance','ReportServer`$$SystemCenter2012SP1ServiceManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.InitializeReportServer(`$RSConfig.InstallationID)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = ((Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $SystemCenter2012SP1ServiceManagerReportingInstance).$SystemCenter2012SP1ServiceManagerReportingInstance);</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$SRSBin = `$SQLPath + '\bin\';</Value>
              </Switch>
              <Switch>
                <Value>`$SRSFile = `$SRSBin + 'Microsoft.EnterpriseManagement.Reporting.Code.dll';</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path(`$SRSFile))) {Copy-Item '$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\Prerequisites\Microsoft.EnterpriseManagement.Reporting.Code.dll' `$SRSBin};</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerReportingServer.role'</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $SystemCenter2012SP1ServiceManagerReportingInstance).$SystemCenter2012SP1ServiceManagerReportingInstance;</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRSFile = `$SQLPath + '\RSReportServer.config';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS = [XML] (Get-Content `$RSRSFile);</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSRS.Configuration.Extensions.Data.Extension | Where-Object {`$_.Name -eq 'SCDWMultiMartDataProcessor'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$OldData = @(`$RSRS.Configuration.Extensions.Data.Extension)[0];</Value>
              </Switch>
              <Switch>
                <Value>`$NewData = `$OldData.Clone();</Value>
              </Switch>
              <Switch>
                <Value>`$NewData.Name = 'SCDWMultiMartDataProcessor';</Value>
              </Switch>
              <Switch>
                <Value>`$NewData.Type = 'Microsoft.EnterpriseManagement.Reporting.MultiMartConnection, Microsoft.EnterpriseManagement.Reporting.Code';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS.Configuration.Extensions.Data.AppendChild(`$NewData);</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS.Save(`$RSRSFile)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $SystemCenter2012SP1ServiceManagerReportingInstance).$SystemCenter2012SP1ServiceManagerReportingInstance;</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$RSSPFile = `$SQLPath + '\RSSrvPolicy.config';</Value>
              </Switch>
              <Switch>
                <Value>`$RSSP = [XML] (Get-Content `$RSSPFile);</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSSP.configuration.mscorlib.security.policy.PolicyLevel.CodeGroup | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.Name -eq 'Microsoft System Center Service Manager Reporting Code Assembly'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$OldCodeGroup = @(`$RSSP.configuration.mscorlib.security.policy.PolicyLevel.CodeGroup | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup})[0];</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup = `$OldCodeGroup.Clone();</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.class = 'UnionCodeGroup';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.version = '1';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.PermissionSetName = 'FullTrust';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.Name = 'Microsoft System Center Service Manager Reporting Code Assembly';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.Description = 'Grants the SCSM Reporting Code assembly full trust permission.';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.IMembershipCondition.class = 'StrongNameMembershipCondition';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.IMembershipCondition.version = '1';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.IMembershipCondition.PublicKeyBlob = '0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9';</Value>
              </Switch>
              <Switch>
                <Value>(`$RSSP.configuration.mscorlib.security.policy.PolicyLevel.CodeGroup | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'}).AppendChild(`$NewCodeGRoup);</Value>
              </Switch>
              <Switch>
                <Value>`$RSSP.Save(`$RSSPFile)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{79A76AB5-3EA0-4C4F-89B9-1CA00438EC2E}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Server</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1ServiceManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SQLServerInstance:$SystemCenter2012SP1ServiceManagerDatabaseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SQLServerInstance:$SystemCenter2012SP1ServiceManagerDatabaseServerShort\$SystemCenter2012SP1ServiceManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/CreateNewDatabase</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseName:$SystemCenter2012SP1ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseSize:$SystemCenter2012SP1ServiceManagerDatabaseSize</Value>
              </Switch>
              <Switch>
                <Value>/ManagementGroupName:$SystemCenter2012SP1ServiceManagerManagementGroupName</Value>
              </Switch>
              <Switch>
                <Value>/AdminRoleGroup:$SystemCenter2012SP1ServiceManagerAdminRoleGroup</Value>
              </Switch>
              <Switch>
                <Value>/ServiceRunUnderAccount:$SystemCenter2012SP1ServiceManagerServicesServiceAccount\$SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword</Value>
                <Log>/ServiceRunUnderAccount:$SystemCenter2012SP1ServiceManagerServicesServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Value>/WorkflowAccount:$SystemCenter2012SP1ServiceManagerWorkflowServiceAccount\$SystemCenter2012SP1ServiceManagerWorkflowServiceAccountPassword</Value>
                <Log>/WorkflowAccount:$SystemCenter2012SP1ServiceManagerWorkflowServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Datawarehouse Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{79A76AB5-3EA0-4C4F-89B9-1CA00438EC2E}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Datawarehouse</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1ServiceManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/CreateNewDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/StgConfigSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/RepositorySqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/DataMartSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/OMDataMartSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/CMDataMartSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/StgConfigSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/RepositorySqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/DataMartSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/OMDataMartSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/CMDataMartSqlServerInstance:$SystemCenter2012SP1ServiceManagerDatawarehouseServerShort\$SystemCenter2012SP1ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Value>/StgConfigDatabaseName:$SystemCenter2012SP1ServiceManagerDWStagingAndConfig</Value>
              </Switch>
              <Switch>
                <Value>/StgConfigDatabaseSize:$SystemCenter2012SP1ServiceManagerDWStagingAndConfigSize</Value>
              </Switch>
              <Switch>
                <Value>/RepositoryDatabaseName:$SystemCenter2012SP1ServiceManagerDWRepository</Value>
              </Switch>
              <Switch>
                <Value>/RepositoryDatabaseSize:$SystemCenter2012SP1ServiceManagerDWRepositorySize</Value>
              </Switch>
              <Switch>
                <Value>/DataMartDatabaseName:$SystemCenter2012SP1ServiceManagerDWDataMart</Value>
              </Switch>
              <Switch>
                <Value>/DataMartDatabaseSize:$SystemCenter2012SP1ServiceManagerDWDataMartSize</Value>
              </Switch>
              <Switch>
                <Value>/OMDataMartDatabaseName:$SystemCenter2012SP1ServiceManagerOMDWDataMart</Value>
              </Switch>
              <Switch>
                <Value>/OMDataMartDatabaseSize:$SystemCenter2012SP1ServiceManagerOMDWDataMartSize</Value>
              </Switch>
              <Switch>
                <Value>/CMDataMartDatabaseName:$SystemCenter2012SP1ServiceManagerCMDWDataMart</Value>
              </Switch>
              <Switch>
                <Value>/CMDataMartDatabaseSize:$SystemCenter2012SP1ServiceManagerCMDWDataMartSize</Value>
              </Switch>
              <Switch>
                <Value>/ManagementGroupName:$SystemCenter2012SP1ServiceManagerDatawarehouseManagementGroupName</Value>
              </Switch>
              <Switch>
                <Value>/AdminRoleGroup:$SystemCenter2012SP1ServiceManagerAdminRoleGroup</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>/ReportingServer:$SystemCenter2012SP1ServiceManagerReportingServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>/ReportingWebServiceURL:http://$SystemCenter2012SP1ServiceManagerReportingServer/ReportServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>/ReportingServer:$SystemCenter2012SP1ServiceManagerReportingServerShort\$SystemCenter2012SP1ServiceManagerReportingInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>/ReportingWebServiceURL:http://$SystemCenter2012SP1ServiceManagerReportingServer/ReportServer_$SystemCenter2012SP1ServiceManagerReportingInstance</Value>
              </Switch>
              <Switch>
                <Value>/ServiceRunUnderAccount:$SystemCenter2012SP1ServiceManagerServicesServiceAccount\$SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword</Value>
                <Log>/ServiceRunUnderAccount:$SystemCenter2012SP1ServiceManagerServicesServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Value>/DataSourceAccount:$SystemCenter2012SP1ServiceManagerReportingServiceAccount\$SystemCenter2012SP1ServiceManagerReportingServiceAccountPassword</Value>
                <Log>/DataSourceAccount:$SystemCenter2012SP1ServiceManagerReportingServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerAnalysisInstance -eq "MSSQLSERVER"</Condition>
                <Value>/AnalysisServerInstance:$SystemCenter2012SP1ServiceManagerAnalysisServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerAnalysisInstance -ne "MSSQLSERVER"</Condition>
                <Value>/AnalysisServerInstance:$SystemCenter2012SP1ServiceManagerAnalysisServerShort\$SystemCenter2012SP1ServiceManagerAnalysisInstance</Value>
              </Switch>
              <Switch>
                <Value>/AnalysisServerDatabaseName:$SystemCenter2012SP1ServiceManagerDWASDataBase</Value>
              </Switch>
              <Switch>
                <Value>/ASRunUnderAccount:$SystemCenter2012SP1ServiceManagerAnalysisServiceAccount\$SystemCenter2012SP1ServiceManagerAnalysisServiceAccountPassword</Value>
                <Log>/ASRunUnderAccount:$SystemCenter2012SP1ServiceManagerAnalysisServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Value>/WorkflowAccount:$SystemCenter2012SP1ServiceManagerWorkflowServiceAccount\$SystemCenter2012SP1ServiceManagerWorkflowServiceAccountPassword</Value>
                <Log>/WorkflowAccount:$SystemCenter2012SP1ServiceManagerWorkflowServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Additional Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{79A76AB5-3EA0-4C4F-89B9-1CA00438EC2E}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Server</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012SP1ServiceManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase:$SystemCenter2012SP1ServiceManagerDatabaseServerShort`:$SystemCenter2012SP1ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase:$SystemCenter2012SP1ServiceManagerDatabaseServerShort\$SystemCenter2012SP1ServiceManagerDatabaseInstance`:$SystemCenter2012SP1ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/ServiceRunUnderAccount:$SystemCenter2012SP1ServiceManagerServicesServiceAccount\$SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword</Value>
                <Log>/ServiceRunUnderAccount:$SystemCenter2012SP1ServiceManagerServicesServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Web Content Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\inetpub\wwwroot\System Center Service Manager Portal\</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:PortalWebContentServer</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/PortalWebSiteName:$SystemCenter2012SP1ServiceManagerPortalWebSiteName</Value>
              </Switch>
              <Switch>
                <Condition>($SSLCert -eq $null) -and ($SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -eq "False")</Condition>
                <Value>/PortalWebSitePort:$SystemCenter2012SP1ServiceManagerPortalWebSitePortHTTP</Value>
              </Switch>
              <Switch>
                <Condition>($SSLCert -ne $null) -or ($SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -eq "True")</Condition>
                <Value>/PortalWebSitePort:$SystemCenter2012SP1ServiceManagerPortalWebSitePortHTTPS</Value>
              </Switch>
              <Switch>
                <Condition>($SSLCert -ne $null) -or ($SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -eq "True")</Condition>
                <Value>/PortalWebSiteCertificate:$SystemCenter2012SP1ServiceManagerWebContentServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase`:$SystemCenter2012SP1ServiceManagerDatabaseServerShort`:$SystemCenter2012SP1ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase`:$SystemCenter2012SP1ServiceManagerDatabaseServerShort\$SystemCenter2012SP1ServiceManagerDatabaseInstance`:$SystemCenter2012SP1ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/PortalAccount:$SystemCenter2012SP1ServiceManagerPortalServiceAccount\$SystemCenter2012SP1ServiceManagerPortalServiceAccountPassword</Value>
                <Log>/PortalAccount:$SystemCenter2012SP1ServiceManagerPortalServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager SharePoint Web Parts Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\inetpub\wwwroot\wss\VirtualDirectories\Service Manager Portal</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:PortalSharePointSite</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/SpPortalWebSiteName:$SystemCenter2012SP1ServiceManagerSpPortalWebSiteName</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -eq "True"</Condition>
                <Value>/SpPortalWebSitePort:$SystemCenter2012SP1ServiceManagerSpPortalWebSitePortHTTPS</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -ne "True"</Condition>
                <Value>/SpPortalWebSitePort:$SystemCenter2012SP1ServiceManagerSpPortalWebSitePortHTTP</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -eq "True"</Condition>
                <Value>/SpPortalWebSiteCertificate:$SystemCenter2012SP1ServiceManagerSharePointWebPartsServer</Value>
              </Switch>
              <Switch>
                <Value>/SpPortalAppPoolAccount:$SystemCenter2012SP1ServiceManagerPortalServiceAccount\$SystemCenter2012SP1ServiceManagerPortalServiceAccountPassword</Value>
                <Log>/SpPortalAppPoolAccount:$SystemCenter2012SP1ServiceManagerPortalServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SpPortalDatabaseServerInstance:$SystemCenter2012SP1ServiceManagerDatabaseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SpPortalDatabaseServerInstance:$SystemCenter2012SP1ServiceManagerDatabaseServerShort\$SystemCenter2012SP1ServiceManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/SpPortalDatabaseName:$SystemCenter2012SP1ServiceManagerSpPortalDatabaseName</Value>
              </Switch>
              <Switch>
                <Condition>!(Test-Path "$LogFolder\Temp\$SystemCenter2012SP1ServiceManagerWebContentServer.cert")</Condition>
                <Value>/SpPortalWebContentServerUrl`:http`://$SystemCenter2012SP1ServiceManagerWebContentServer`:$SystemCenter2012SP1ServiceManagerPortalWebSitePortHTTP/</Value>
              </Switch>
              <Switch>
                <Condition>Test-Path "$LogFolder\Temp\$SystemCenter2012SP1ServiceManagerWebContentServer.cert"</Condition>
                <Value>/SpPortalWebContentServerUrl`:https`://$SystemCenter2012SP1ServiceManagerWebContentServer`:$SystemCenter2012SP1ServiceManagerPortalWebSitePortHTTPS/</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SystemCenter2012SP1ServiceManagerPortalUsers -ne $null</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>. '$SystemDrive\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\CONFIG\POWERSHELL\Registration\SharePoint.ps1';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -eq "True"</Condition>
                <Value>`$Web = Get-SPWeb -Identity 'https://$SystemCenter2012SP1ServiceManagerSharePointWebPartsServerShort`:$SystemCenter2012SP1ServiceManagerSpPortalWebSitePortHTTPS/SMPortal';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate -ne "True"</Condition>
                <Value>`$Web = Get-SPWeb -Identity 'http://$SystemCenter2012SP1ServiceManagerSharePointWebPartsServerShort`:$SystemCenter2012SP1ServiceManagerSpPortalWebSitePortHTTP/SMPortal';</Value>
              </Switch>
              <Switch>
                <Value>`$Web.BreakRoleInheritance(`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Value>`$Web.SiteUsers.Add('$SystemCenter2012SP1ServiceManagerPortalUsers','','','');</Value>
              </Switch>
              <Switch>
                <Value>`$Group = Get-SPUser -Web `$Web | Where-Object {`$_.UserLogin -eq '$SystemCenter2012SP1ServiceManagerPortalUsers'};</Value>
              </Switch>
              <Switch>
                <Value>`$GroupAssignment = new-object Microsoft.SharePoint.SPRoleAssignment(`$Group);</Value>
              </Switch>
              <Switch>
                <Value>`$RoleDefinition = `$Web.Site.RootWeb.RoleDefinitions['Read'];</Value>
              </Switch>
              <Switch>
                <Value>`$GroupAssignment.RoleDefinitionBindings.Add(`$RoleDefinition);</Value>
              </Switch>
              <Switch>
                <Value>`$Web.RoleAssignments.Add(`$GroupAssignment);</Value>
              </Switch>
              <Switch>
                <Value>`$Web.Update()</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{79A76AB5-3EA0-4C4F-89B9-1CA00438EC2E}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1ServiceManagerSource\amd64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Console</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Data Protection Manager">
      <Variable Name="SystemCenter2012SP1DataProtectionManagerSource" Value="SystemCenter2012SP1\DataProtectionManager" />
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/2/C/B/2CB869AF-E266-4869-8C56-80532F98E0EE/SC2012_SP1_SCDPM_EVAL_Part2.exe</URL>
        <File>SC2012_SP1_SCDPM_EVAL_Part2.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>SCDPM\setup.exe</ExistingFile>
          <FileVersion>4.1.3313.0</FileVersion>
        </Extract>
      </Download>
      <Download>
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/2/C/B/2CB869AF-E266-4869-8C56-80532F98E0EE/SC2012_SP1_SCDPM_EVAL_Part1.exe</URL>
        <File>SC2012_SP1_SCDPM_EVAL_Part1.exe</File>
        <Extract>
          <Type>RAR</Type>
          <ExistingFile>CCX86\setup.exe</ExistingFile>
          <FileVersion>4.1.3313.0</FileVersion>
        </Extract>
      </Download>
      <SourceFolder>$SystemCenter2012SP1DataProtectionManagerSource</SourceFolder>
      <Install Name="System Center 2012 SP1 Data Protection Manager Database Server">
        <SourceSubFolder>SCDPM\SQLPrepInstaller</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D2D4E96B-F851-4F0B-9E0D-8B0CCD6A125B}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\SQLPrepInstaller\SQLPrepInstaller_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Data Protection Manager Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D1AF2ECB-E7FE-4B60-9E0C-4B71296BD95C}</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft System Center 2012\DPM\DPMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012SP1DataProtectionManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLAccountPassword=$SystemCenter2012SP1DataProtectionManagerSQLPassword</Value>
                  <Log>SQLAccountPassword=********</Log>
                </Entry>
                <Entry>
                  <Value>YukonMachineName=$SystemCenter2012SP1DataProtectionManagerDatabaseServerShort</Value>
                </Entry>
                <Entry>
                  <Value>YukonInstanceName=$SystemCenter2012SP1DataProtectionManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>YukonMachineUserName=$InstallerServiceAccountUsername</Value>
                </Entry>
                <Entry>
                  <Value>YukonMachinePassword=$InstallerServiceAccountPassword</Value>
                  <Log>YukonMachinePassword=********</Log>
                </Entry>
                <Entry>
                  <Value>YukonMachineDomainName=$InstallerServiceAccountDomain</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/y</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1DataProtectionManagerServer -eq $SystemCenter2012SP1DataProtectionManagerDatabaseServer)</Condition>
                <Value>/LocalSQL</Value>
              </Switch>
              <Switch>
                <Value>/f</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer.ini</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Data Protection Manager Console">
        <SourceSubFolder>SCDPM\DPM2012\dpmcli</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{88E17747-6E2C-48A0-88CC-396AC8D9C5BB}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\DPM2012\dpmcli\dpmV3ui.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\DPM2012\dpmcli\dpmui.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
              <Switch>
                <Value>BOOTSTRAPPED=1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Data Protection Manager Integration">
        <SourceSubFolder>SCDPM\ManagementPacks</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerDataProtectionManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Library)) {Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\ManagementPacks\en-US\Microsoft.SystemCenter.DataProtectionManager.2012.Library.mp};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Discovery)) {Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\ManagementPacks\en-US\Microsoft.SystemCenter.DataProtectionManager.2012.Discovery.mp};</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Library) -and (Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Discovery)) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerDataProtectionManagerIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Integration">
        <SourceSubFolder>SCDPM\DPM2012\dpmcc</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{A3F10264-7A87-4473-8F4A-0B4BCEF2E7B1}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012SP1DataProtectionManagerSource\SCDPM\DPM2012\dpmcc\DPMCentralConsoleServer.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
              <Switch>
                <Value>BOOTSTRAPPED=1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Azure Services 2012">
      <Variable Name="WindowsAzureServices2012Source" Value="WindowsAzureServices2012" />
      <SourceFolder>$WindowsAzureServices2012Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-AdminAndTenantAPI.msi</URL>
        <File>MgmtSvc-AdminAndTenantAPI.msi</File>
        <FileSize>4227072</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-AdminSite.msi</URL>
        <File>MgmtSvc-AdminSite.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-TenantSite.msi</URL>
        <File>MgmtSvc-TenantSite.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-EventSources.msi</URL>
        <File>MgmtSvc-EventSources.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-Usage.msi</URL>
        <File>MgmtSvc-Usage.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-WebAppGallery.msi</URL>
        <File>MgmtSvc-WebAppGallery.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-SQLServer.msi</URL>
        <File>MgmtSvc-SQLServer.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-MySQL.msi</URL>
        <File>MgmtSvc-MySQL.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-Monitoring.msi</URL>
        <File>MgmtSvc-Monitoring.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-PowerShellAPI.msi</URL>
        <File>MgmtSvc-PowerShellAPI.msi</File>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com//download/1/9/8/198468DE-FC13-4265-80C5-C04C3AAC059C/MgmtSvc-ConfigSite.msi</URL>
        <File>MgmtSvc-ConfigSite.msi</File>
      </Download>
      <Install Name="Windows Azure Services 2012 AdminAPI Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012AdminAPIServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-EventSources.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-AdminAndTenantAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012 ADDLOCAL=DatabaseFeature,AdminServiceFeature</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-Usage.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-WebAppGallery.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-SQLServer.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-MySQL.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-Monitoring.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-PowerShellAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-ConfigSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Import-Module -Name MgmtSvcConfig;</Value>
              </Switch>
              <Switch>
                <Value>`$Settings = @{dbServer = '$WindowsAzureServices2012DatabaseServer';configStorePassphrase = '$WindowsAzureServices2012ConfigStorePassphrase'};</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name AdminAPI -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name SQLServer -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name MySQL -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name Monitoring -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name WebAppGallery -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name UsageCollector -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name UsageService -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name AdminAPI).Configured -and (Get-MgmtSvcFeature -Name SQLServer).Configured -and (Get-MgmtSvcFeature -Name MySQL).Configured -and (Get-MgmtSvcFeature -Name Monitoring).Configured -and (Get-MgmtSvcFeature -Name WebAppGallery).Configured -and (Get-MgmtSvcFeature -Name UsageCollector).Configured -and (Get-MgmtSvcFeature -Name UsageService).Configured) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012AdminAPIServer.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 TenantAPI Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012TenantAPIServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-EventSources.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-AdminAndTenantAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012 ADDLOCAL=DatabaseFeature,TenantServiceFeature</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-PowerShellAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-ConfigSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Import-Module -Name MgmtSvcConfig;</Value>
              </Switch>
              <Switch>
                <Value>`$Settings = @{dbServer = '$WindowsAzureServices2012DatabaseServer';configStorePassphrase = '$WindowsAzureServices2012ConfigStorePassphrase'};</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name TenantAPI -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name TenantAPI).Configured) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012TenantAPIServer.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 TenantPublicAPI Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012TenantPublicAPIServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-EventSources.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-AdminAndTenantAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012 ADDLOCAL=DatabaseFeature,TenantPublicServiceFeature</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-PowerShellAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-ConfigSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Import-Module -Name MgmtSvcConfig;</Value>
              </Switch>
              <Switch>
                <Value>`$Settings = @{dbServer = '$WindowsAzureServices2012DatabaseServer';configStorePassphrase = '$WindowsAzureServices2012ConfigStorePassphrase'};</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name TenantPublicAPI -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012TenantPublicAPIServer.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 AdminSite Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012AdminSiteServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-EventSources.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-AdminSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-PowerShellAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-ConfigSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Import-Module -Name MgmtSvcConfig;</Value>
              </Switch>
              <Switch>
                <Value>`$Settings = @{dbServer = '$WindowsAzureServices2012DatabaseServer';configStorePassphrase = '$WindowsAzureServices2012ConfigStorePassphrase'};</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name AdminSite -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name AdminSite).Configured) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012AdminSiteServer.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 TenantSite Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012TenantSiteServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-EventSources.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-TenantSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-PowerShellAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzureServices2012Source\MgmtSvc-ConfigSite.msi</Value>
              </Switch>
              <Switch>
                <Value>TAG=2012</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Import-Module -Name MgmtSvcConfig;</Value>
              </Switch>
              <Switch>
                <Value>`$Settings = @{dbServer = '$WindowsAzureServices2012DatabaseServer';configStorePassphrase = '$WindowsAzureServices2012ConfigStorePassphrase'};</Value>
              </Switch>
              <Switch>
                <Value>Initialize-MgmtSvcFeature -Name TenantSite -Settings `$Settings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name TenantSite).Configured) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012TenantSiteServer.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012AdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (!([ADSI]::Exists('WinNT://$WindowsAzureServices2012AdminSiteServer/MgmtSvc Operators,group'))) {</Value>
              </Switch>
              <Switch>
                <Value>`$Computer = [ADSI]'WinNT://$WindowsAzureServices2012AdminSiteServer,computer';</Value>
              </Switch>
              <Switch>
                <Value>`$LocalGroup = `$Computer.Create('group','MgmtSvc Operators');</Value>
              </Switch>
              <Switch>
                <Value>`$LocalGroup.SetInfo();</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$WindowsAzureServices2012AdminSiteServer/MgmtSvc Operators,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$WindowsAzureServices2012AdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$WindowsAzureServices2012AdminGroup'.Split('\')[0] + '/' + '$WindowsAzureServices2012AdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-UserInGroup -User '$WindowsAzureServices2012AdminGroup' -Group `$Group) {'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012AdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Integration">
      <Install Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Cluster Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceProviderFoundationVirtualMachineManagerClusterIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFServer -Name $SystemCenter2012SP1VirtualMachineManagerVmmServerName -ServerType 0;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFServer -Name $SystemCenter2012SP1VirtualMachineManagerVmmServerName) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceProviderFoundationVirtualMachineManagerClusterIntegration.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceProviderFoundationVirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFServer -Name $SystemCenter2012SP1VirtualMachineManagerManagementServer -ServerType 0;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFServer -Name $SystemCenter2012SP1VirtualMachineManagerManagementServer) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceProviderFoundationVirtualMachineManagerIntegration.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 App Controller Virtual Machine Manager Cluster Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1AppControllerVirtualMachineManagerClusterIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$i = 0;</Value>
              </Switch>
              <Switch>
                <Value>While ((`$i -lt 5) -and !(Get-SCACServer -ServerName 'https://$SystemCenter2012SP1AppControllerServer`:$SystemCenter2012SP1AppControllerPort' -Credential `$Credential)) {Start-Sleep 60;`$i++};</Value>
              </Switch>
              <Switch>
                <Value>Add-SCACCloudSystem -Name '$SystemCenter2012SP1VirtualMachineManagerVmmServerName' -ServerName '$SystemCenter2012SP1VirtualMachineManagerVmmServerName' -Port $SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort -VMM:`$true;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCACCloudSystem -Name '$SystemCenter2012SP1VirtualMachineManagerVmmServerName') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1AppControllerVirtualMachineManagerClusterIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 App Controller Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1AppControllerVirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$i = 0;</Value>
              </Switch>
              <Switch>
                <Value>Get-SCACServer -ServerName 'https://$SystemCenter2012SP1AppControllerServer`:$SystemCenter2012SP1AppControllerPort' -Credential `$Credential;</Value>
              </Switch>
              <Switch>
                <Value>`$Done = `$False;</Value>
              </Switch>
              <Switch>
                <Value>While ((`$i -lt 5) -and !(`$Done)) {</Value>
              </Switch>
              <Switch>
                <Value>Get-SCACServer -ServerName 'https://$SystemCenter2012SP1AppControllerServer`:$SystemCenter2012SP1AppControllerPort' -Credential `$Credential;</Value>
              </Switch>
              <Switch>
                <Value>Add-SCACCloudSystem -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer' -ServerName '$SystemCenter2012SP1VirtualMachineManagerManagementServer' -Port $SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort -VMM:`$true;</Value>
              </Switch>
              <Switch>
                <Value>try {If (Get-SCACCloudSystem -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer') {`$Done = `$True}} catch {Start-Sleep 60};</Value>
              </Switch>
              <Switch>
                <Value>`$i++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCACCloudSystem -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1AppControllerVirtualMachineManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerVirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1ManagementPacksSource\Microsoft.SQLServer.Library.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1ManagementPacksSource\Microsoft.Windows.Server.Library.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1ManagementPacksSource\Microsoft.Windows.Server.2008.Discovery.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1ManagementPacksSource\Microsoft.Windows.InternetInformationServices.CommonLibrary.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1ManagementPacksSource\Microsoft.Windows.InternetInformationServices.2003.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012SP1ManagementPacksSource\Microsoft.Windows.InternetInformationServices.2008.mp;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerVirtualMachineManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Cluster Operations Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerClusterOperationsManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module VirtualMachineManager)) {Import-Module VirtualMachineManager};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1VirtualMachineManagerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1VirtualMachineManagerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOpsMgrConnection -VMMServer $SystemCenter2012SP1VirtualMachineManagerVmmServerName)) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCOpsMgrConnection -EnablePRO `$true -EnableMaintenanceModeIntegration `$true -OpsMgrServer $SystemCenter2012SP1OperationsManagerManagementServer -VMMServerCredential `$Credential -UseVMMServerServiceAccount -VMMServer $SystemCenter2012SP1VirtualMachineManagerVmmServerName</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOpsMgrConnection -VMMServer $SystemCenter2012SP1VirtualMachineManagerVmmServerName) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerClusterOperationsManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Operations Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerOperationsManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module VirtualMachineManager)) {Import-Module VirtualMachineManager};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1VirtualMachineManagerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1VirtualMachineManagerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOpsMgrConnection -VMMServer $SystemCenter2012SP1VirtualMachineManagerManagementServer)) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCOpsMgrConnection -EnablePRO `$true -EnableMaintenanceModeIntegration `$true -OpsMgrServer $SystemCenter2012SP1OperationsManagerManagementServer -VMMServerCredential `$Credential -UseVMMServerServiceAccount -VMMServer $SystemCenter2012SP1VirtualMachineManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOpsMgrConnection -VMMServer $SystemCenter2012SP1VirtualMachineManagerManagementServer) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerOperationsManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Datawarehouse Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerDatawarehouseIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module Microsoft.EnterpriseManagement.Warehouse.Cmdlets)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Microsoft.EnterpriseManagement.Warehouse.Cmdlets.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCDWSource -DataSourceType ServiceManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012SP1ServiceManagerManagementGroupName'})) {</Value>
              </Switch>
              <Switch>
                <Value>Register-SCDWSource -DataSourceType ServiceManager -SourceComputerName $SystemCenter2012SP1ServiceManagerManagementServer -SourceCredential `$Credential</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCDWSource -DataSourceType ServiceManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012SP1ServiceManagerManagementGroupName'}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerDatawarehouseIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Operations Manager Datawarehouse Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOperationsManagerDatawarehouseIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module Microsoft.EnterpriseManagement.Warehouse.Cmdlets)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Microsoft.EnterpriseManagement.Warehouse.Cmdlets.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1OperationsManagerActionServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1OperationsManagerActionServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCDWSource -DataSourceType OperationsManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012SP1OperationsManagerManagementGroupName'})) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>Register-SCDWSource -DataSourceType OperationsManager -SourceComputerName $SystemCenter2012SP1OperationsManagerManagementServer -DataSourceDbName $SystemCenter2012SP1OperationsManagerDatabaseName -DataSourceDbServerName $SystemCenter2012SP1OperationsManagerDatabaseServer -FullPathToSourceManagementPackBundle '$SystemCenter2012SP1ServiceManagerInstallPath\OperationsManagerMP.mpb' -SourceCredential `$Credential</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OperationsManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>Register-SCDWSource -DataSourceType OperationsManager -SourceComputerName $SystemCenter2012SP1OperationsManagerManagementServer -DataSourceDbName $SystemCenter2012SP1OperationsManagerDatabaseName -DataSourceDbServerName $SystemCenter2012SP1OperationsManagerDatabaseServer\$SystemCenter2012SP1OperationsManagerDatabaseInstance -FullPathToSourceManagementPackBundle '$SystemCenter2012SP1ServiceManagerInstallPath\OperationsManagerMP.mpb' -SourceCredential `$Credential</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCDWSource -DataSourceType OperationsManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012SP1OperationsManagerManagementGroupName'}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOperationsManagerDatawarehouseIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Configuration Manager Service Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ConfigurationManagerServiceManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'USE [master]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'CREATE LOGIN [$SystemCenter2012SP1ServiceManagerServicesServiceAccount] FROM WINDOWS WITH DEFAULT_DATABASE=[master]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'USE [$SystemCenter2012SP1ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'CREATE USER [$SystemCenter2012SP1ServiceManagerServicesServiceAccount] FOR LOGIN [$SystemCenter2012SP1ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'USE [$SystemCenter2012SP1ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'ALTER ROLE [db_datareader] ADD MEMBER [$SystemCenter2012SP1ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'USE [master]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'CREATE LOGIN [$SystemCenter2012SP1ServiceManagerServicesServiceAccount] FROM WINDOWS WITH DEFAULT_DATABASE=[master]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'USE [$SystemCenter2012SP1ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'CREATE USER [$SystemCenter2012SP1ServiceManagerServicesServiceAccount] FOR LOGIN [$SystemCenter2012SP1ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'USE [$SystemCenter2012SP1ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'ALTER ROLE [db_datareader] ADD MEMBER [$SystemCenter2012SP1ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null) -and ($SystemCenter2012SP1ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ConfigurationManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ConfigurationManagerDatabaseServerShort -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null) -and ($SystemCenter2012SP1ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ConfigurationManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ConfigurationManagerDatabaseServerShort\$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null) -and ($SystemCenter2012SP1ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ConfigurationManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ConfigurationManagerDatabaseServerShort -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null) -and ($SystemCenter2012SP1ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012SP1ConfigurationManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012SP1ConfigurationManagerDatabaseServerShort\$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012SP1ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ConfigurationManagerServiceManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Orchestrator Service Manager Connector Integration">
        <Validation>
          <Type>UserInGroup</Type>
          <Value>$SystemCenter2012SP1ServiceManagerServicesServiceAccount/OrchestratorUsersGroup</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>net.exe</Executable>
            <Switches>
              <Switch>
                <Value>localgroup OrchestratorUsersGroup `"$SystemCenter2012SP1ServiceManagerServicesServiceAccount`" /add</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Orchestrator Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOrchestratorConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorWebURL -eq ""</Condition>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OrchestratorWebComponentsServer') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')})) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorWebURL -ne ""</Condition>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OrchestratorWebURL') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')})) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorWebURL -eq ""</Condition>
                <Value>New-SCOrchestratorConnector -DisplayName '$SystemCenter2012SP1OrchestratorWebComponentsServer' -SCOCredential `$Credential -WebServiceURL 'http://$SystemCenter2012SP1OrchestratorWebComponentsServer`:$SystemCenter2012SP1OrchestratorWebServicePort/Orchestrator2012/Orchestrator.svc' -WebConsoleURL 'http://$SystemCenter2012SP1OrchestratorWebComponentsServer`:$SystemCenter2012SP1OrchestratorWebConsolePort/'</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorWebURL -ne ""</Condition>
                <Value>New-SCOrchestratorConnector -DisplayName '$SystemCenter2012SP1OrchestratorWebURL' -SCOCredential `$Credential -WebServiceURL 'http://$SystemCenter2012SP1OrchestratorWebURL`:$SystemCenter2012SP1OrchestratorWebServicePort/Orchestrator2012/Orchestrator.svc' -WebConsoleURL 'http://$SystemCenter2012SP1OrchestratorWebURL`:$SystemCenter2012SP1OrchestratorWebConsolePort/'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorWebURL -eq ""</Condition>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OrchestratorWebComponentsServer') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')}) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1OrchestratorWebURL -ne ""</Condition>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OrchestratorWebURL') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOrchestratorConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Virtual Machine Manager Cluster Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerVirtualMachineManagerClusterConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1VirtualMachineManagerVmmServerName') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')})) {</Value>
              </Switch>
              <Switch>
                <Value>`$RA = (Get-SCSMRunAsAccount -DisplayName 'Operational Database Account').SecureReference;</Value>
              </Switch>
              <Switch>
                <Value>New-SCVMMConnector -DisplayName '$SystemCenter2012SP1VirtualMachineManagerVmmServerName' -RunAsAccount `$RA -ServerName $SystemCenter2012SP1VirtualMachineManagerVmmServerName</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1VirtualMachineManagerVmmServerName') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerVirtualMachineManagerClusterConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Virtual Machine Manager Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerVirtualMachineManagerConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1VirtualMachineManagerManagementServer') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')})) {</Value>
              </Switch>
              <Switch>
                <Value>`$RA = (Get-SCSMRunAsAccount -DisplayName 'Operational Database Account').SecureReference;</Value>
              </Switch>
              <Switch>
                <Value>New-SCVMMConnector -DisplayName '$SystemCenter2012SP1VirtualMachineManagerManagementServer' -RunAsAccount `$RA -ServerName $SystemCenter2012SP1VirtualMachineManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1VirtualMachineManagerManagementServer') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerVirtualMachineManagerConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Operations Manager Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOperationsManagerConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OperationsManagerManagementGroupName') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Configuration Items')})) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name System.Image.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012SP1ServiceManagerInstallPath\Operations Manager 2012 SP1 Management Packs\System.Image.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name System.Virtualization.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012SP1ServiceManagerInstallPath\Operations Manager 2012 SP1 Management Packs\System.Virtualization.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name Microsoft.SystemCenter.DataWarehouse.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012SP1ServiceManagerInstallPath\Operations Manager 2012 SP1 Management Packs\Microsoft.SystemCenter.DataWarehouse.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name Microsoft.SystemCenter.DataWarehouse.Report.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012SP1ServiceManagerInstallPath\Operations Manager 2012 SP1 Management Packs\Microsoft.SystemCenter.DataWarehouse.Report.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name Microsoft.SystemCenter.OperationsManager.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012SP1ServiceManagerInstallPath\Operations Manager 2012 SP1 Management Packs\Microsoft.SystemCenter.OperationsManager.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>New-SCOMConfigurationItemConnector -DisplayName $SystemCenter2012SP1OperationsManagerManagementGroupName -OperationsManagerServer $SystemCenter2012SP1OperationsManagerManagementServer -SCOMCredential `$Credential -ManagementPack 'Microsoft.Windows.Library' -ScheduleDay Daily -ScheduleHour 0</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OperationsManagerManagementGroupName') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Configuration Items')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOperationsManagerConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Operations Manager Alert Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOperationsManagerAlertConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OperationsManagerManagementGroupName Alerts') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Alerts')})) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCOMAlertConnector -DisplayName '$SystemCenter2012SP1OperationsManagerManagementGroupName Alerts' -OperationsManagerServer $SystemCenter2012SP1OperationsManagerManagementServer -SCOMCredential `$Credential -CloseAlert -ResolveIncident</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1OperationsManagerManagementGroupName Alerts') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Alerts')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerOperationsManagerAlertConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Configuration Manager Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerConfigurationManagerConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012SP1ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012SP1ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1ConfigurationManagerSiteCode') -and (`$_.DataProviderDisplayName -eq 'Configuration Manager')})) {</Value>
              </Switch>
              <Switch>
                <Value>`$MP = Get-SCSMManagementPack -DisplayName 'System Center Configuration Manager 2012 Connector Configuration';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>New-SCCMConnector -DisplayName $SystemCenter2012SP1ConfigurationManagerSiteCode -DatabaseName $SystemCenter2012SP1ConfigurationManagerDatabase -DatabaseServer $SystemCenter2012SP1ConfigurationManagerDatabaseServer -SCCMCredential `$Credential -ScheduleDay Daily -ScheduleHour 0 -SolutionManagementPack `$MP</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>New-SCCMConnector -DisplayName $SystemCenter2012SP1ConfigurationManagerSiteCode -DatabaseName $SystemCenter2012SP1ConfigurationManagerDatabase -DatabaseServer $SystemCenter2012SP1ConfigurationManagerDatabaseServer\$SystemCenter2012SP1ConfigurationManagerDatabaseInstance -SCCMCredential `$Credential -ScheduleDay Daily -ScheduleHour 0 -SolutionManagementPack `$MP</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012SP1ConfigurationManagerSiteCode') -and (`$_.DataProviderDisplayName -eq 'Configuration Manager')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerConfigurationManagerConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Roles Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerDataProtectionManagerCentralConsoleServerRolesIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOMUserRole -DisplayName 'DPM Admin')) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Process -FilePath '$SystemDrive\Program Files\Microsoft DPM\bin\DefaultRoleConfigurator.exe' -ArgumentList '-Quiet' -Wait</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOMUserRole -DisplayName 'DPM Admin') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerDataProtectionManagerCentralConsoleServerRolesIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 System Center 2012 SP1 Service Provider Foundation Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012SystemCenter2012SP1ServiceProviderFoundationIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module MgmtSvcConfig)) {Import-Module MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-ResourceProvider -Name systemcenter)) {</Value>
              </Switch>
              <Switch>
                <Value>`$RP = New-ResourceProvider -Name 'systemcenter' -DisplayName 'Virtual Machine Clouds' -AdminForwardingAddress 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount' -AdminAuthenticationPassword '$SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountPassword' -TenantSourceUriTemplate '{subid}/services/systemcenter/vmm/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/{*path}' -TenantForwardingAddress 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/SC2012/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName 'SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountPassword' -UsageForwardingAddress 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/' -UsageAuthenticationMode Basic -UsageAuthenticationUserName 'SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount' -UsageAuthenticationPassword '$SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountPassword';</Value>
                <Log>`$RP = New-ResourceProvider -Name 'systemcenter' -DisplayName 'Virtual Machine Clouds' -AdminForwardingAddress 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount' -AdminAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/services/systemcenter/vmm/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/{*path}' -TenantForwardingAddress 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/SC2012/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName 'SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount' -TenantAuthenticationPassword '********' -UsageForwardingAddress 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/' -UsageAuthenticationMode Basic -UsageAuthenticationUserName 'SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount' -UsageAuthenticationPassword '********';</Log>
              </Switch>
              <Switch>
                <Value>Add-ResourceProvider -ResourceProvider `$RP;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ResourceProvider -Name systemcenter).AdminEndpoint.ForwardingAddress.OriginalString -eq 'https://$SystemCenter2012SP1ServiceProviderFoundationServer`:$SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber/') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012SystemCenter2012SP1ServiceProviderFoundationIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012SystemCenter2012SP1VirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSPFStamp -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer')) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFStamp -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer' -Servers (Get-SCSPFServer -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer') -Tenants (Get-SCSPFTenant -Name Administrator)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFStamp -Name '$SystemCenter2012SP1VirtualMachineManagerManagementServer') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012SystemCenter2012SP1VirtualMachineManagerIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Cluster Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzureServices2012SystemCenter2012SP1VirtualMachineManagerClusterIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSPFStamp -Name '$SystemCenter2012SP1VirtualMachineManagerVmmServerName')) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFStamp -Name '$SystemCenter2012SP1VirtualMachineManagerVmmServerName' -Servers (Get-SCSPFServer -Name '$SystemCenter2012SP1VirtualMachineManagerVmmServerName') -Tenants (Get-SCSPFTenant -Name Administrator)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFStamp -Name '$SystemCenter2012SP1VirtualMachineManagerVmmServerName') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzureServices2012SystemCenter2012SP1VirtualMachineManagerClusterIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 SP1 Configuration">
      <Install Name="System Center 2012 SP1 Orchestrator Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OrchestratorAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$SystemCenter2012SP1OrchestratorManagementServer/OrchestratorUsersGroup,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012SP1OrchestratorAdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012SP1OrchestratorAdminGroup'.Split('\')[0] + '/' + '$SystemCenter2012SP1OrchestratorAdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-UserInGroup -User '$SystemCenter2012SP1OrchestratorAdminGroup' -Group `$Group) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1OrchestratorAdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module virtualmachinemanager)) {Import-Module virtualmachinemanager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCUserRole -VMMServer $SystemCenter2012SP1VirtualMachineManagerManagementServer -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012SP1VirtualMachineManagerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>Get-SCUserRole -VMMServer $SystemCenter2012SP1VirtualMachineManagerManagementServer -Name Administrator | Set-SCUserRole -AddMember '$SystemCenter2012SP1VirtualMachineManagerAdminGroup'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCUserRole -VMMServer $SystemCenter2012SP1VirtualMachineManagerManagementServer -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012SP1VirtualMachineManagerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Cluster Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module virtualmachinemanager)) {Import-Module virtualmachinemanager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCUserRole -VMMServer $SystemCenter2012SP1VirtualMachineManagerVmmServerName -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012SP1VirtualMachineManagerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>Get-SCUserRole -VMMServer $SystemCenter2012SP1VirtualMachineManagerVmmServerName -Name Administrator | Set-SCUserRole -AddMember '$SystemCenter2012SP1VirtualMachineManagerAdminGroup'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCUserRole -VMMServer $SystemCenter2012SP1VirtualMachineManagerVmmServerName -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012SP1VirtualMachineManagerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 App Controller Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1AppControllerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>Get-SCACServer -ServerName 'https://$SystemCenter2012SP1AppControllerServer`:$SystemCenter2012SP1AppControllerPort' -Credential `$Credential;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCACUserRole -Managed | Where-Object {`$_.Name -eq 'Administrators'} | ForEach-Object {`$_.Members} | Where-Object {`$_.DomainQualifiedUserName -eq '$SystemCenter2012SP1AppControllerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$UserRole = Get-SCACUserRole -Managed | Where-Object {`$_.Name -eq 'Administrators'};</Value>
              </Switch>
              <Switch>
                <Value>Add-SCACUserRoleMember -UserRole `$UserRole -Member '$SystemCenter2012SP1AppControllerAdminGroup'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCACUserRole -Managed | Where-Object {`$_.Name -eq 'Administrators'} | ForEach-Object {`$_.Members} | Where-Object {`$_.DomainQualifiedUserName -eq '$SystemCenter2012SP1AppControllerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012SP1AppControllerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOMUserRole -Name 'OperationsManagerAdministrators' | ForEach-Object {`$_.Users} | Where-Object {`$_ -eq '$SystemCenter2012SP1OperationsManagerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$UserRole = Get-SCOMUserRole -Name 'OperationsManagerAdministrators' ;</Value>
              </Switch>
              <Switch>
                <Value>Set-SCOMUserRole -UserRole `$UserRole -User (`$UserRole.Users + '$SystemCenter2012SP1OperationsManagerAdminGroup')</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOMUserRole -Name 'OperationsManagerAdministrators' | ForEach-Object {`$_.Users} | Where-Object {`$_ -eq '$SystemCenter2012SP1OperationsManagerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012SP1OperationsManagerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Configuration Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ConfigurationManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$SystemDrive\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10 -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'ServerName' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'ServerName' -Value '$SystemCenter2012SP1ConfigurationManagerSiteServer'}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'ServerName' -PropertyType String -Value '$SystemCenter2012SP1ConfigurationManagerSiteServer'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteCode' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteCode' -Value '$SystemCenter2012SP1ConfigurationManagerSiteCode'}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteCode' -PropertyType String -Value '$SystemCenter2012SP1ConfigurationManagerSiteCode'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteName' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteName' -Value '$SystemCenter2012SP1ConfigurationManagerSite'}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteName' -PropertyType String -Value '$SystemCenter2012SP1ConfigurationManagerSite'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SecurityType' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SecurityType' -Value 0}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SecurityType' -PropertyType DWord -Value 0};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'DomainName' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'DomainName' -Value ''}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'DomainName' -PropertyType String -Value ''};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module ConfigurationManager)) {Import-Module '$SystemDrive\Program Files (x86)\Microsoft Configuration Manager\AdminConsole\bin\ConfigurationManager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>Set-Location $SystemCenter2012SP1ConfigurationManagerSiteCode`:;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-CMAdministrativeUser -RoleName 'Full Administrator' | Where-Object {`$_.LogonName -eq '$SystemCenter2012SP1ConfigurationManagerAdminGroup'})) {New-CMAdministrativeUser -RoleName 'Full Administrator' -SecurityScopeName All -Name '$SystemCenter2012SP1ConfigurationManagerAdminGroup'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-CMAdministrativeUser -RoleName 'Full Administrator' | Where-Object {`$_.LogonName -eq '$SystemCenter2012SP1ConfigurationManagerAdminGroup'}) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ConfigurationManagerAdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Data Protection Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1DataProtectionManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$SystemCenter2012SP1DataProtectionManagerServer/$AdminGroup,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012SP1DataProtectionManagerAdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012SP1DataProtectionManagerAdminGroup'.Split('\')[0] + '/' + '$SystemCenter2012SP1DataProtectionManagerAdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$DBAdmin = Invoke-Command -ComputerName $SystemCenter2012SP1DataProtectionManagerDatabaseServer -ScriptBlock {</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$SystemCenter2012SP1DataProtectionManagerDatabaseServer/DPMDBAdministrators`$$SystemCenter2012SP1DataProtectionManagerServerShort,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012SP1DataProtectionManagerAdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012SP1DataProtectionManagerAdminGroup'.Split('\')[0] + '/' + '$SystemCenter2012SP1DataProtectionManagerAdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-UserInGroup -User '$SystemCenter2012SP1DataProtectionManagerAdminGroup' -Group `$Group) {Return `$true}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (`$DBAdmin -and (Get-UserInGroup -User '$SystemCenter2012SP1DataProtectionManagerAdminGroup' -Group `$Group)) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1DataProtectionManagerAdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Orchestrator Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OrchestratorShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Orchestrator' + [char]39 + ' -Application ' + [char]39 + 'Runbook Designer' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator\RunbookDesigner.config' + [char]34 + ')) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + 'OISClient' + [char]62 + '' + [char]60 + 'AllowEmptyComment' + [char]62 + '' + [char]60 + '/AllowEmptyComment' + [char]62 + '' + [char]60 + 'AutoCheckOut' + [char]62 + '' + [char]60 + '/AutoCheckOut' + [char]62 + '' + [char]60 + 'PromptForComment' + [char]62 + '' + [char]60 + '/PromptForComment' + [char]62 + '' + [char]60 + 'RefreshInterval' + [char]62 + '5' + [char]60 + '/RefreshInterval' + [char]62 + '' + [char]60 + 'ShowLinkLabels' + [char]62 + '' + [char]60 + '/ShowLinkLabels' + [char]62 + '' + [char]60 + 'ShowTooltips' + [char]62 + '' + [char]60 + '/ShowTooltips' + [char]62 + '' + [char]60 + 'ConnectedServer' + [char]62 + '$SystemCenter2012SP1OrchestratorManagementServer' + [char]60 + '/ConnectedServer' + [char]62 + '' + [char]60 + '/OISClient' + [char]62 + '' + [char]39 + ' | Out-File ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator\RunbookDesigner.config' + [char]34 + ' -Encoding ASCII';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1OrchestratorShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Virtual Machine Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Virtual Machine Manager' + [char]39 + ' -Application ' + [char]39 + 'Virtual Machine Manager Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1VirtualMachineManagerManagementServer -ne $null) -and ($SystemCenter2012SP1VirtualMachineManagerManagementServer -ne "")</Condition>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012SP1VirtualMachineManagerManagementServer' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012SP1VirtualMachineManagerManagementServer' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012SP1VirtualMachineManagerVmmServerName -ne $null) -and ($SystemCenter2012SP1VirtualMachineManagerVmmServerName -ne "")</Condition>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012SP1VirtualMachineManagerVmmServerName' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012SP1VirtualMachineManagerVmmServerName' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'vmmServerPort' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'vmmServerPort' + [char]34 + ' -Value $SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'vmmServerPort' + [char]34 + ' -PropertyType DWord -Value $SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1VirtualMachineManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Operations Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Operations Manager' + [char]39 + ' -Application ' + [char]39 + 'Operations Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012SP1OperationsManagerManagementServer' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012SP1OperationsManagerManagementServer' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012SP1OperationsManagerManagementServer' + [char]34 + ' -Name ' + [char]34 + 'ManagementGroupName' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012SP1OperationsManagerManagementServer' + [char]34 + ' -Name ' + [char]34 + 'ManagementGroupName' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012SP1OperationsManagerManagementGroupName' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012SP1OperationsManagerManagementServer' + [char]34 + ' -Name ' + [char]34 + 'ManagementGroupName' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012SP1OperationsManagerManagementGroupName' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1OperationsManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Configuration Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ConfigurationManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Configuration Manager' + [char]39 + ' -Application ' + [char]39 + 'Configuration Manager Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ConfigurationManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Service Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Service Manager' + [char]39 + ' -Application ' + [char]39 + 'Service Manager Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -Name ' + [char]34 + 'SDKServiceMachine' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -Name ' + [char]34 + 'SDKServiceMachine' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012SP1ServiceManagerManagementServer' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -Name ' + [char]34 + 'SDKServiceMachine' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012SP1ServiceManagerManagementServer' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1ServiceManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 SP1 Data Protection Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012SP1DataProtectionManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Data Protection Manager' + [char]39 + ' -Application ' + [char]39 + 'Microsoft System Center Data Protection Manager' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ')) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:AppData\Microsoft' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:AppData\Microsoft' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + '?xml version=' + [char]34 + '1.0' + [char]34 + ' encoding=' + [char]34 + 'utf-16' + [char]34 + '?' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + 'ProductSettings xmlns:xsi=' + [char]34 + 'http://www.w3.org/2001/XMLSchema-instance' + [char]34 + ' xmlns:xsd=' + [char]34 + 'http://www.w3.org/2001/XMLSchema' + [char]34 + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '  ' + [char]60 + 'Modules' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '    ' + [char]60 + 'Module' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '      ' + [char]60 + 'KeyValuePairs' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '        ' + [char]60 + 'KeyValuePair Key=' + [char]34 + 'LastConnectedDPMServer' + [char]34 + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '          ' + [char]60 + 'Value' + [char]62 + '$SystemCenter2012SP1DataProtectionManagerServer' + [char]60 + '/Value' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '        ' + [char]60 + '/KeyValuePair' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '      ' + [char]60 + '/KeyValuePairs' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '      ' + [char]60 + 'ModuleName' + [char]62 + 'Launcher' + [char]60 + '/ModuleName' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '    ' + [char]60 + '/Module' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '  ' + [char]60 + '/Modules' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + '/ProductSettings' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012SP1DataProtectionManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="SQL Server 2012 Management Tools Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SQLServer2012ManagementToolsShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft SQL Server 2012' + [char]39 + ' -Application ' + [char]39 + 'SQL Server Management Studio' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SQLServer2012ManagementToolsShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="SQL Server 2008 R2 Management Tools Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SQLServer2012ManagementToolsShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Temp\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Temp\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft SQL Server 2008 R2' + [char]39 + ' -Application ' + [char]39 + 'SQL Server Management Studio' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Temp\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SQLServer2012ManagementToolsShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Management Packs">
      <Variable Name="SystemCenter2012R2ManagementPacksSource" Value="SystemCenter2012R2\ManagementPacks" />
      <SourceFolder>$SystemCenter2012R2ManagementPacksSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/f/7/b/f7b960c9-7392-4c5a-bab4-efbb8a66ec2a/BaseOSBlueGA/Microsoft.Windows.Server.Library.mp</URL>
        <File>Microsoft.Windows.Server.Library.mp</File>
        <FileSize>76488</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/f/7/b/f7b960c9-7392-4c5a-bab4-efbb8a66ec2a/BaseOSBlueGA/Microsoft.Windows.Server.2008.Discovery.mp</URL>
        <File>Microsoft.Windows.Server.2008.Discovery.mp</File>
        <FileSize>72392</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/F/1/FF13C2CF-C955-4D3F-94EA-4094AD0DBFF3/Microsoft.Windows.InternetInformationServices.CommonLibrary.MP</URL>
        <File>Microsoft.Windows.InternetInformationServices.CommonLibrary.mp</File>
        <FileSize>55152</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/F/1/FF13C2CF-C955-4D3F-94EA-4094AD0DBFF3/Microsoft.Windows.InternetInformationServices.2003.MP</URL>
        <File>Microsoft.Windows.InternetInformationServices.2003.mp</File>
        <FileSize>186224</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/F/F/1/FF13C2CF-C955-4D3F-94EA-4094AD0DBFF3/Microsoft.Windows.InternetInformationServices.2008.MP</URL>
        <File>Microsoft.Windows.InternetInformationServices.2008.mp</File>
        <FileSize>199496</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/0/7/7/07714012-3B7C-4691-9F2B-7ADE4188E552/Microsoft.SQLServer.Library.mp</URL>
        <File>Microsoft.SQLServer.Library.mp</File>
        <FileSize>171800</FileSize>
      </Download>
      <Install Name="System Center 2012 R2 Management Packs">
        <Validation>
          <Type>None</Type>
          <Value>None</Value>
        </Validation>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Integration Packs">
      <Variable Name="SystemCenter2012R2IntegrationPacksSource" Value="SystemCenter2012R2\IntegrationPacks" />
      <SourceFolder>$SystemCenter2012R2IntegrationPacksSource</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/9/C/F/9CF8AE30-5A81-4576-8A58-69D11B3863B5/System_Center_2012_R2_Integration_Packs.EXE</URL>
        <File>System_Center_2012_R2_Integration_Packs.EXE</File>
        <Run>
          <ExistingFile>SC2012R2_Integration_Pack_for_Operations_Manager.oip</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_R2_Integration_Packs.EXE</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/9/C/F/9CF8AE30-5A81-4576-8A58-69D11B3863B5/System_Center_2012_R2_Orchestrator_Integration_ToolKit.exe</URL>
        <File>System_Center_2012_R2_Orchestrator_Integration_ToolKit.exe</File>
        <Run>
          <ExistingFile>OrchestratorToolkitSetup.msi</ExistingFile>
          <Command>$Download\Download\$DownloadFolder\System_Center_2012_R2_Orchestrator_Integration_ToolKit.exe</Command>
          <Argument>/q /x:$Download\$DownloadFolder</Argument>
        </Run>      
      </Download>
    </Installable>
    <Installable Name="System Center 2012 R2 Virtual Machine Manager">
      <Variable Name="SystemCenter2012R2VirtualMachineManagerSource" Value="SystemCenter2012R2\VirtualMachineManager" />
      <SourceFolder>$SystemCenter2012R2VirtualMachineManagerSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>setup.exe</File>
        <FileVersion>3.2.7510.0</FileVersion>
<!--
        <Type>DownloadRun</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCVMM.exe</URL>
        <File>SC2012_R2_SCVMM.exe</File>
        <Run>
          <ExistingFile>setup.exe</ExistingFile>
          <FileVersion>3.2.7510.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SC2012_R2_SCVMM.exe</Command>
          <Argument>/verysilent /dir=$Download\$DownloadFolder</Argument>
        </Run>
-->
      </Download>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{59518B15-FC64-4CF9-A4D1-0EE1B4A63088}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>MUOptIn=$MicrosoftUpdate</Value>
                </Entry>
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>SQMOptIn=$CustomerExperienceImprovementProgram</Value>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012R2VirtualMachineManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLMachineName=$SystemCenter2012R2VirtualMachineManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Value>RemoteDatabaseImpersonation=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLInstanceName=$SystemCenter2012R2VirtualMachineManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewSQLDatabase=1</Value>
                </Entry>
                <Entry>
                  <Value>SQLDatabaseName=$SystemCenter2012R2VirtualMachineManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>VMMServiceLocalAccount=0</Value>
                </Entry>
                <Entry>
                  <Value>IndigoTcpPort=$SystemCenter2012R2VirtualMachineManagerIndigoTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>WSManTcpPort=$SystemCenter2012R2VirtualMachineManagerWSManTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>BitsTcpPort=$SystemCenter2012R2VirtualMachineManagerBitsTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoNETTCPPort=$SystemCenter2012R2VirtualMachineManagerIndigoNETTCPPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPSPort=$SystemCenter2012R2VirtualMachineManagerIndigoHTTPSPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPPort=$SystemCenter2012R2VirtualMachineManagerIndigoHTTPPort</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewLibraryShare=1</Value>
                </Entry>
                <Entry>
                  <Value>LibraryShareName=MSSCVMMLibrary</Value>
                </Entry>
                <Entry>
                  <Value>LibrarySharePath=$SystemCenter2012R2VirtualMachineManagerLibraryPath</Value>
                </Entry>
                <Entry>
                  <Value>LibraryShareDescription=VMM Library Share</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012R2VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/server</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
              <Switch>
                <Value>/f $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceDomain $SystemCenter2012R2VirtualMachineManagerServiceAccountDomain</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserName $SystemCenter2012R2VirtualMachineManagerServiceAccountUsername</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserPassword $SystemCenter2012R2VirtualMachineManagerServiceAccountPassword</Value>
                <Log>/vmmServiceUserPassword ********</Log>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{59518B15-FC64-4CF9-A4D1-0EE1B4A63088}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>MUOptIn=$MicrosoftUpdate</Value>
                </Entry>
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>SQMOptIn=$CustomerExperienceImprovementProgram</Value>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012R2VirtualMachineManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLMachineName=$SystemCenter2012R2VirtualMachineManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Value>RemoteDatabaseImpersonation=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLInstanceName=$SystemCenter2012R2VirtualMachineManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewSQLDatabase=1</Value>
                </Entry>
                <Entry>
                  <Value>SQLDatabaseName=$SystemCenter2012R2VirtualMachineManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>VMMServiceLocalAccount=0</Value>
                </Entry>
                <Entry>
                  <Value>IndigoTcpPort=$SystemCenter2012R2VirtualMachineManagerIndigoTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>WSManTcpPort=$SystemCenter2012R2VirtualMachineManagerWSManTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>BitsTcpPort=$SystemCenter2012R2VirtualMachineManagerBitsTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoNETTCPPort=$SystemCenter2012R2VirtualMachineManagerIndigoNETTCPPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPSPort=$SystemCenter2012R2VirtualMachineManagerIndigoHTTPSPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPPort=$SystemCenter2012R2VirtualMachineManagerIndigoHTTPPort</Value>
                </Entry>
                <Entry>
                  <Value>VmmServerName=$SystemCenter2012R2VirtualMachineManagerVmmServerName</Value>
                </Entry>
                <Entry>
                  <Value>TopContainerName=$SystemCenter2012R2VirtualMachineManagerTopContainerName</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable=1</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable2ndNode=0</Value>
                </Entry>
                <Entry>
                  <Condition>$SystemCenter2012R2VirtualMachineManagerVMMStaticIPAddress -ne ""</Condition>
                  <Value>VMMStaticIPAddress=$SystemCenter2012R2VirtualMachineManagerVMMStaticIPAddress</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012R2VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/server</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
              <Switch>
                <Value>/f $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceDomain $SystemCenter2012R2VirtualMachineManagerServiceAccountDomain</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserName $SystemCenter2012R2VirtualMachineManagerServiceAccountUsername</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserPassword $SystemCenter2012R2VirtualMachineManagerServiceAccountPassword</Value>
                <Log>/vmmServiceUserPassword ********</Log>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{59518B15-FC64-4CF9-A4D1-0EE1B4A63088}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>MUOptIn=$MicrosoftUpdate</Value>
                </Entry>
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>SQMOptIn=$CustomerExperienceImprovementProgram</Value>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012R2VirtualMachineManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>SQLMachineName=$SystemCenter2012R2VirtualMachineManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Value>RemoteDatabaseImpersonation=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLInstanceName=$SystemCenter2012R2VirtualMachineManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>CreateNewSQLDatabase=0</Value>
                </Entry>
                <Entry>
                  <Value>SQLDatabaseName=$SystemCenter2012R2VirtualMachineManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>VMMServiceLocalAccount=0</Value>
                </Entry>
                <Entry>
                  <Value>IndigoTcpPort=$SystemCenter2012R2VirtualMachineManagerIndigoTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>WSManTcpPort=$SystemCenter2012R2VirtualMachineManagerWSManTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>BitsTcpPort=$SystemCenter2012R2VirtualMachineManagerBitsTcpPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoNETTCPPort=$SystemCenter2012R2VirtualMachineManagerIndigoNETTCPPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPSPort=$SystemCenter2012R2VirtualMachineManagerIndigoHTTPSPort</Value>
                </Entry>
                <Entry>
                  <Value>IndigoHTTPPort=$SystemCenter2012R2VirtualMachineManagerIndigoHTTPPort</Value>
                </Entry>
                <Entry>
                  <Value>VmmServerName=$SystemCenter2012R2VirtualMachineManagerVmmServerName</Value>
                </Entry>
                <Entry>
                  <Value>TopContainerName=$SystemCenter2012R2VirtualMachineManagerTopContainerName</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable=1</Value>
                </Entry>
                <Entry>
                  <Value>HighlyAvailable2ndNode=1</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012R2VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/server</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
              <Switch>
                <Value>/f $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceDomain $SystemCenter2012R2VirtualMachineManagerServiceAccountDomain</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserName $SystemCenter2012R2VirtualMachineManagerServiceAccountUsername</Value>
              </Switch>
              <Switch>
                <Value>/vmmServiceUserPassword $SystemCenter2012R2VirtualMachineManagerServiceAccountPassword</Value>
                <Log>/vmmServiceUserPassword ********</Log>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{CDFB453F-5FA4-4884-B282-F46BDFC06051}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\VMMLogs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2VirtualMachineManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/client</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/IAcceptSCEULA</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item '$SystemDrive\Users\Public\Desktop\Virtual Machine Manager Console.lnk';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module virtualmachinemanager)) {Import-Module virtualmachinemanager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCUserRole -VMMServer $SystemCenter2012R2VirtualMachineManagerManagementServer -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012R2VirtualMachineManagerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>Get-SCUserRole -VMMServer $SystemCenter2012R2VirtualMachineManagerManagementServer -Name Administrator | Set-SCUserRole -AddMember '$SystemCenter2012R2VirtualMachineManagerAdminGroup'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCUserRole -VMMServer $SystemCenter2012R2VirtualMachineManagerManagementServer -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012R2VirtualMachineManagerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Cluster Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module virtualmachinemanager)) {Import-Module virtualmachinemanager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCUserRole -VMMServer $SystemCenter2012R2VirtualMachineManagerVmmServerName -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012R2VirtualMachineManagerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>Get-SCUserRole -VMMServer $SystemCenter2012R2VirtualMachineManagerVmmServerName -Name Administrator | Set-SCUserRole -AddMember '$SystemCenter2012R2VirtualMachineManagerAdminGroup'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCUserRole -VMMServer $SystemCenter2012R2VirtualMachineManagerVmmServerName -Name Administrator | ForEach-Object {`$_.Members} | Where-Object {`$_.Name -eq '$SystemCenter2012R2VirtualMachineManagerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Virtual Machine Manager' + [char]39 + ' -Application ' + [char]39 + 'Virtual Machine Manager Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2VirtualMachineManagerManagementServer -ne $null) -and ($SystemCenter2012R2VirtualMachineManagerManagementServer -ne "")</Condition>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012R2VirtualMachineManagerManagementServer' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012R2VirtualMachineManagerManagementServer' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2VirtualMachineManagerVmmServerName -ne $null) -and ($SystemCenter2012R2VirtualMachineManagerVmmServerName -ne "")</Condition>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012R2VirtualMachineManagerVmmServerName' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'defaultVMMServerName' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012R2VirtualMachineManagerVmmServerName' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'vmmServerPort' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'vmmServerPort' + [char]34 + ' -Value $SystemCenter2012R2VirtualMachineManagerIndigoTcpPort} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft System Center Virtual Machine Manager Administrator Console\Settings\Shared' + [char]34 + ' -Name ' + [char]34 + 'vmmServerPort' + [char]34 + ' -PropertyType DWord -Value $SystemCenter2012R2VirtualMachineManagerIndigoTcpPort | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Orchestrator">
      <Variable Name="SystemCenter2012R2OrchestratorSource" Value="SystemCenter2012R2\Orchestrator" />
      <SourceFolder>$SystemCenter2012R2OrchestratorSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>SetupOrchestrator.exe</File>
        <FileVersion>7.2.84.0</FileVersion>
<!--
        <Type>DownloadRun</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCO.exe</URL>
        <File>SC2012_R2_SCO.exe</File>
        <Run>
          <ExistingFile>SetupOrchestrator.exe</ExistingFile>
          <FileVersion>7.2.84.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SC2012_R2_SCO.exe</Command>
          <Argument>/verysilent /dir=$Download\$DownloadFolder</Argument>
        </Run>
-->
      </Download>
      <Install Name="System Center 2012 R2 Orchestrator Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D0CB5FFD-E0AB-4FA0-96CD-7AE7B5BEBA36}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:ManagementServer</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/ServiceUserName:$SystemCenter2012R2OrchestratorServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword:$SystemCenter2012R2OrchestratorServiceAccountPassword</Value>
                <Log>/ServicePassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DbServer:$SystemCenter2012R2OrchestratorDatabaseServer\$SystemCenter2012R2OrchestratorDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/DbNameNew:$SystemCenter2012R2OrchestratorDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorRemote -ne $False</Condition>
                <Value>/OrchestratorRemote</Value>
              </Switch>
              <Switch>
                <Value>/InstallDir:$SystemCenter2012R2OrchestratorInstallDir</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
        <Firewall>
          <Rule>
             <Name>System Center 2012 R2 Orchestrator Management Server</Name>
             <Type>Application</Type>
             <Value>$SystemCenter2012R2OrchestratorInstallDir\Management Server\ManagementService.exe</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Runbook Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{77C5EA09-E67A-4C99-A505-E2EDA3585969}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:RunbookServer</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/ServiceUserName:$SystemCenter2012R2OrchestratorServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword:$SystemCenter2012R2OrchestratorServiceAccountPassword</Value>
                <Log>/ServicePassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DbServer:$SystemCenter2012R2OrchestratorDatabaseServer\$SystemCenter2012R2OrchestratorDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/DbNameExisting:$SystemCenter2012R2OrchestratorDatabase</Value>
              </Switch>
              <Switch>
                <Value>/InstallDir:$SystemCenter2012R2OrchestratorInstallDir</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Web Components Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{6D421114-43E0-466F-9848-8F604BDA2539}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:WebComponents</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/ServiceUserName:$SystemCenter2012R2OrchestratorServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword:$SystemCenter2012R2OrchestratorServiceAccountPassword</Value>
                <Log>/ServicePassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DbServer:$SystemCenter2012R2OrchestratorDatabaseServer\$SystemCenter2012R2OrchestratorDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/DbNameExisting:$SystemCenter2012R2OrchestratorDatabase</Value>
              </Switch>
              <Switch>
                <Value>/WebServicePort:$SystemCenter2012R2OrchestratorWebServicePort</Value>
              </Switch>
              <Switch>
                <Value>/WebConsolePort:$SystemCenter2012R2OrchestratorWebConsolePort</Value>
              </Switch>
              <Switch>
                <Value>/InstallDir:$SystemCenter2012R2OrchestratorInstallDir</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
<!--Workaround Begin-->
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>`$SQL = New-Object System.Data.SqlClient.SqlConnection;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$SQL.ConnectionString = 'Server=$SystemCenter2012R2OrchestratorDatabaseServer;Database=$SystemCenter2012R2OrchestratorDatabase;Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$SQL.ConnectionString = 'Server=$SystemCenter2012R2OrchestratorDatabaseServer\$SystemCenter2012R2OrchestratorDatabaseInstance;Database=$SystemCenter2012R2OrchestratorDatabase;Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Value>`$SQL.Open();</Value>
              </Switch>
              <Switch>
                <Value>`$SQLCmd = New-Object System.Data.SqlClient.SqlCommand;</Value>
              </Switch>
              <Switch>
                <Value>`$SQLCmd.Connection = `$SQL;</Value>
              </Switch>
              <Switch>
                <Value>`$SQLCmd.CommandText = 'GRANT EXECUTE ON [Microsoft.SystemCenter.Orchestrator].[GetSecurityToken] TO [Microsoft.SystemCenter.Orchestrator.Operators]';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLCmd.ExecuteNonQuery();</Value>
              </Switch>
              <Switch>
                <Value>`$SQL.Close();</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
<!--Workaround End-->
        </CommandLines>
        <Firewall>
          <Rule>
            <Name>System Center 2012 R2 Orchestrator Web Service</Name>
            <Type>Port</Type>
            <Value>TCP/$SystemCenter2012R2OrchestratorWebServicePort</Value>
          </Rule>
          <Rule>
            <Name>System Center 2012 R2 Orchestrator Web Console</Name>
            <Type>Port</Type>
            <Value>TCP/$SystemCenter2012R2OrchestratorWebConsolePort</Value>
          </Rule>
        </Firewall>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Runbook Designer">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{88CA6D9B-4F06-468D-905A-BC991518D299}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\Microsoft System Center 2012\Orchestrator\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\Setup\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Silent</Value>
              </Switch>
              <Switch>
                <Value>/Components:RunbookDesigner</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/Key:$SystemCenter2012ProductKey</Value>
                <Log>/Key:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Provider Foundation Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationServer.role</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\SPF\setup.exe</Executable>
            <AnswerFile>
              <Entry>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>-SendCEIPReports true</Value>
              </Entry>
              <Entry>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>-SendCEIPReports false</Value>
              </Entry>
              <Entry>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>-UseMicrosoftUpdate true</Value>
              </Entry>
              <Entry>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>-UseMicrosoftUpdate false</Value>
              </Entry>
              <Entry>
                <Condition>$SSLCert -eq $null</Condition>
                <Value>-SpecifyCertificate False</Value>
              </Entry>
              <Entry>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>-SpecifyCertificate True</Value>
              </Entry>
              <Entry>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>-CertificateSerialNumber $SSLCertSerialNumber</Value>
              </Entry>
              <Entry>
                <Value>-WebSitePortNumber $SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber</Value>
              </Entry>
              <Entry>
                <Value>-DatabaseServer $SystemCenter2012R2ServiceProviderFoundationDatabaseServer</Value>
              </Entry>
              <Entry>
                <Value>-DatabasePortNumber $SystemCenter2012R2ServiceProviderFoundationDatabasePort</Value>
              </Entry>
              <Entry>
                <Value>-DatabaseName $SystemCenter2012R2ServiceProviderFoundationDatabaseName</Value>
              </Entry>
              <Entry>
                <Value>-ScvmmUserName $SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-ScvmmPassword $SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword</Value>
                <Log>-ScvmmPassword ********</Log>
              </Entry>
              <Entry>
                <Value>-ScvmmDomain $SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-ScvmmNetworkServiceSelected $SystemCenter2012R2ServiceProviderFoundationSCVMMNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-VmmSecurityGroupUsers $SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount</Value>
              </Entry>
              <Entry>
                <Value>-SCadminUserName $SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-SCadminPassword $SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccountPassword</Value>
                <Log>-SCadminPassword ********</Log>
              </Entry>
              <Entry>
                <Value>-SCadminDomain $SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-SCadminNetworkServiceSelected $SystemCenter2012R2ServiceProviderFoundationSCAdminNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-AdminSecurityGroupUsers $SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccount</Value>
              </Entry>
              <Entry>
                <Value>-SCproviderUserName $SystemCenter2012R2ServiceProviderFoundationSCProviderServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-SCproviderPassword $SystemCenter2012R2ServiceProviderFoundationSCProviderServiceAccountPassword</Value>
                <Log>-SCproviderPassword ********</Log>
              </Entry>
              <Entry>
                <Value>-SCproviderDomain $SystemCenter2012R2ServiceProviderFoundationSCProviderServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-SCproviderNetworkServiceSelected $SystemCenter2012R2ServiceProviderFoundationSCProviderNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-ProviderSecurityGroupUsers $SystemCenter2012R2ServiceProviderFoundationSCProviderServiceAccount</Value>
              </Entry>
              <Entry>
                <Value>-SCusageUserName $SystemCenter2012R2ServiceProviderFoundationSCUsageServiceAccountUsername</Value>
              </Entry>
              <Entry>
                <Value>-SCusagePassword $SystemCenter2012R2ServiceProviderFoundationSCUsageServiceAccountPassword</Value>
                <Log>-SCusagePassword ********</Log>
              </Entry>
              <Entry>
                <Value>-SCusageDomain $SystemCenter2012R2ServiceProviderFoundationSCUsageServiceAccountDomain</Value>
              </Entry>
              <Entry>
                <Value>-SCusageNetworkServiceSelected $SystemCenter2012R2ServiceProviderFoundationSCUsageNetworkServiceSelected</Value>
              </Entry>
              <Entry>
                <Value>-UsageSecurityGroupUsers $SystemCenter2012R2ServiceProviderFoundationSCUsageServiceAccount</Value>
              </Entry>
            </AnswerFile>
            <Switches>
              <Switch>
                <Value>-Silent</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer.txt</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If ([ADSI]::Exists('WinNT://localhost/SPF_VMM,group')) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://localhost/SPF_VMM,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2ServiceProviderFoundationVMMSecurityGroupUsers' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2ServiceProviderFoundationVMMSecurityGroupUsers'.Split('\')[0] + '/' + '$SystemCenter2012R2ServiceProviderFoundationVMMSecurityGroupUsers'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If ([ADSI]::Exists('WinNT://localhost/SPF_Admin,group')) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://localhost/SPF_Admin,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2ServiceProviderFoundationAdminSecurityGroupUsers' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2ServiceProviderFoundationAdminSecurityGroupUsers'.Split('\')[0] + '/' + '$SystemCenter2012R2ServiceProviderFoundationAdminSecurityGroupUsers'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If ([ADSI]::Exists('WinNT://localhost/SPF_Provider,group')) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://localhost/SPF_Provider,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2ServiceProviderFoundationProviderSecurityGroupUsers' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2ServiceProviderFoundationProviderSecurityGroupUsers'.Split('\')[0] + '/' + '$SystemCenter2012R2ServiceProviderFoundationProviderSecurityGroupUsers'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If ([ADSI]::Exists('WinNT://localhost/SPF_Usage,group')) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://localhost/SPF_Usage,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2ServiceProviderFoundationUsageSecurityGroupUsers' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2ServiceProviderFoundationUsageSecurityGroupUsers'.Split('\')[0] + '/' + '$SystemCenter2012R2ServiceProviderFoundationUsageSecurityGroupUsers'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WmiObject -Class Win32_Product | Where-Object {`$_.IdentifyingNumber -eq '{69344E86-7183-4384-A230-499E9914BE14}'}) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $SystemCenter2012R2ServiceProviderFoundationServer) -and $SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $SystemCenter2012R2ServiceProviderFoundationServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $SystemCenter2012R2ServiceProviderFoundationServer) -and $SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $SystemCenter2012R2ServiceProviderFoundationServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$SystemCenter2012R2ServiceProviderFoundationServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceProviderFoundationServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Management Automation PowerShell Module">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{EF2760C1-FED5-45FD-B067-D9419F7DEBEF}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\SMA\PowerShellModuleInstaller.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Management Automation Web Service Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagementAutomationWebServiceServer.role</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\SMA\WebServiceInstaller.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
              <Switch>
                <Value>APPOOLACCOUNT=`"$SystemCenter2012R2ServiceManagementAutomationServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Value>APPOOLPASSWORD=`"$SystemCenter2012R2ServiceManagementAutomationServiceAccountPassword`"</Value>
                <Log>APPOOLPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Value>ADMINGROUPMEMBERS=`"$SystemCenter2012R2ServiceManagementAutomationAdminGroup,$SystemCenter2012R2ServiceManagementAutomationServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Condition>$Server -eq $SystemCenter2012R2ServiceManagementAutomationWebServiceServer</Condition>
                <Value>CREATEDATABASE=`"yes`"</Value>
              </Switch>
              <Switch>
                <Condition>$Server -ne $SystemCenter2012R2ServiceManagementAutomationWebServiceServer</Condition>
                <Value>CREATEDATABASE=`"no`"</Value>
              </Switch>
              <Switch>
                <Value>DATABASEAUTHENTICATION=`"Windows`"</Value>
              </Switch>
              <Switch>
                <Value>SQLSERVER=`"$SystemCenter2012R2ServiceManagementAutomationDatabaseServer`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>SQLINSTANCE=`"$SystemCenter2012R2ServiceManagementAutomationDatabaseInstance`"</Value>
              </Switch>
              <Switch>
                <Value>SQLDATABASE=`"$SystemCenter2012R2ServiceManagementAutomationDatabase`"</Value>
              </Switch>
              <Switch>
                <Value>WEBSERVICEPORT=`"$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber`"</Value>
              </Switch>
              <Switch>
                <Value>USESSL=`"yes`"</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -eq $null</Condition>
                <Value>SPECIFYCERTIFICATE=`"no`"</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>SPECIFYCERTIFICATE=`"yes`"</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>CERTIFICATESERIAL=$SSLCertSerialNumber</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 0</Condition>
                <Value>SENDCEIPREPORTS=`"no`"</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>SENDCEIPREPORTS=`"yes`"</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 0</Condition>
                <Value>MSUPDATE=`"no`"</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>MSUPDATE=`"yes`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WmiObject -Class Win32_Product | Where-Object {`$_.IdentifyingNumber -eq '{4B76B636-AE9A-47D5-A246-E02909D97CF2}'}) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $SystemCenter2012R2ServiceManagementAutomationWebServiceServer) -and $SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $SystemCenter2012R2ServiceManagementAutomationWebServiceServer) -and $SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $SystemCenter2012R2ServiceManagementAutomationWebServiceServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagementAutomationWebServiceServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Management Automation Runbook Worker Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagementAutomationRunbookWorkerServer.role</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\SMA\WorkerInstaller.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
              <Switch>
                <Value>SERVICEACCOUNT=`"$SystemCenter2012R2ServiceManagementAutomationServiceAccount`"</Value>
              </Switch>
              <Switch>
                <Value>SERVICEPASSWORD=`"$SystemCenter2012R2ServiceManagementAutomationServiceAccountPassword`"</Value>
                <Log>SERVICEPASSWORD=`"********`"</Log>
              </Switch>
              <Switch>
                <Value>CREATEDATABASE=`"no`"</Value>
              </Switch>
              <Switch>
                <Value>SQLSERVER=`"$SystemCenter2012R2ServiceManagementAutomationDatabaseServer`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagementAutomationDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>SQLINSTANCE=`"$SystemCenter2012R2ServiceManagementAutomationDatabaseInstance`"</Value>
              </Switch>
              <Switch>
                <Value>SQLDATABASE=`"$SystemCenter2012R2ServiceManagementAutomationDatabase`"</Value>
              </Switch>
              <Switch>
                <Value>INSTALLFOLDER=`"$SystemCenter2012R2ServiceManagementAutomationInstallFolder`"</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 0</Condition>
                <Value>SENDCEIPREPORTS=`"no`"</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>SENDCEIPREPORTS=`"yes`"</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 0</Condition>
                <Value>MSUPDATE=`"no`"</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>MSUPDATE=`"yes`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WmiObject -Class Win32_Product | Where-Object {`$_.IdentifyingNumber -eq '{B2FA6B22-1DDF-4BD4-8B92-ADF17D48262F}'}) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module Microsoft.SystemCenter.ServiceManagementAutomation)) {Import-Module Microsoft.SystemCenter.ServiceManagementAutomation};</Value>
              </Switch>
              <Switch>
                <Value>`$Workers = (Get-SmaRunbookWorkerDeployment -WebServiceEndpoint 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer').ComputerName;</Value>
              </Switch>
              <Switch>
                <Value>If (`$Workers -isnot [system.array]) {`$Workers = @(`$Workers)};</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Workers | Where-Object {`$_ -eq '$ServerShort'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$Workers += '$ServerShort';</Value>
              </Switch>
              <Switch>
                <Value>`$DrainTime = (Get-SmaAdminConfiguration -WebServiceEndpoint 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer').DrainTimeInSeconds;</Value>
              </Switch>
              <Switch>
                <Value>Set-SmaAdminConfiguration -WebServiceEndpoint 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer' -DrainTimeInSeconds 5 -Force;</Value>
              </Switch>
              <Switch>
                <Value>`$Workers | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>Get-Service -ComputerName `$_ -Name rbsvc | Stop-Service;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>New-SmaRunbookWorkerDeployment -WebServiceEndpoint 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer' -ComputerName `$Workers -Force;</Value>
              </Switch>
              <Switch>
                <Value>`$Workers | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>Get-Service -ComputerName `$_ -Name rbsvc | Start-Service;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>Set-SmaAdminConfiguration -WebServiceEndpoint 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer' -DrainTimeInSeconds `$DrainTime -Force;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Workers = (Get-SmaRunbookWorkerDeployment -WebServiceEndpoint 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer').ComputerName;</Value>
              </Switch>
              <Switch>
                <Value>If (`$Workers -isnot [system.array]) {`$Workers = @(`$Workers)};</Value>
              </Switch>
              <Switch>
                <Value>If (`$Workers | Where-Object {`$_ -eq '$ServerShort'}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagementAutomationRunbookWorkerServer.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Reporting Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{643E2225-E1BB-4586-9CBE-8BC2DED6D12E}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>`"$TempPath\Installer\$SystemCenter2012R2OrchestratorSource\Service Reporting\setup.exe`"</Executable>
            <AnswerFile>
              <Entry>
                <Value>-AcceptEULA yes</Value>
              </Entry>
              <Entry>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>-SendCEIPReports yes</Value>
              </Entry>
              <Entry>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>-SendCEIPReports no</Value>
              </Entry>
              <Entry>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>-UseMicrosoftUpdate yes</Value>
              </Entry>
              <Entry>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>-UseMicrosoftUpdate no</Value>
              </Entry>
              <Entry>
                <Value>-InstallFolder `"$SystemCenter2012R2ServiceReportingInstallFolder`"</Value>
              </Entry>
              <Entry>
                <Value>-DatabaseRunAsAccount $SystemCenter2012R2ServiceReportingRunAsAccount</Value>
              </Entry>
              <Entry>
                <Value>-DatabaseServer $SystemCenter2012R2ServiceReportingDatawarehouseServer</Value>
              </Entry>
              <Entry>
                <Condition>$SystemCenter2012R2ServiceReportingDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>-DatabaseServerInstance $SystemCenter2012R2ServiceReportingDatawarehouseServer</Value>
              </Entry>
              <Entry>
                <Condition>$SystemCenter2012R2ServiceReportingDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>-DatabaseServerInstance $SystemCenter2012R2ServiceReportingDatawarehouseInstance</Value>
              </Entry>
              <Entry>
                <Value>-RepositoryDatabaseName $SystemCenter2012R2ServiceReportingRepositoryDatabaseName</Value>
              </Entry>
              <Entry>
                <Value>-StagingDatabaseName $SystemCenter2012R2ServiceReportingStagingDatabaseName</Value>
              </Entry>
              <Entry>
                <Value>-DWDatabaseName $SystemCenter2012R2ServiceReportingDWDatabaseName</Value>
              </Entry>
              <Entry>
                <Value>-AnalysisDatabaseServer $SystemCenter2012R2ServiceReportingAnalysisServer</Value>
              </Entry>
              <Entry>
                <Condition>$SystemCenter2012R2ServiceReportingAnalysisInstance -eq "MSSQLSERVER"</Condition>
                <Value>-AnalysisDatabaseServerInstance $SystemCenter2012R2ServiceReportingAnalysisServer</Value>
              </Entry>
              <Entry>
                <Condition>$SystemCenter2012R2ServiceReportingAnalysisInstance -ne "MSSQLSERVER"</Condition>
                <Value>-AnalysisDatabaseServerInstance $SystemCenter2012R2ServiceReportingAnalysisInstance</Value>
              </Entry>
              <Entry>
                <Value>-AnalysisDatabaseName $SystemCenter2012R2ServiceReportingAnalysisDatabaseName</Value>
              </Entry>
            </AnswerFile>
            <Switches>
              <Switch>
                <Value>-Silent</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer.txt</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OrchestratorAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$SystemCenter2012R2OrchestratorManagementServer/OrchestratorUsersGroup,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2OrchestratorAdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2OrchestratorAdminGroup'.Split('\')[0] + '/' + '$SystemCenter2012R2OrchestratorAdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-UserInGroup -User '$SystemCenter2012R2OrchestratorAdminGroup' -Group `$Group) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OrchestratorAdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OrchestratorShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Orchestrator' + [char]39 + ' -Application ' + [char]39 + 'Runbook Designer' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator\RunbookDesigner.config' + [char]34 + ')) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + 'OISClient' + [char]62 + '' + [char]60 + 'AllowEmptyComment' + [char]62 + '' + [char]60 + '/AllowEmptyComment' + [char]62 + '' + [char]60 + 'AutoCheckOut' + [char]62 + '' + [char]60 + '/AutoCheckOut' + [char]62 + '' + [char]60 + 'PromptForComment' + [char]62 + '' + [char]60 + '/PromptForComment' + [char]62 + '' + [char]60 + 'RefreshInterval' + [char]62 + '5' + [char]60 + '/RefreshInterval' + [char]62 + '' + [char]60 + 'ShowLinkLabels' + [char]62 + '' + [char]60 + '/ShowLinkLabels' + [char]62 + '' + [char]60 + 'ShowTooltips' + [char]62 + '' + [char]60 + '/ShowTooltips' + [char]62 + '' + [char]60 + 'ConnectedServer' + [char]62 + '$SystemCenter2012R2OrchestratorManagementServer' + [char]60 + '/ConnectedServer' + [char]62 + '' + [char]60 + '/OISClient' + [char]62 + '' + [char]39 + ' | Out-File ' + [char]34 + '`$env:LocalAppData\Microsoft System Center 2012\Orchestrator\RunbookDesigner.config' + [char]34 + ' -Encoding ASCII';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OrchestratorShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Web Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OrchestratorWebShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Orchestrator' + [char]39 + ' -URL ' + [char]39 + 'http://$SystemCenter2012R2OrchestratorWebComponentsServer`:$SystemCenter2012R2OrchestratorWebConsolePort/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Program Files (x86)\Microsoft System Center 2012 R2\Orchestrator\Runbook Designer\RunbookDesigner.exe' + [char]39 + ' -IconIndex ' + [char]39 + '0' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OrchestratorWebShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 App Controller">
      <Variable Name="SystemCenter2012R2AppControllerSource" Value="SystemCenter2012R2\AppController" />
      <SourceFolder>$SystemCenter2012R2AppControllerSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>setup.exe</File>
        <FileVersion>1.1.1200.0</FileVersion>
<!--
        <Type>DownloadRun</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCAC.exe</URL>
        <File>SC2012_R2_SCAC.exe</File>
        <Run>
          <ExistingFile>Setup.exe</ExistingFile>
          <FileVersion>1.1.1200.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SC2012_R2_SCAC.exe</Command>
          <Argument>/verysilent /dir=$Download\$DownloadFolder</Argument>
        </Run>
-->
      </Download>
      <Install Name="System Center 2012 R2 App Controller Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{4F83AACF-3237-4BAC-9D75-5963E92DA08B}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\AppControllerLogs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2AppControllerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/MU</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/SelfUpdate True</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>/SelfUpdate False</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath `"$SystemCenter2012R2AppControllerInstallPath`"</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey $SystemCenter2012ProductKey</Value>
              </Switch>
              <Switch>
                <Value>/ServiceUsername $SystemCenter2012R2AppControllerServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword $SystemCenter2012R2AppControllerServiceAccountPassword</Value>
                <Log>/ServicePassword ********</Log>
              </Switch>
              <Switch>
                <Value>/Port $SystemCenter2012R2AppControllerPort</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>/SslCert $SSLCert</Value>
              </Switch>
              <Switch>
                <Value>/SQL $SystemCenter2012R2AppControllerDatabaseServer,$SystemCenter2012R2AppControllerDatabasePort\$SystemCenter2012R2AppControllerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/SQLDB $SystemCenter2012R2AppControllerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEULA`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SystemCenter2012R2AppControllerAdditionalServer -ne $null</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>Export-SCACAesKey -Path $TempPath\AesKeyFile -Password `$SecurePassword</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 App Controller Additional Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{4F83AACF-3237-4BAC-9D75-5963E92DA08B}</Value>
        </Validation>
        <Log>%SystemDrive%\ProgramData\AppControllerLogs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2AppControllerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/MU</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>/SelfUpdate True</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>/SelfUpdate False</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath `"$SystemCenter2012R2AppControllerInstallPath`"</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey $SystemCenter2012ProductKey</Value>
              </Switch>
              <Switch>
                <Value>/ServiceUsername $SystemCenter2012R2AppControllerServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ServicePassword $SystemCenter2012R2AppControllerServiceAccountPassword</Value>
                <Log>/ServicePassword ********</Log>
              </Switch>
              <Switch>
                <Value>/Port $SystemCenter2012R2AppControllerPort</Value>
              </Switch>
              <Switch>
                <Condition>$SSLCert -ne $null</Condition>
                <Value>/SslCert $SSLCert</Value>
              </Switch>
              <Switch>
                <Value>/SQL $SystemCenter2012R2AppControllerDatabaseServer,$SystemCenter2012R2AppControllerDatabasePort\$SystemCenter2012R2AppControllerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/SQLDB $SystemCenter2012R2AppControllerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/AesKeyFilePath \\$SystemCenter2012R2AppControllerServer\$TempPathUNC\AesKeyFile</Value>
              </Switch>
              <Switch>
                <Value>/AesKeyPassword $InstallerServiceAccountPassword</Value>
                <Log>/AesKeyPassword ********</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 App Controller Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2AppControllerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Write-Output 'System Center 2012 R2 App Controller Admin Group';</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$i = 0;</Value>
              </Switch>
              <Switch>
                <Value>`$Done = `$False;</Value>
              </Switch>
              <Switch>
                <Value>While ((`$i -lt 5) -and !(`$Done)) {</Value>
              </Switch>
              <Switch>
                <Value>try {If (Get-SCACServer -ServerName 'https://$SystemCenter2012R2AppControllerServer`:$SystemCenter2012R2AppControllerPort' -Credential `$Credential) {`$Done = `$True}} catch {Start-Sleep 60};</Value>
              </Switch>
              <Switch>
                <Value>`$i++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCACUserRole -Managed | Where-Object {`$_.Name -eq 'Administrators'} | ForEach-Object {`$_.Members} | Where-Object {`$_.DomainQualifiedUserName -eq '$SystemCenter2012R2AppControllerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$UserRole = Get-SCACUserRole -Managed | Where-Object {`$_.Name -eq 'Administrators'};</Value>
              </Switch>
              <Switch>
                <Value>Set-SCACUserRole -UserRole `$UserRole -AddMembers '$SystemCenter2012R2AppControllerAdminGroup'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCACUserRole -Managed | Where-Object {`$_.Name -eq 'Administrators'} | ForEach-Object {`$_.Members} | Where-Object {`$_.DomainQualifiedUserName -eq '$SystemCenter2012R2AppControllerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012R2AppControllerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 App Controller Web Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2AppControllerWebShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'App Controller' + [char]39 + ' -URL ' + [char]39 + 'https://$SystemCenter2012R2AppControllerServer/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + 'https://$SystemCenter2012R2AppControllerServer/favicon.ico' + [char]39 + ' -IconIndex ' + [char]39 + '1' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2AppControllerWebShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Operations Manager">
      <Variable Name="SystemCenter2012R2OperationsManagerSource" Value="SystemCenter2012R2\OperationsManager.en" />
      <SourceFolder>$SystemCenter2012R2OperationsManagerSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>setup.exe</File>
        <FileVersion>7.1.10226.0</FileVersion>
<!--
        <Type>DownloadRun</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCOM.exe</URL>
        <File>SC2012_R2_SCOM.exe</File>
        <Run>
          <ExistingFile>Setup.exe</ExistingFile>
          <FileVersion>7.1.10226.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SC2012_R2_SCOM.exe</Command>
          <Argument>/verysilent /dir=$Download\$DownloadFolder</Argument>
        </Run>
-->
      </Download>
      <Install Name="System Center 2012 R2 Operations Manager Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{C92727BE-BD12-4140-96A6-276BA4F60AC1}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMServer</Value>
              </Switch>
              <Switch>
                <Value>/ManagementGroupName:$SystemCenter2012R2OperationsManagerManagementGroupName</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012R2OperationsManagerDatabaseServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012R2OperationsManagerDatabaseServer\$SystemCenter2012R2OperationsManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/DWSqlServerInstance:$SystemCenter2012R2OperationsManagerDatawarehouseServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/DWSqlServerInstance:$SystemCenter2012R2OperationsManagerDatawarehouseServer\$SystemCenter2012R2OperationsManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseName:$SystemCenter2012R2OperationsManagerDatabaseName</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseSize:$SystemCenter2012R2OperationsManagerDatabaseSize</Value>
              </Switch>
              <Switch>
                <Value>/DWDatabaseName:$SystemCenter2012R2OperationsManagerDWDatabaseName</Value>
              </Switch>
              <Switch>
                <Value>/DWDatabaseSize:$SystemCenter2012R2OperationsManagerDWDatabaseSize</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountUser:$SystemCenter2012R2OperationsManagerActionServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountPassword:$SystemCenter2012R2OperationsManagerActionServiceAccountPassword</Value>
                <Log>/ActionAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DASAccountUser:$SystemCenter2012R2OperationsManagerDASServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DASAccountPassword:$SystemCenter2012R2OperationsManagerDASServiceAccountPassword</Value>
                <Log>/DASAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataReaderUser:$SystemCenter2012R2OperationsManagerDataReaderServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderPassword:$SystemCenter2012R2OperationsManagerDataReaderServiceAccountPassword</Value>
                <Log>/DataReaderPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataWriterUser:$SystemCenter2012R2OperationsManagerDataWriterServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataWriterPassword:$SystemCenter2012R2OperationsManagerDataWriterServiceAccountPassword</Value>
                <Log>/DataWriterPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
<!--Workaround Begin-->
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Write-Output 'System Center 2012 R2 Management Server Initialize';</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WmiObject -Class Win32_Product | Where-Object {`$_.IdentifyingNumber -eq '{C92727BE-BD12-4140-96A6-276BA4F60AC1}'}) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module '$SystemCenter2012R2OperationsManagerInstallPath\Powershell\OperationsManager'};</Value>
              </Switch>
              <Switch>
                <Value>While ((Get-SCOMManagementServer -Name $SystemCenter2012R2OperationsManagerManagementServer).HealthState -ne 'Success') {</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Get-SCOMManagementServer -Name $SystemCenter2012R2OperationsManagerManagementServer;</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 60;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Get-SCOMManagementServer -Name $SystemCenter2012R2OperationsManagerManagementServer;</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 300;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
<!--Workaround End-->
          <CommandLine>
            <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>Import-Module '$SystemCenter2012R2OperationsManagerInstallPath\Powershell\OperationsManager';</Value>
              </Switch>
              <Switch>
                <Value>Set-SCOMLicense -ProductID $SystemCenter2012ProductKey -Confirm:`$false;</Value>
                <Log>Set-SCOMLicense -ProductID *****-*****-*****-*****-***** -Confirm:`$false;</Log>
              </Switch>
              <Switch>
                <Value>Restart-Service omsdk</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Additional Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{C92727BE-BD12-4140-96A6-276BA4F60AC1}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012R2OperationsManagerDatabaseServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SqlServerInstance:$SystemCenter2012R2OperationsManagerDatabaseServer\$SystemCenter2012R2OperationsManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountUser:$SystemCenter2012R2OperationsManagerActionServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/ActionAccountPassword:$SystemCenter2012R2OperationsManagerActionServiceAccountPassword</Value>
                <Log>/ActionAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DASAccountUser:$SystemCenter2012R2OperationsManagerDASServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DASAccountPassword:$SystemCenter2012R2OperationsManagerDASServiceAccountPassword</Value>
                <Log>/DASAccountPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataReaderUser:$SystemCenter2012R2OperationsManagerDataReaderServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderPassword:$SystemCenter2012R2OperationsManagerDataReaderServiceAccountPassword</Value>
                <Log>/DataReaderPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/DataWriterUser:$SystemCenter2012R2OperationsManagerDataWriterServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataWriterPassword:$SystemCenter2012R2OperationsManagerDataWriterServiceAccountPassword</Value>
                <Log>/DataWriterPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Reporting Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D6E655E7-6318-4C50-B184-55E70DB179C1}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Condition>$SystemCenter2012R2OperationsManagerReportingServer -ne $SystemCenter2012R2OperationsManagerDatawarehouseServer</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingVersion -eq "SQL Server 2012"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012R2OperationsManagerReportingInstance\v11\Admin;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingVersion -eq "SQL Server 2008 R2"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012R2OperationsManagerReportingInstance\v10\Admin;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSConfig.DatabaseName)) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer_$SystemCenter2012R2OperationsManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportServerWebService','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports_$SystemCenter2012R2OperationsManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportManager','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer`$$SystemCenter2012R2OperationsManagerReportingInstance',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort\$SystemCenter2012R2OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort\$SystemCenter2012R2OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012R2OperationsManagerReportingServerDomain\$SystemCenter2012R2OperationsManagerReportingServerShort`$','ReportServer',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012R2OperationsManagerReportingServerDomain\$SystemCenter2012R2OperationsManagerReportingServerShort`$','ReportServer`$$SystemCenter2012R2OperationsManagerReportingInstance',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort\$SystemCenter2012R2OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2OperationsManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2OperationsManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2OperationsManagerDatawarehouseServerShort\$SystemCenter2012R2OperationsManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2OperationsManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2OperationsManagerDatawarehouseServerShort','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2OperationsManagerDatawarehouseServerShort','ReportServer`$$SystemCenter2012R2OperationsManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2OperationsManagerDatawarehouseServerShort\$SystemCenter2012R2OperationsManagerDatawarehouseInstance','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2OperationsManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2OperationsManagerDatawarehouseServerShort\$SystemCenter2012R2OperationsManagerDatawarehouseInstance','ReportServer`$$SystemCenter2012R2OperationsManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.InitializeReportServer(`$RSConfig.InstallationID)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMReporting</Value>
              </Switch>
              <Switch>
                <Value>/ManagementServer:$SystemCenter2012R2OperationsManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SRSInstance:$SystemCenter2012R2OperationsManagerReportingServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SRSInstance:$SystemCenter2012R2OperationsManagerReportingServer\$SystemCenter2012R2OperationsManagerReportingInstance</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderUser:$SystemCenter2012R2OperationsManagerDataReaderServiceAccount</Value>
              </Switch>
              <Switch>
                <Value>/DataReaderPassword:$SystemCenter2012R2OperationsManagerDataReaderServiceAccountPassword</Value>
                <Log>/DataReaderPassword:********</Log>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Web Console Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{B9853D74-E2A7-446C-851D-5B5374671D0B}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Condition>$OSVersion -eq '6.1.7601'</Condition>
            <Executable>$WinDir\Microsoft.NET\Framework64\v4.0.30319\aspnet_regiis.exe</Executable>
            <Switches>
              <Switch>
                <Value>-r</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$OSVersion -eq '6.1.7601'</Condition>
            <Executable>$WinDir\System32\inetsrv\appcmd.exe</Executable>
            <Switches>
              <Switch>
                <Value>set</Value>
              </Switch>
              <Switch>
                <Value>config</Value>
              </Switch>
              <Switch>
                <Value>/section:isapiCgiRestriction</Value>
              </Switch>
              <Switch>
                <Value>/[path='$WinDir\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll'].allowed:True</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMWebConsole</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerWebConsoleServer -ne $SystemCenter2012R2OperationsManagerReportingServer</Condition>
                <Value>/ManagementServer:$SystemCenter2012R2OperationsManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2OperationsManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/WebConsoleAuthorizationMode:$SystemCenter2012R2OperationsManagerWebConsoleAuthorizationMode</Value>
              </Switch>
              <Switch>
                <Value>/WebSiteName:`"Default Web Site`"</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{041C3416-87CE-4B02-918E-6FDC95F241D3}</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2OperationsManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/install</Value>
              </Switch>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/components:OMConsole</Value>
              </Switch>
              <Switch>
                <Value>/UseMicrosoftUpdate:$MicrosoftUpdate</Value>
              </Switch>
              <Switch>
                <Value>/SendCEIPReports:$CustomerExperienceImprovementProgram</Value>
              </Switch>
              <Switch>
                <Value>/EnableErrorReporting:$ErrorReporting</Value>
              </Switch>
              <Switch>
                <Value>/SendODRReports:$OperationalDataReporting</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEndUserLicenseAgreement:1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OperationsManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOMUserRole -Name 'OperationsManagerAdministrators' | ForEach-Object {`$_.Users} | Where-Object {`$_ -eq '$SystemCenter2012R2OperationsManagerAdminGroup'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$UserRole = Get-SCOMUserRole -Name 'OperationsManagerAdministrators' ;</Value>
              </Switch>
              <Switch>
                <Value>Set-SCOMUserRole -UserRole `$UserRole -User (`$UserRole.Users + '$SystemCenter2012R2OperationsManagerAdminGroup')</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOMUserRole -Name 'OperationsManagerAdministrators' | ForEach-Object {`$_.Users} | Where-Object {`$_ -eq '$SystemCenter2012R2OperationsManagerAdminGroup'}) {'Done' | Out-File $SystemDrive\Temp\SystemCenter2012R2OperationsManagerAdminGroup.role};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OperationsManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012\Operations Manager' + [char]39 + ' -Application ' + [char]39 + 'Operations Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012R2OperationsManagerManagementServer' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012R2OperationsManagerManagementServer' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012R2OperationsManagerManagementServer' + [char]34 + ' -Name ' + [char]34 + 'ManagementGroupName' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012R2OperationsManagerManagementServer' + [char]34 + ' -Name ' + [char]34 + 'ManagementGroupName' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012R2OperationsManagerManagementGroupName' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\Microsoft Operations Manager\3.0\Console\ConnectionHistory\$SystemCenter2012R2OperationsManagerManagementServer' + [char]34 + ' -Name ' + [char]34 + 'ManagementGroupName' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012R2OperationsManagerManagementGroupName' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OperationsManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Web Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OperationsManagerWebShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Operations Manager' + [char]39 + ' -URL ' + [char]39 + 'http://$SystemCenter2012R2OperationsManagerWebConsoleServer/OperationsManager/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Program Files\Microsoft System Center 2012 R2\Operations Manager\Console\Microsoft.EnterpriseManagement.Monitoring.Console.exe' + [char]39 + ' -IconIndex ' + [char]39 + '0' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'App Advisor' + [char]39 + ' -URL ' + [char]39 + 'http://$SystemCenter2012R2OperationsManagerWebConsoleServer/AppAdvisor/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Program Files\Microsoft System Center 2012 R2\Operations Manager\Console\Microsoft.EnterpriseManagement.Monitoring.Console.exe' + [char]39 + ' -IconIndex ' + [char]39 + '0' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'App Diagnostics' + [char]39 + ' -URL ' + [char]39 + 'http://$SystemCenter2012R2OperationsManagerWebConsoleServer/AppDiagnostics/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Program Files\Microsoft System Center 2012 R2\Operations Manager\Console\Microsoft.EnterpriseManagement.Monitoring.Console.exe' + [char]39 + ' -IconIndex ' + [char]39 + '0' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OperationsManagerWebShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Configuration Manager">
      <Variable Name="SystemCenter2012R2ConfigurationManagerSource" Value="SystemCenter2012R2\ConfigurationManager" />
      <SourceFolder>$SystemCenter2012R2ConfigurationManagerSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>SMSSETUP\BIN\X64\setup.exe</File>
        <FileVersion>5.00.7958.1000</FileVersion>
<!--
        <Type>DownloadExtract</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCCM_SCEP.exe</URL>
        <File>SC2012_R2_SCCM_SCEP.exe</File>
        <Extract>
          <Type>Zip</Type>
          <ExistingFile>SMSSETUP\BIN\X64\setup.exe</ExistingFile>
          <FileVersion>5.00.7958.1000</FileVersion>
        </Extract>
-->
      </Download>
      <Install Name="System Center 2012 R2 Configuration Manager Site Server">
        <Validation>
          <Type>Service</Type>
          <Value>SMS_EXECUTIVE</Value>
        </Validation>
        <Log>C:\</Log>
        <LogFile>ConfigMgr*.log</LogFile>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Identification">
                <Entry>
                  <Value>Action=InstallPrimarySite</Value>
                </Entry>
              </Section>
              <Section Name="Options">
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductID=$SystemCenter2012ProductKey</Value>
                  <Log>ProductID=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -eq "") -or ($SystemCenter2012ProductKey -eq $Null)</Condition>
                  <Value>ProductID=EVAL</Value>
                </Entry>
                <Entry>
                  <Value>SiteCode=$SystemCenter2012R2ConfigurationManagerSiteCode</Value>
                </Entry>
                <Entry>
                  <Value>SiteName=$SystemCenter2012R2ConfigurationManagerSite</Value>
                </Entry>
                <Entry>
                  <Value>SMSInstallDir=$SystemCenter2012R2ConfigurationManagerInstallDir</Value>
                </Entry>
                <Entry>
                  <Value>SDKServer=$SystemCenter2012R2ConfigurationManagerProviderServer</Value>
                </Entry>
                <Entry>
                  <Value>RoleCommunicationProtocol=HTTPorHTTPS</Value>
                </Entry>
                <Entry>
                  <Value>ClientsUsePKICertificate=0</Value>
                </Entry>
                <Entry>
                  <Value>PrerequisiteComp=1</Value>
                </Entry>
                <Entry>
                  <Value>PrerequisitePath=$TempPath\Installer\$SystemCenter2012R2ConfigurationManagerPrerequisitesSource</Value>
                </Entry>
                <Entry>
                  <Value>MobileDeviceLanguage=0</Value>
                </Entry>
                <Entry>
                  <Value>ManagementPoint=$SystemCenter2012R2ConfigurationManagerSiteServer</Value>
                </Entry>
                <Entry>
                  <Value>ManagementPointProtocol=HTTP</Value>
                </Entry>
                <Entry>
                  <Value>DistributionPoint=$SystemCenter2012R2ConfigurationManagerSiteServer</Value>
                </Entry>
                <Entry>
                  <Value>DistributionPointProtocol=HTTP</Value>
                </Entry>
                <Entry>
                  <Value>DistributionPointInstallIIS=0</Value>
                </Entry>
                <Entry>
                  <Value>AdminConsole=0</Value>
                </Entry>
                <Entry>
                  <Value>JoinCEIP=$CustomerExperienceImprovementProgram</Value>
                </Entry>
              </Section>
              <Section Name="SQLConfigOptions">
                <Entry>
                  <Value>SQLServerName=$SystemCenter2012R2ConfigurationManagerDatabaseServer</Value>
                </Entry>
                <Entry>
                  <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                  <Value>DatabaseName=$SystemCenter2012R2ConfigurationManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                  <Value>DatabaseName=$SystemCenter2012R2ConfigurationManagerDatabaseInstance\$SystemCenter2012R2ConfigurationManagerDatabase</Value>
                </Entry>
                <Entry>
                  <Value>SQLSSBPort=4022</Value>
                </Entry>
              </Section>
              <Section Name="HierarchyExpansionOption"></Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ConfigurationManagerSource\SMSSetup\BIN\X64\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/Script $TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/NoUserInput</Value>
              </Switch>
              <Switch>
                <Value>/Hidden</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Configuration Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{A6F71B78-04E9-4DB8-A161-23B87D8FB877}</Value>
        </Validation>
        <Log>C:\</Log>
        <LogFile>ConfigMgr*.log</LogFile>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ConfigurationManagerSource\SMSSETUP\BIN\I386\consolesetup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>TargetDir=`"$SystemCenter2012R2ConfigurationManagerConsoleTargetDir`"</Value>
              </Switch>
              <Switch>
                <Value>DefaultSiteServerName=$SystemCenter2012R2ConfigurationManagerSiteServer</Value>
              </Switch>
              <Switch>
                <Value>EnableSQM=$CustomerExperienceImprovementProgram</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Configuration Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ConfigurationManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$SystemDrive\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10 -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -ErrorAction SilentlyContinue)) {New-Item HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'ServerName' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'ServerName' -Value '$SystemCenter2012R2ConfigurationManagerSiteServer'}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'ServerName' -PropertyType String -Value '$SystemCenter2012R2ConfigurationManagerSiteServer'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteCode' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteCode' -Value '$SystemCenter2012R2ConfigurationManagerSiteCode'}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteCode' -PropertyType String -Value '$SystemCenter2012R2ConfigurationManagerSiteCode'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteName' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteName' -Value '$SystemCenter2012R2ConfigurationManagerSite'}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SiteName' -PropertyType String -Value '$SystemCenter2012R2ConfigurationManagerSite'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SecurityType' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SecurityType' -Value 0}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'SecurityType' -PropertyType DWord -Value 0};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'DomainName' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'DomainName' -Value ''}</Value>
              </Switch>
              <Switch>
                <Value>Else {New-ItemProperty -Path HKCU:Software\Microsoft\ConfigMgr10\AdminUI\MRU\1 -Name 'DomainName' -PropertyType String -Value ''};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module ConfigurationManager)) {Import-Module '$SystemDrive\Program Files (x86)\Microsoft Configuration Manager\AdminConsole\bin\ConfigurationManager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>Set-Location $SystemCenter2012R2ConfigurationManagerSiteCode`:;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-CMAdministrativeUser -RoleName 'Full Administrator' | Where-Object {`$_.LogonName -eq '$SystemCenter2012R2ConfigurationManagerAdminGroup'})) {New-CMAdministrativeUser -RoleName 'Full Administrator' -SecurityScopeName All -Name '$SystemCenter2012R2ConfigurationManagerAdminGroup'};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-CMAdministrativeUser -RoleName 'Full Administrator' | Where-Object {`$_.LogonName -eq '$SystemCenter2012R2ConfigurationManagerAdminGroup'}) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ConfigurationManagerAdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Configuration Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ConfigurationManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012 R2\Configuration Manager' + [char]39 + ' -Application ' + [char]39 + 'Configuration Manager Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ConfigurationManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Configuration Manager Prerequisites">
      <Variable Name="SystemCenter2012R2ConfigurationManagerPrerequisitesSource" Value="SystemCenter2012R2\ConfigurationManager.DL" />
      <SourceFolder>$SystemCenter2012R2ConfigurationManagerPrerequisitesSource</SourceFolder>
      <Download>
        <Type>DownloadRun</Type>
        <Run>
          <ExistingFile>ConfigMgr.Manifest.cab</ExistingFile>
          <FileSize>8540</FileSize>
          <Command>$Download\SystemCenter2012R2\ConfigurationManager\SMSSETUP\BIN\X64\setupdl.exe</Command>
          <Argument>/NoUI $Download\$DownloadFolder</Argument>
        </Run>
      </Download>
      <Install Name="System Center 2012 R2 Configuration Manager Prerequisites">
        <Validation>
          <Type>None</Type>
          <Value>None</Value>
        </Validation>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Service Manager">
      <Variable Name="SystemCenter2012R2ServiceManagerSource" Value="SystemCenter2012R2\ServiceManager" />
      <SourceFolder>$SystemCenter2012R2ServiceManagerSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>setup.exe</File>
        <FileVersion>7.5.3079.0</FileVersion>
<!--
        <Type>DownloadRun</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCSM.exe</URL>
        <File>SC2012_R2_SCSM.exe</File>
        <Run>
          <ExistingFile>Setup.exe</ExistingFile>
          <FileVersion>7.5.3079.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SC2012_R2_SCSM.exe</Command>
          <Argument>/verysilent /dir=$Download\$DownloadFolder</Argument>
        </Run>
-->
      </Download>
      <Install Name="System Center 2012 R2 Service Manager Reporting Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerReportingServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Condition>$SystemCenter2012R2ServiceManagerReportingServer -ne $SystemCenter2012R2ServiceManagerDatawarehouseServer</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingVersion -eq "SQL Server 2012"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012R2ServiceManagerReportingInstance\v11\Admin;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingVersion -eq "SQL Server 2008 R2"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012R2ServiceManagerReportingInstance\v10\Admin;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSConfig.DatabaseName)) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer_$SystemCenter2012R2ServiceManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportServerWebService','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports_$SystemCenter2012R2ServiceManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportManager','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer`$$SystemCenter2012R2ServiceManagerReportingInstance',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012R2ServiceManagerReportingServerDomain\$SystemCenter2012R2ServiceManagerReportingServerShort`$','ReportServer',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012R2ServiceManagerReportingServerDomain\$SystemCenter2012R2ServiceManagerReportingServerShort`$','ReportServer`$$SystemCenter2012R2ServiceManagerReportingInstance',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2ServiceManagerDatawarehouseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null) -and ($SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ServiceManagerDatawarehouseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2ServiceManagerDatawarehouseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2ServiceManagerDatawarehouseServerShort','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2ServiceManagerDatawarehouseServerShort','ReportServer`$$SystemCenter2012R2ServiceManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance','ReportServer`$$SystemCenter2012R2ServiceManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.InitializeReportServer(`$RSConfig.InstallationID)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = ((Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $SystemCenter2012R2ServiceManagerReportingInstance).$SystemCenter2012R2ServiceManagerReportingInstance);</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$SRSBin = `$SQLPath + '\bin\';</Value>
              </Switch>
              <Switch>
                <Value>`$SRSFile = `$SRSBin + 'Microsoft.EnterpriseManagement.Reporting.Code.dll';</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path(`$SRSFile))) {Copy-Item '$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\Prerequisites\Microsoft.EnterpriseManagement.Reporting.Code.dll' `$SRSBin};</Value>
              </Switch>
              <Switch>
                <Value>If (Test-Path(`$SRSFile)) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerReportingServer.role'}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $SystemCenter2012R2ServiceManagerReportingInstance).$SystemCenter2012R2ServiceManagerReportingInstance;</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRSFile = `$SQLPath + '\RSReportServer.config';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS = [XML] (Get-Content `$RSRSFile);</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSRS.Configuration.Extensions.Data.Extension | Where-Object {`$_.Name -eq 'SCDWMultiMartDataProcessor'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$OldData = @(`$RSRS.Configuration.Extensions.Data.Extension)[0];</Value>
              </Switch>
              <Switch>
                <Value>`$NewData = `$OldData.Clone();</Value>
              </Switch>
              <Switch>
                <Value>`$NewData.Name = 'SCDWMultiMartDataProcessor';</Value>
              </Switch>
              <Switch>
                <Value>`$NewData.Type = 'Microsoft.EnterpriseManagement.Reporting.MultiMartConnection, Microsoft.EnterpriseManagement.Reporting.Code';</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS.Configuration.Extensions.Data.AppendChild(`$NewData);</Value>
              </Switch>
              <Switch>
                <Value>`$RSRS.Save(`$RSRSFile)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>`$SQLFolder = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\RS' $SystemCenter2012R2ServiceManagerReportingInstance).$SystemCenter2012R2ServiceManagerReportingInstance;</Value>
              </Switch>
              <Switch>
                <Value>`$SQLReg = 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\' + `$SQLFolder + '\Setup';</Value>
              </Switch>
              <Switch>
                <Value>`$SQLPath = (Get-ItemProperty `$SQLReg SQLPath).SQLPath + 'ReportServer';</Value>
              </Switch>
              <Switch>
                <Value>`$RSSPFile = `$SQLPath + '\RSSrvPolicy.config';</Value>
              </Switch>
              <Switch>
                <Value>`$RSSP = [XML] (Get-Content `$RSSPFile);</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSSP.configuration.mscorlib.security.policy.PolicyLevel.CodeGroup | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.Name -eq 'Microsoft System Center Service Manager Reporting Code Assembly'})) {</Value>
              </Switch>
              <Switch>
                <Value>`$OldCodeGroup = @(`$RSSP.configuration.mscorlib.security.policy.PolicyLevel.CodeGroup | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup})[0];</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup = `$OldCodeGroup.Clone();</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.class = 'UnionCodeGroup';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.version = '1';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.PermissionSetName = 'FullTrust';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.Name = 'Microsoft System Center Service Manager Reporting Code Assembly';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.Description = 'Grants the SCSM Reporting Code assembly full trust permission.';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.IMembershipCondition.class = 'StrongNameMembershipCondition';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.IMembershipCondition.version = '1';</Value>
              </Switch>
              <Switch>
                <Value>`$NewCodeGroup.IMembershipCondition.PublicKeyBlob = '0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9';</Value>
              </Switch>
              <Switch>
                <Value>(`$RSSP.configuration.mscorlib.security.policy.PolicyLevel.CodeGroup | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'} | ForEach-Object {`$_.CodeGroup} | Where-Object {`$_.class -eq 'FirstMatchCodeGroup'}).AppendChild(`$NewCodeGRoup);</Value>
              </Switch>
              <Switch>
                <Value>`$RSSP.Save(`$RSSPFile)</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{7B523367-360B-4EB6-9ED4-D2637816DD0F}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Server</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2ServiceManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SQLServerInstance:$SystemCenter2012R2ServiceManagerDatabaseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SQLServerInstance:$SystemCenter2012R2ServiceManagerDatabaseServerShort\$SystemCenter2012R2ServiceManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/CreateNewDatabase</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseName:$SystemCenter2012R2ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/DatabaseSize:$SystemCenter2012R2ServiceManagerDatabaseSize</Value>
              </Switch>
              <Switch>
                <Value>/ManagementGroupName:$SystemCenter2012R2ServiceManagerManagementGroupName</Value>
              </Switch>
              <Switch>
                <Value>/AdminRoleGroup:$SystemCenter2012R2ServiceManagerAdminRoleGroup</Value>
              </Switch>
              <Switch>
                <Value>/ServiceRunUnderAccount:$SystemCenter2012R2ServiceManagerServicesServiceAccount\$SystemCenter2012R2ServiceManagerServicesServiceAccountPassword</Value>
                <Log>/ServiceRunUnderAccount:$SystemCenter2012R2ServiceManagerServicesServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Value>/WorkflowAccount:$SystemCenter2012R2ServiceManagerWorkflowServiceAccount\$SystemCenter2012R2ServiceManagerWorkflowServiceAccountPassword</Value>
                <Log>/WorkflowAccount:$SystemCenter2012R2ServiceManagerWorkflowServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Datawarehouse Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{7B523367-360B-4EB6-9ED4-D2637816DD0F}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Datawarehouse</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2ServiceManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Value>/CreateNewDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/StgConfigSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/RepositorySqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/DataMartSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/OMDataMartSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/CMDataMartSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/StgConfigSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/RepositorySqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/DataMartSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/OMDataMartSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatawarehouseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/CMDataMartSqlServerInstance:$SystemCenter2012R2ServiceManagerDatawarehouseServerShort\$SystemCenter2012R2ServiceManagerDatawarehouseInstance</Value>
              </Switch>
              <Switch>
                <Value>/StgConfigDatabaseName:$SystemCenter2012R2ServiceManagerDWStagingAndConfig</Value>
              </Switch>
              <Switch>
                <Value>/StgConfigDatabaseSize:$SystemCenter2012R2ServiceManagerDWStagingAndConfigSize</Value>
              </Switch>
              <Switch>
                <Value>/RepositoryDatabaseName:$SystemCenter2012R2ServiceManagerDWRepository</Value>
              </Switch>
              <Switch>
                <Value>/RepositoryDatabaseSize:$SystemCenter2012R2ServiceManagerDWRepositorySize</Value>
              </Switch>
              <Switch>
                <Value>/DataMartDatabaseName:$SystemCenter2012R2ServiceManagerDWDataMart</Value>
              </Switch>
              <Switch>
                <Value>/DataMartDatabaseSize:$SystemCenter2012R2ServiceManagerDWDataMartSize</Value>
              </Switch>
              <Switch>
                <Value>/OMDataMartDatabaseName:$SystemCenter2012R2ServiceManagerOMDWDataMart</Value>
              </Switch>
              <Switch>
                <Value>/OMDataMartDatabaseSize:$SystemCenter2012R2ServiceManagerOMDWDataMartSize</Value>
              </Switch>
              <Switch>
                <Value>/CMDataMartDatabaseName:$SystemCenter2012R2ServiceManagerCMDWDataMart</Value>
              </Switch>
              <Switch>
                <Value>/CMDataMartDatabaseSize:$SystemCenter2012R2ServiceManagerCMDWDataMartSize</Value>
              </Switch>
              <Switch>
                <Value>/ManagementGroupName:$SystemCenter2012R2ServiceManagerDatawarehouseManagementGroupName</Value>
              </Switch>
              <Switch>
                <Value>/AdminRoleGroup:$SystemCenter2012R2ServiceManagerAdminRoleGroup</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>/ReportingServer:$SystemCenter2012R2ServiceManagerReportingServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>/ReportingWebServiceURL:http://$SystemCenter2012R2ServiceManagerReportingServer/ReportServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>/ReportingServer:$SystemCenter2012R2ServiceManagerReportingServerShort\$SystemCenter2012R2ServiceManagerReportingInstance</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>/ReportingWebServiceURL:http://$SystemCenter2012R2ServiceManagerReportingServer/ReportServer_$SystemCenter2012R2ServiceManagerReportingInstance</Value>
              </Switch>
              <Switch>
                <Value>/ServiceRunUnderAccount:$SystemCenter2012R2ServiceManagerServicesServiceAccount\$SystemCenter2012R2ServiceManagerServicesServiceAccountPassword</Value>
                <Log>/ServiceRunUnderAccount:$SystemCenter2012R2ServiceManagerServicesServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Value>/DataSourceAccount:$SystemCenter2012R2ServiceManagerReportingServiceAccount\$SystemCenter2012R2ServiceManagerReportingServiceAccountPassword</Value>
                <Log>/DataSourceAccount:$SystemCenter2012R2ServiceManagerReportingServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerAnalysisInstance -eq "MSSQLSERVER"</Condition>
                <Value>/AnalysisServerInstance:$SystemCenter2012R2ServiceManagerAnalysisServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerAnalysisInstance -ne "MSSQLSERVER"</Condition>
                <Value>/AnalysisServerInstance:$SystemCenter2012R2ServiceManagerAnalysisServerShort\$SystemCenter2012R2ServiceManagerAnalysisInstance</Value>
              </Switch>
              <Switch>
                <Value>/AnalysisServerDatabaseName:$SystemCenter2012R2ServiceManagerDWASDataBase</Value>
              </Switch>
              <Switch>
                <Value>/ASRunUnderAccount:$SystemCenter2012R2ServiceManagerAnalysisServiceAccount\$SystemCenter2012R2ServiceManagerAnalysisServiceAccountPassword</Value>
                <Log>/ASRunUnderAccount:$SystemCenter2012R2ServiceManagerAnalysisServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Value>/WorkflowAccount:$SystemCenter2012R2ServiceManagerWorkflowServiceAccount\$SystemCenter2012R2ServiceManagerWorkflowServiceAccountPassword</Value>
                <Log>/WorkflowAccount:$SystemCenter2012R2ServiceManagerWorkflowServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Additional Management Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{7B523367-360B-4EB6-9ED4-D2637816DD0F}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Server</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/InstallPath:$SystemCenter2012R2ServiceManagerInstallPath</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase:$SystemCenter2012R2ServiceManagerDatabaseServerShort`:$SystemCenter2012R2ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase:$SystemCenter2012R2ServiceManagerDatabaseServerShort\$SystemCenter2012R2ServiceManagerDatabaseInstance`:$SystemCenter2012R2ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/ServiceRunUnderAccount:$SystemCenter2012R2ServiceManagerServicesServiceAccount\$SystemCenter2012R2ServiceManagerServicesServiceAccountPassword</Value>
                <Log>/ServiceRunUnderAccount:$SystemCenter2012R2ServiceManagerServicesServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Web Content Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\inetpub\wwwroot\System Center Service Manager Portal\</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:PortalWebContentServer</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/PortalWebSiteName:$SystemCenter2012R2ServiceManagerPortalWebSiteName</Value>
              </Switch>
              <Switch>
                <Condition>($SSLCert -eq $null) -and ($SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -eq "False")</Condition>
                <Value>/PortalWebSitePort:$SystemCenter2012R2ServiceManagerPortalWebSitePortHTTP</Value>
              </Switch>
              <Switch>
                <Condition>($SSLCert -ne $null) -or ($SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -eq "True")</Condition>
                <Value>/PortalWebSitePort:$SystemCenter2012R2ServiceManagerPortalWebSitePortHTTPS</Value>
              </Switch>
              <Switch>
                <Condition>($SSLCert -ne $null) -or ($SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -eq "True")</Condition>
                <Value>/PortalWebSiteCertificate:$SystemCenter2012R2ServiceManagerWebContentServer</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase`:$SystemCenter2012R2ServiceManagerDatabaseServerShort`:$SystemCenter2012R2ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/UseExistingDatabase`:$SystemCenter2012R2ServiceManagerDatabaseServerShort\$SystemCenter2012R2ServiceManagerDatabaseInstance`:$SystemCenter2012R2ServiceManagerDatabase</Value>
              </Switch>
              <Switch>
                <Value>/PortalAccount:$SystemCenter2012R2ServiceManagerPortalServiceAccount\$SystemCenter2012R2ServiceManagerPortalServiceAccountPassword</Value>
                <Log>/PortalAccount:$SystemCenter2012R2ServiceManagerPortalServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager SharePoint Web Parts Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\inetpub\wwwroot\wss\VirtualDirectories\Service Manager Portal</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:PortalSharePointSite</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Value>/SpPortalWebSiteName:$SystemCenter2012R2ServiceManagerSpPortalWebSiteName</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -eq "True"</Condition>
                <Value>/SpPortalWebSitePort:$SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTPS</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -ne "True"</Condition>
                <Value>/SpPortalWebSitePort:$SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTP</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -eq "True"</Condition>
                <Value>/SpPortalWebSiteCertificate:$SystemCenter2012R2ServiceManagerSharePointWebPartsServer</Value>
              </Switch>
              <Switch>
                <Value>/SpPortalAppPoolAccount:$SystemCenter2012R2ServiceManagerPortalServiceAccount\$SystemCenter2012R2ServiceManagerPortalServiceAccountPassword</Value>
                <Log>/SpPortalAppPoolAccount:$SystemCenter2012R2ServiceManagerPortalServiceAccount\********</Log>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>/SpPortalDatabaseServerInstance:$SystemCenter2012R2ServiceManagerDatabaseServerShort</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>/SpPortalDatabaseServerInstance:$SystemCenter2012R2ServiceManagerDatabaseServerShort\$SystemCenter2012R2ServiceManagerDatabaseInstance</Value>
              </Switch>
              <Switch>
                <Value>/SpPortalDatabaseName:$SystemCenter2012R2ServiceManagerSpPortalDatabaseName</Value>
              </Switch>
              <Switch>
                <Condition>!(Test-Path "$LogFolder\Temp\$SystemCenter2012R2ServiceManagerWebContentServer.cert")</Condition>
                <Value>/SpPortalWebContentServerUrl`:http`://$SystemCenter2012R2ServiceManagerWebContentServer`:$SystemCenter2012R2ServiceManagerPortalWebSitePortHTTP/</Value>
              </Switch>
              <Switch>
                <Condition>Test-Path "$LogFolder\Temp\$SystemCenter2012R2ServiceManagerWebContentServer.cert"</Condition>
                <Value>/SpPortalWebContentServerUrl`:https`://$SystemCenter2012R2ServiceManagerWebContentServer`:$SystemCenter2012R2ServiceManagerPortalWebSitePortHTTPS/</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>$SystemCenter2012R2ServiceManagerPortalUsers -ne $null</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>. '$SystemDrive\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\CONFIG\POWERSHELL\Registration\SharePoint.ps1';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -eq "True"</Condition>
                <Value>`$Web = Get-SPWeb -Identity 'https://$SystemCenter2012R2ServiceManagerSharePointWebPartsServerShort`:$SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTPS/SMPortal';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate -ne "True"</Condition>
                <Value>`$Web = Get-SPWeb -Identity 'http://$SystemCenter2012R2ServiceManagerSharePointWebPartsServerShort`:$SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTP/SMPortal';</Value>
              </Switch>
              <Switch>
                <Value>`$Web.BreakRoleInheritance(`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Value>`$Web.SiteUsers.Add('$SystemCenter2012R2ServiceManagerPortalUsers','','','');</Value>
              </Switch>
              <Switch>
                <Value>`$Group = Get-SPUser -Web `$Web | Where-Object {`$_.UserLogin -eq '$SystemCenter2012R2ServiceManagerPortalUsers'};</Value>
              </Switch>
              <Switch>
                <Value>`$GroupAssignment = new-object Microsoft.SharePoint.SPRoleAssignment(`$Group);</Value>
              </Switch>
              <Switch>
                <Value>`$RoleDefinition = `$Web.Site.RootWeb.RoleDefinitions['Read'];</Value>
              </Switch>
              <Switch>
                <Value>`$GroupAssignment.RoleDefinitionBindings.Add(`$RoleDefinition);</Value>
              </Switch>
              <Switch>
                <Value>`$Web.RoleAssignments.Add(`$GroupAssignment);</Value>
              </Switch>
              <Switch>
                <Value>`$Web.Update()</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Console">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{7B523367-360B-4EB6-9ED4-D2637816DD0F}</Value>
        </Validation>
        <Log>%temp%</Log>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2ServiceManagerSource\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/silent</Value>
              </Switch>
              <Switch>
                <Value>/Install:Console</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOwner:$RegisteredUser</Value>
              </Switch>
              <Switch>
                <Value>/RegisteredOrganization:$RegisteredOrganization</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                <Value>/ProductKey:$SystemCenter2012ProductKey</Value>
                <Log>/ProductKey:*****-*****-*****-*****-*****</Log>
              </Switch>
              <Switch>
                <Value>/AcceptEULA:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>/CustomerExperienceImprovementProgram:No</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -eq 1</Condition>
                <Value>/EnableErrorReporting:Yes</Value>
              </Switch>
              <Switch>
                <Condition>$ErrorReporting -ne 1</Condition>
                <Value>/EnableErrorReporting:No</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012 R2\Service Manager' + [char]39 + ' -Application ' + [char]39 + 'Service Manager Console' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Get-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -ErrorAction SilentlyContinue)) {New-Item ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Get-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -Name ' + [char]34 + 'SDKServiceMachine' + [char]34 + ' -ErrorAction SilentlyContinue) {Set-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -Name ' + [char]34 + 'SDKServiceMachine' + [char]34 + ' -Value ' + [char]34 + '$SystemCenter2012R2ServiceManagerManagementServer' + [char]34 + '} Else {New-ItemProperty -Path ' + [char]34 + 'HKCU:Software\Microsoft\System Center\2010\Service Manager\Console\User Settings' + [char]34 + ' -Name ' + [char]34 + 'SDKServiceMachine' + [char]34 + ' -PropertyType String -Value ' + [char]34 + '$SystemCenter2012R2ServiceManagerManagementServer' + [char]34 + ' | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Web Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerWebShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate</Condition>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Service Manager' + [char]39 + ' -URL ' + [char]39 + 'https://$SystemCenter2012R2ServiceManagerSharePointWebPartsServer`:$SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTPS/SMPortal/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Windows\System32\url.dll' + [char]39 + ' -IconIndex ' + [char]39 + '5' + [char]39;</Value>
              </Switch>
              <Switch>
                <Condition>!($SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate)</Condition>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Service Manager' + [char]39 + ' -URL ' + [char]39 + 'http://$SystemCenter2012R2ServiceManagerSharePointWebPartsServer`:$SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTP/SMPortal/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Windows\System32\url.dll' + [char]39 + ' -IconIndex ' + [char]39 + '5' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerWebShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Data Protection Manager">
      <Variable Name="SystemCenter2012R2DataProtectionManagerSource" Value="SystemCenter2012R2\DataProtectionManager" />
      <SourceFolder>$SystemCenter2012R2DataProtectionManagerSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <File>SCDPM\Setup.exe</File>
        <FileVersion>4.2.1205.0</FileVersion>
<!--
        <Type>DownloadRun</Type>
        <URL>http://care.dlservice.microsoft.com/dl/download/evalx/sc2012r2/SC2012_R2_SCDPM_EVAL.exe</URL>
        <File>SC2012_R2_SCDPM_EVAL.exe</File>
        <Run>
          <ExistingFile>SCDPM\Setup.exe</ExistingFile>
          <FileVersion>4.2.1205.0</FileVersion>
          <Command>$Download\Download\$DownloadFolder\SC2012_R2_SCDPM_EVAL.exe</Command>
          <Argument>/verysilent /dir=$Download\$DownloadFolder</Argument>
        </Run>
-->
      </Download>
      <Install Name="System Center 2012 R2 Data Protection Manager Database Server">
        <SourceSubFolder>SCDPM\SQLPrepInstaller</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{1CAEC48E-A90B-4AA2-BB81-ACAA3795430D}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>$TempPath\Installer\$SystemCenter2012R2DataProtectionManagerSource\SCDPM\SQLPrepInstaller\SQLPrepInstaller_x64.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Data Protection Manager Reporting Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerReportingServer.role</Value>
        </Validation>
        <Log>%SystemDrive%\Users\Default\AppData\Local\SCOM\Logs</Log>
        <CommandLines>
          <CommandLine>
            <Condition>$SystemCenter2012R2DataProtectionManagerReportingServer -ne $SystemCenter2012R2DataProtectionManagerDatabaseServer</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingVersion -eq "SQL Server 2012"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012R2DataProtectionManagerReportingInstance\v11\Admin;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingVersion -eq "SQL Server 2008 R2"</Condition>
                <Value>`$RSConfig = Get-WmiObject -Class MSReportServer_ConfigurationSetting -Namespace root\Microsoft\SQLServer\ReportServer\RS_$SystemCenter2012R2DataProtectionManagerReportingInstance\v10\Admin;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$RSConfig.DatabaseName)) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportServerWebService','ReportServer_$SystemCenter2012R2DataProtectionManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportServerWebService','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSConfig.SetVirtualDirectory('ReportManager','Reports_$SystemCenter2012R2DataProtectionManagerReportingInstance',$Language);</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.ReserveURL('ReportManager','http://+:80',$Language);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseCreationScript('ReportServer`$$SystemCenter2012R2DataProtectionManagerReportingInstance',$Language,`$false);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2DataProtectionManagerDatabaseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort\$SystemCenter2012R2DataProtectionManagerDatabaseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2DataProtectionManagerDatabaseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2DataProtectionManagerDatabaseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort\$SystemCenter2012R2DataProtectionManagerDatabaseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2DataProtectionManagerDatabaseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -eq "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012R2DataProtectionManagerReportingServerDomain\$SystemCenter2012R2DataProtectionManagerReportingServerShort`$','ReportServer',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerReportingInstance -ne "MSSQLSERVER"</Condition>
                <Value>`$RSScript = `$RSConfig.GenerateDatabaseRightsScript('$SystemCenter2012R2DataProtectionManagerReportingServerDomain\$SystemCenter2012R2DataProtectionManagerReportingServerShort`$','ReportServer`$$SystemCenter2012R2DataProtectionManagerReportingInstance',`$true,`$true);</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2DataProtectionManagerDatabaseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort\$SystemCenter2012R2DataProtectionManagerDatabaseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2DataProtectionManagerDatabaseNode\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null</Condition>
                <Value>`$RSScript.Script | Out-File '\\$SystemCenter2012R2DataProtectionManagerDatabaseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null) -and ($SystemCenter2012R2DataProtectionManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2DataProtectionManagerDatabaseServerShort\$SystemCenter2012R2DataProtectionManagerDatabaseInstance -i $TempPath\RSScript.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2DataProtectionManagerDatabaseServer\$TempPathUNC\RSScript.sql';</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012R2DataProtectionManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2DataProtectionManagerDatabaseServerShort','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseInstance -eq "MSSQLSERVER") -and ($SystemCenter2012R2DataProtectionManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2DataProtectionManagerDatabaseServerShort','ReportServer`$$SystemCenter2012R2DataProtectionManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012R2DataProtectionManagerReportingInstance -eq "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2DataProtectionManagerDatabaseServerShort\$SystemCenter2012R2DataProtectionManagerDatabaseInstance','ReportServer',2,'','');</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2DataProtectionManagerDatabaseInstance -ne "MSSQLSERVER") -and ($SystemCenter2012R2DataProtectionManagerReportingInstance -ne "MSSQLSERVER")</Condition>
                <Value>`$RSConfig.SetDatabaseConnection('$SystemCenter2012R2DataProtectionManagerDatabaseServerShort\$SystemCenter2012R2DataProtectionManagerDatabaseInstance','ReportServer`$$SystemCenter2012R2DataProtectionManagerReportingInstance',2,'','');</Value>
              </Switch>
              <Switch>
                <Value>`$RSConfig.InitializeReportServer(`$RSConfig.InstallationID)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerReportingServer.role';</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Data Protection Manager Server">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{99EFD904-A89C-4116-91C9-80FD7FD40DA7}</Value>
        </Validation>
        <Log>%SystemDrive%\Program Files\Microsoft System Center 2012 R2\DPM\DPMLogs</Log>
        <CommandLines>
          <CommandLine>
            <INIFile>
              <Section Name="Options">
                <Entry>
                  <Value>UserName=$RegisteredUser</Value>
                </Entry>
                <Entry>
                  <Value>CompanyName=$RegisteredOrganization</Value>
                </Entry>
                <Entry>
                  <Condition>($SystemCenter2012ProductKey -ne "") -and ($SystemCenter2012ProductKey -ne $Null)</Condition>
                  <Value>ProductKey=$SystemCenter2012ProductKey</Value>
                  <Log>ProductKey=*****-*****-*****-*****-*****</Log>
                </Entry>
                <Entry>
                  <Value>ProgramFiles=$SystemCenter2012R2DataProtectionManagerProgramFiles</Value>
                </Entry>
                <Entry>
                  <Value>YukonMachineName=$SystemCenter2012R2DataProtectionManagerDatabaseServerShort</Value>
                </Entry>
                <Entry>
                  <Value>YukonInstanceName=$SystemCenter2012R2DataProtectionManagerDatabaseInstance</Value>
                </Entry>
                <Entry>
                  <Value>YukonMachineUserName=$InstallerServiceAccountUsername</Value>
                </Entry>
                <Entry>
                  <Value>YukonMachinePassword=$InstallerServiceAccountPassword</Value>
                  <Log>YukonMachinePassword=********</Log>
                </Entry>
                <Entry>
                  <Value>YukonMachineDomainName=$InstallerServiceAccountDomain</Value>
                </Entry>
                <Entry>
                  <Value>ReportingMachineName=$SystemCenter2012R2DataProtectionManagerReportingServerShort</Value>
                </Entry>
                <Entry>
                  <Value>ReportingInstanceName=$SystemCenter2012R2DataProtectionManagerReportingInstance</Value>
                </Entry>
                <Entry>
                  <Value>ReportingMachineUserName=$InstallerServiceAccountUsername</Value>
                </Entry>
                <Entry>
                  <Value>ReportingMachinePassword=$InstallerServiceAccountPassword</Value>
                  <Log>ReportingMachinePassword=********</Log>
                </Entry>
                <Entry>
                  <Value>ReportingMachineDomainName=$InstallerServiceAccountDomain</Value>
                </Entry>
              </Section>
            </INIFile>
            <Executable>$TempPath\Installer\$SystemCenter2012R2DataProtectionManagerSource\SCDPM\setup.exe</Executable>
            <Switches>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>/f</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer.ini</Value>
              </Switch>
              <Switch>
                <Value>/q</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Data Protection Manager Console">
        <SourceSubFolder>SCDPM\DPM2012\dpmcli</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{DFF93860-2113-4207-A7AC-3901ABCE8002}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012R2DataProtectionManagerSource\SCDPM\DPM2012\dpmcli\dpmui.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
              <Switch>
                <Value>BOOTSTRAPPED=1</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item '$SystemDrive\Users\Public\Desktop\Microsoft System Center 2012 R2 DPM Management Shell.lnk';</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item '$SystemDrive\Users\Public\Desktop\Microsoft System Center Data Protection Manager.lnk';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Data Protection Manager Integration">
        <SourceSubFolder>SCDPM\ManagementPacks</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OperationsManagerDataProtectionManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Library)) {Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2DataProtectionManagerSource\SCDPM\ManagementPacks\en-US\Microsoft.SystemCenter.DataProtectionManager.2012.Library.mp};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Discovery)) {Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2DataProtectionManagerSource\SCDPM\ManagementPacks\en-US\Microsoft.SystemCenter.DataProtectionManager.2012.Discovery.mp};</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Library) -and (Get-SCManagementPack -Name Microsoft.SystemCenter.DataProtectionManager.2012.Discovery)) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OperationsManagerDataProtectionManagerIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Integration">
        <SourceSubFolder>SCDPM\DPM2012\dpmcc</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{574CB555-A5C9-4E08-A2CD-FC530C17AD3F}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$SystemCenter2012R2DataProtectionManagerSource\SCDPM\DPM2012\dpmcc\DPMCentralConsoleServer.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
              <Switch>
                <Value>BOOTSTRAPPED=1</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Data Protection Manager Admin Group">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerAdminGroup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$SystemCenter2012R2DataProtectionManagerServer/$AdminGroup,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2DataProtectionManagerAdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2DataProtectionManagerAdminGroup'.Split('\')[0] + '/' + '$SystemCenter2012R2DataProtectionManagerAdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
<!--
              <Switch>
                <Value>`$DBAdmin = Invoke-Command -ComputerName $SystemCenter2012R2DataProtectionManagerDatabaseServer -ScriptBlock {</Value>
              </Switch>
              <Switch>
                <Value>Function Get-UserInGroup (`$User,`$Group) {</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Members() | ForEach-Object {</Value>
              </Switch>
              <Switch>
                <Value>`$AdsPath = `$_.GetType().InvokeMember('Adspath', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>`$A = `$AdsPath.split('/',[StringSplitOptions]::RemoveEmptyEntries);</Value>
              </Switch>
              <Switch>
                <Value>`$Name = `$A[2];</Value>
              </Switch>
              <Switch>
                <Value>`$Domain = `$A[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Class = `$_.GetType().InvokeMember('Class', 'GetProperty', `$Null, `$_, `$Null);</Value>
              </Switch>
              <Switch>
                <Value>If ((`$Domain -eq `$User.Split('\')[0]) -and (`$Name -eq `$User.Split('\')[1])) {Return `$True}</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$Group = [ADSI]('WinNT://$SystemCenter2012R2DataProtectionManagerDatabaseServer/DPMDBAdministrators`$$SystemCenter2012R2DataProtectionManagerServerShort,group');</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-UserInGroup -User '$SystemCenter2012R2DataProtectionManagerAdminGroup' -Group `$Group)) {</Value>
              </Switch>
              <Switch>
                <Value>`$User = 'WinNT://' + '$SystemCenter2012R2DataProtectionManagerAdminGroup'.Split('\')[0] + '/' + '$SystemCenter2012R2DataProtectionManagerAdminGroup'.Split('\')[1];</Value>
              </Switch>
              <Switch>
                <Value>`$Group.Add(`$User)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-UserInGroup -User '$SystemCenter2012R2DataProtectionManagerAdminGroup' -Group `$Group) {Return `$true}</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (`$DBAdmin -and (Get-UserInGroup -User '$SystemCenter2012R2DataProtectionManagerAdminGroup' -Group `$Group)) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerAdminGroup.role'};</Value>
              </Switch>
-->
              <Switch>
                <Value>If (Get-UserInGroup -User '$SystemCenter2012R2DataProtectionManagerAdminGroup' -Group `$Group) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerAdminGroup.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Data Protection Manager Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Pin -Action ' + [char]39 + 'Pin' + [char]39 + ' -Type ' + [char]39 + 'Taskbar' + [char]39 + ' -Scope ' + [char]39 + 'Public' + [char]39 + ' -Folder ' + [char]39 + 'Microsoft System Center 2012 R2\Data Protection Manager' + [char]39 + ' -Application ' + [char]39 + 'Microsoft System Center Data Protection Manager' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ')) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:AppData\Microsoft' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:AppData\Microsoft' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (!(Test-Path ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager' + [char]34 + ')) {New-Item ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager' + [char]34 + ' -ItemType Directory | Out-Null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + '?xml version=' + [char]34 + '1.0' + [char]34 + ' encoding=' + [char]34 + 'utf-16' + [char]34 + '?' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + 'ProductSettings xmlns:xsi=' + [char]34 + 'http://www.w3.org/2001/XMLSchema-instance' + [char]34 + ' xmlns:xsd=' + [char]34 + 'http://www.w3.org/2001/XMLSchema' + [char]34 + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '  ' + [char]60 + 'Modules' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '    ' + [char]60 + 'Module' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '      ' + [char]60 + 'KeyValuePairs' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '        ' + [char]60 + 'KeyValuePair Key=' + [char]34 + 'LastConnectedDPMServer' + [char]34 + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '          ' + [char]60 + 'Value' + [char]62 + '$SystemCenter2012R2DataProtectionManagerServer' + [char]60 + '/Value' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '        ' + [char]60 + '/KeyValuePair' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '      ' + [char]60 + '/KeyValuePairs' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '      ' + [char]60 + 'ModuleName' + [char]62 + 'Launcher' + [char]60 + '/ModuleName' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '    ' + [char]60 + '/Module' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + '  ' + [char]60 + '/Modules' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]39 + [char]60 + '/ProductSettings' + [char]62 + [char]39 + ' | Out-File ' + [char]34 + '`$env:AppData\Microsoft\Microsoft System Center 2012 R2 Data Protection Manager\LauncherSettings.xml' + [char]34 + ' -Encoding ASCII -Append';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2DataProtectionManagerShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Azure Pack 2013">
      <Variable Name="WindowsAzurePack2013Source" Value="WindowsAzurePack2013" />
      <SourceFolder>$WindowsAzurePack2013Source</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-PowerShellAPI.msi</URL>
        <File>MgmtSvc-PowerShellAPI.msi</File>
        <FileSize>3772416</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-WebAppGallery.msi</URL>
        <File>MgmtSvc-WebAppGallery.msi</File>
        <FileSize>3993600</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-SQLServer.msi</URL>
        <File>MgmtSvc-SQLServer.msi</File>
        <FileSize>3731456</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-MySQL.msi</URL>
        <File>MgmtSvc-MySQL.msi</File>
        <FileSize>3702784</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-Monitoring.msi</URL>
        <File>MgmtSvc-Monitoring.msi</File>
        <FileSize>4444160</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-Usage.msi</URL>
        <File>MgmtSvc-Usage.msi</File>
        <FileSize>4386816</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-AdminAPI.msi</URL>
        <File>MgmtSvc-AdminAPI.msi</File>
        <FileSize>4247552</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-TenantAPI.msi</URL>
        <File>MgmtSvc-TenantAPI.msi</File>
        <FileSize>4231168</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-TenantPublicAPI.msi</URL>
        <File>MgmtSvc-TenantPublicAPI.msi</File>
        <FileSize>4280320</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-AdminSite.msi</URL>
        <File>MgmtSvc-AdminSite.msi</File>
        <FileSize>16695296</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-AuthSite.msi</URL>
        <File>MgmtSvc-AuthSite.msi</File>
        <FileSize>12460032</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-WindowsAuthSite.msi</URL>
        <File>MgmtSvc-WindowsAuthSite.msi</File>
        <FileSize>4222976</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-TenantSite.msi</URL>
        <File>MgmtSvc-TenantSite.msi</File>
        <FileSize>18145280</FileSize>
      </Download>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/8/7/2/87230A1A-D4CA-4925-B57B-8C27E5BD153C/MgmtSvc-ConfigSite.msi</URL>
        <File>MgmtSvc-ConfigSite.msi</File>
        <FileSize>7659520</FileSize>
      </Download>
      <Install Name="Windows Azure Pack 2013 - PowerShell API">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{09AAA3CE-A0B6-4B5D-AE51-43DF1C3EB192}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-PowerShellAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Web App Gallery Extension">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{AC29E1CB-2F30-475E-ADD8-B039DDA7DFE4}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-WebAppGallery.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30018;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30018 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - SQL Server Extension">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{F16B58A7-106E-4859-929C-519F45C2423F}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-SQLServer.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013SQLServerExtensionServerServerNLBName -eq $null) -or ($WindowsAzurePack2013SQLServerExtensionServerServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30010;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30010 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - MySQL Extension">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{A559BC28-C942-4A1F-AEE3-8D6143EBF635}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-MySQL.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013MySQLExtensionServerServerNLBName -eq $null) -or ($WindowsAzurePack2013MySQLExtensionServerServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30012;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30012 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Monitoring Extension">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{0A45C3A5-2265-4C0F-968D-EA0AE95B6D3D}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-Monitoring.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30020;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30020 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Usage Extension">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{6939C616-4589-4115-B0F9-A43164936EC4}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-Usage.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30022;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30022 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30024;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30024 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Admin API">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D52908B7-6A78-4BC7-8451-490C7BF88395}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-AdminAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30004;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30004 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Tenant API">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{763C3BFE-6A60-4D5D-AF6C-F167A5CF47DF}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-TenantAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013TenantAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013TenantAPIServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30005;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30005 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Tenant Public API">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{4D0102B7-74CD-4563-B475-45C7EC09E18C}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-TenantPublicAPI.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013TenantPublicAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013TenantPublicAPIServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30006;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30006 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Admin Site">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{2F31F894-4AC3-4A7F-9F18-D50A9B327123}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-AdminSite.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013AdminSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminSiteServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30091;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30091 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Tenant Site">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{CAF63E4C-6859-4EF1-B531-1FFED6DEB9B5}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-TenantSite.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013TenantSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013TenantSiteServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30081;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30081 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Tenant Authentication Site">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{D3AE936A-C357-4B66-870F-415FF6248424}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-AuthSite.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30071;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30071 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Admin Authentication Site">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{85EF5065-777C-410C-857A-041B386D476C}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-WindowsAuthSite.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>(($SSLCert -ne $null) -and ($SSLCert -ne "")) -and (($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq ""))</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30072;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30072 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 - Configuration Site">
        <Validation>
          <Type>ProductCode</Type>
          <Value>{32C316B4-3E22-4E4F-BF4C-BF76D38459D4}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>msiexec.exe</Executable>
            <Switches>
              <Switch>
                <Value>/q</Value>
              </Switch>
              <Switch>
                <Value>/i</Value>
              </Switch>
              <Switch>
                <Value>$TempPath\Installer\$WindowsAzurePack2013Source\MgmtSvc-ConfigSite.msi</Value>
              </Switch>
              <Switch>
                <Value>ALLUSERS=2</Value>
              </Switch>
            </Switches>
          </CommandLine>
          <CommandLine>
            <Condition>($SSLCert -ne $null) -and ($SSLCert -ne "")</Condition>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30101;</Value>
              </Switch>
              <Switch>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30101 -Value (Get-Item Cert:\LocalMachine\My\$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Admin API Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013AdminAPIServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminAPI).Configured)) {Initialize-MgmtSvcFeature -Name AdminAPI -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>\$WindowsAzurePack2013DatabaseInstance
                <Value>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name Monitoring).Configured)) {Initialize-MgmtSvcFeature -Name Monitoring -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WebAppGallery).Configured)) {Initialize-MgmtSvcFeature -Name WebAppGallery -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageCollector).Configured)) {Initialize-MgmtSvcFeature -Name UsageCollector -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name UsageService).Configured)) {Initialize-MgmtSvcFeature -Name UsageService -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name AdminAPI).Configured -and (Get-MgmtSvcFeature -Name Monitoring).Configured -and (Get-MgmtSvcFeature -Name WebAppGallery).Configured -and (Get-MgmtSvcFeature -Name UsageCollector).Configured -and (Get-MgmtSvcFeature -Name UsageService).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($WindowsAzurePack2013AdminGroup -ne "") -and ($WindowsAzurePack2013AdminGroup -ne $Null)</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($WindowsAzurePack2013AdminGroup -ne "") -and ($WindowsAzurePack2013AdminGroup -ne $Null)</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminGroup -ne "") -and ($WindowsAzurePack2013AdminGroup -ne $Null)</Condition>
                <Value>Add-MgmtSvcAdminUser -Principal '$WindowsAzurePack2013AdminGroup' -ConnectionString `$ManagementConnectionString;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.AntaresGeoMasterUri -Value 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/services/webspaces/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.RdfeAdminManagementServiceUri -Value 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.OnPremPortalConfiguration.RdfeAdminUri -Value 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.OnPremPortalConfiguration.RdfeProvisioningUri -Value 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (((Get-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.AntaresGeoMasterUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/services/webspaces/') -and ((Get-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.RdfeAdminManagementServiceUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/') -and ((Get-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.OnPremPortalConfiguration.RdfeAdminUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/') -and ((Get-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.OnPremPortalConfiguration.RdfeProvisioningUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004/')) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013AdminAPIServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30004;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30004 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
             <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30018;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30018 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30020;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30020 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30022;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30022 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-AdminAPI' -Protocol https -Port 30004) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-AdminAPI' -Protocol https -Port 30004;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-AdminAPI' -Protocol https -Port 30004 -HostHeader '$WindowsAzurePack2013AdminAPIServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-AdminAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-AdminAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-AdminAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-WebAppGallery' -Protocol https -Port 30018) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-WebAppGallery' -Protocol https -Port 30018;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-WebAppGallery' -Protocol https -Port 30018 -HostHeader '$WindowsAzurePack2013AdminAPIServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-WebAppGallery';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-WebAppGallery';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-WebAppGallery';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-Monitoring' -Protocol https -Port 30020) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-Monitoring' -Protocol https -Port 30020;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-Monitoring' -Protocol https -Port 30020 -HostHeader '$WindowsAzurePack2013AdminAPIServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-Monitoring';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-Monitoring';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-Monitoring';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-Usage' -Protocol https -Port 30022) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-Usage' -Protocol https -Port 30022;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-Usage' -Protocol https -Port 30022 -HostHeader '$WindowsAzurePack2013AdminAPIServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-Usage';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-Usage';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-Usage';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and $WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013AdminAPIServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013AdminAPIServer) -and $WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013AdminAPIServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013AdminAPIServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013AdminAPIServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAPIServer) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Tenant API Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013TenantAPIServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantAPI -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name TenantAPI).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAPIServer) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAPIServer) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAPIServer) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.RdfeUnifiedManagementServiceUri -Value 'https://$WindowsAzurePack2013TenantAPIServerNLBName`:30005/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAPIServer) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'TenantSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.RdfeUnifiedManagementServiceUri -Value 'https://$WindowsAzurePack2013TenantAPIServerNLBName`:30005/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAPIServer) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>If (((Get-MgmtSvcDatabaseSetting -Namespace 'AdminSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.RdfeUnifiedManagementServiceUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013TenantAPIServerNLBName`:30005/') -and ((Get-MgmtSvcDatabaseSetting -Namespace 'TenantSite' -Name Microsoft.Azure.Portal.Configuration.AppManagementConfiguration.RdfeUnifiedManagementServiceUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013TenantAPIServerNLBName`:30005/')) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013TenantAPIServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30005;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30005 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-TenantAPI' -Protocol https -Port 30005) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-TenantAPI' -Protocol https -Port 30005;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-TenantAPI' -Protocol https -Port 30005 -HostHeader '$WindowsAzurePack2013TenantAPIServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-TenantAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-TenantAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-TenantAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAPIServer) -and $WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013TenantAPIServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013TenantAPIServer) -and $WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013TenantAPIServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013TenantAPIServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013TenantAPIServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAPIServer) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Tenant Public API Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013TenantPublicAPIServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured)) {Initialize-MgmtSvcFeature -Name TenantPublicAPI -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name TenantPublicAPI).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantPublicAPIServer) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantPublicAPIServer) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantPublicAPIServer) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcDatabaseSetting -Namespace 'TenantSite' -Name Microsoft.WindowsAzure.Server.Configuration.TenantPortalConfiguration.PublicRdfeProvisioningUri  -Value 'https://$WindowsAzurePack2013TenantPublicAPIServerNLBName`:30006/' -ConnectionString `$ConnectionString -Force;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantPublicAPIServer) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>If (((Get-MgmtSvcDatabaseSetting -Namespace 'TenantSite' -Name Microsoft.WindowsAzure.Server.Configuration.TenantPortalConfiguration.PublicRdfeProvisioningUri -ConnectionString `$ConnectionString).Value -eq 'https://$WindowsAzurePack2013TenantPublicAPIServerNLBName`:30006/')) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013TenantPublicAPIServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30006;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30006 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-TenantPublicAPI' -Protocol https -Port 30006) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-TenantPublicAPI' -Protocol https -Port 30006;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-TenantPublicAPI' -Protocol https -Port 30006 -HostHeader '$WindowsAzurePack2013TenantPublicAPIServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-TenantPublicAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-TenantPublicAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-TenantPublicAPI';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantPublicAPIServer) -and $WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013TenantPublicAPIServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013TenantPublicAPIServer) -and $WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013TenantPublicAPIServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013TenantPublicAPIServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013TenantPublicAPIServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantPublicAPIServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantPublicAPIServer) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantPublicAPIServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 SQL Server Extension Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013SQLServerExtensionServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name SQLServer).Configured)) {Initialize-MgmtSvcFeature -Name SQLServer -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name SQLServer).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013SQLServerExtensionServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30010;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30010 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-SQLServer' -Protocol https -Port 30010) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-SQLServer' -Protocol https -Port 30010;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-SQLServer' -Protocol https -Port 30010 -HostHeader '$WindowsAzurePack2013SQLServerExtensionServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-SQLServer';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-SQLServer';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-SQLServer';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013SQLServerExtensionServer) -and $WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013SQLServerExtensionServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013SQLServerExtensionServer) -and $WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013SQLServerExtensionServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013SQLServerExtensionServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013SQLServerExtensionServer.role'</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013SQLServerExtensionServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 MySQL Extension Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013MySQLExtensionServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name MySQL).Configured)) {Initialize-MgmtSvcFeature -Name MySQL -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name MySQL).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013MySQLExtensionServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30012;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30012 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-MySQL' -Protocol https -Port 30012) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-MySQL' -Protocol https -Port 30012;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-MySQL' -Protocol https -Port 30012 -HostHeader '$WindowsAzurePack2013MySQLExtensionServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-MySQL';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-MySQL';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-MySQL';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013MySQLExtensionServer) -and $WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013MySQLExtensionServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013MySQLExtensionServer) -and $WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013MySQLExtensionServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013MySQLExtensionServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013MySQLExtensionServer.role'</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013MySQLExtensionServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Admin Site Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013AdminSiteServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AdminSite).Configured)) {Initialize-MgmtSvcFeature -Name AdminSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer'\$WindowsAzurePack2013DatabaseInstance -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name AdminSite).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcFqdn -Namespace 'AdminSite' -FQDN '$WindowsAzurePack2013AdminSiteServerNLBName' -ConnectionString `$ConnectionString -Verbose;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>If ((Get-MgmtSvcFqdn -Namespace 'AdminSite' -ConnectionString `$ConnectionString).FullyQualifiedDomainName -eq '$WindowsAzurePack2013AdminSiteServerNLBName') {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013AdminSiteServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30091;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30091 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-AdminSite' -Protocol https -Port 30091) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-AdminSite' -Protocol https -Port 30091;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-AdminSite' -Protocol https -Port 30091 -HostHeader '$WindowsAzurePack2013AdminSiteServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-AdminSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-AdminSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-AdminSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminSiteServer) -and $WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013AdminSiteServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013AdminSiteServer) -and $WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013AdminSiteServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013AdminSiteServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcIdentityProviderSettings -Target 'Windows' -MetadataEndpoint 'https://$WindowsAzurePack2013AdminSiteServerNLBName`:30091/FederationMetadata/2007-06/FederationMetadata.xml' -PortalConnectionString `$PortalConnectionString -ManagementConnectionString `$ManagementConnectionString -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013AdminSiteServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminSiteServer) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Tenant Site Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013TenantSiteServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name TenantSite).Configured)) {Initialize-MgmtSvcFeature -Name TenantSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name TenantSite).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcFqdn -Namespace 'TenantSite' -FQDN '$WindowsAzurePack2013TenantSiteServerNLBName' -ConnectionString `$ConnectionString -Verbose;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>If ((Get-MgmtSvcFqdn -Namespace 'TenantSite' -ConnectionString `$ConnectionString).FullyQualifiedDomainName -eq '$WindowsAzurePack2013TenantSiteServerNLBName') {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013TenantSiteServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30081;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30081 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-TenantSite' -Protocol https -Port 30081) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-TenantSite' -Protocol https -Port 30081;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-TenantSite' -Protocol https -Port 30081 -HostHeader '$WindowsAzurePack2013TenantSiteServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-TenantSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-TenantSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-TenantSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantSiteServer) -and $WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013TenantSiteServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013TenantSiteServer) -and $WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013TenantSiteServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013TenantSiteServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcIdentityProviderSettings -Target 'Membership' -MetadataEndpoint 'https://$WindowsAzurePack2013TenantSiteServerNLBName`:30081/FederationMetadata/2007-06/FederationMetadata.xml' -PortalConnectionString `$PortalConnectionString -ManagementConnectionString `$ManagementConnectionString -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013TenantSiteServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantSiteServer) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Admin Authentication Site Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013AdminAuthenticationSiteServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured)) {Initialize-MgmtSvcFeature -Name WindowsAuthSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name WindowsAuthSite).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminGroup -ne "") -and ($WindowsAzurePack2013AdminGroup -ne $Null)</Condition>
                <Value>Set-MgmtSvcSetting -Namespace WindowsAuthSite -Name LoginSecurityGroup -Value '$WindowsAzurePack2013AdminGroup';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcFqdn -Namespace 'WindowsAuthSite' -FQDN '$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName' -ConnectionString `$ConnectionString -Verbose;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If ((Get-MgmtSvcFqdn -Namespace 'WindowsAuthSite' -ConnectionString `$ConnectionString).FullyQualifiedDomainName -eq '$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName') {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30072;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30072 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-WindowsAuthSite' -Protocol https -Port 30072) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-WindowsAuthSite' -Protocol https -Port 30072;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-WindowsAuthSite' -Protocol https -Port 30072 -HostHeader '$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-WindowsAuthSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-WindowsAuthSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-WindowsAuthSite';</Value>
              </Switch>-
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and $WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013AdminAuthenticationSiteServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013AdminAuthenticationSiteServer) -and $WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013AdminAuthenticationSiteServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013AdminAuthenticationSiteServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcRelyingPartySettings -Target 'Admin' -MetadataEndpoint 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/FederationMetadata/2007-06/FederationMetadata.xml' -PortalConnectionString `$PortalConnectionString -ManagementConnectionString `$ManagementConnectionString -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013AdminAuthenticationSiteServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013AdminAuthenticationSiteServer) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Tenant Authentication Site Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013TenantAuthenticationSiteServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -eq 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '********' -EnableCeip Yes -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($CustomerExperienceImprovementProgram -ne 1)</Condition>
                <Value>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '$WindowsAzurePack2013ConfigStorePassphrase' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Value>
                <Log>If (!((Get-MgmtSvcFeature -Name AuthSite).Configured)) {Initialize-MgmtSvcFeature -Name AuthSite -Passphrase '********' -EnableCeip No -Server '$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' -Verbose};</Log>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcFeature -Name AuthSite).Configured) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -eq "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$PortalConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.PortalConfigStore' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013DatabaseInstance -ne "MSSQLSERVER") -and ($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$ManagementConnectionString = 'Data Source=$WindowsAzurePack2013DatabaseServer\$WindowsAzurePack2013DatabaseInstance' + [char]59 + 'Initial Catalog=Microsoft.MgmtSvc.Store' + [char]59 + 'Integrated Security=True';</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcFqdn -Namespace 'AuthSite' -FQDN '$WindowsAzurePack2013TenantAuthenticationSiteServerNLBName' -ConnectionString `$ConnectionString -Verbose;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If ((Get-MgmtSvcFqdn -Namespace 'AuthSite' -ConnectionString `$ConnectionString).FullyQualifiedDomainName -eq '$WindowsAzurePack2013TenantAuthenticationSiteServerNLBName') {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module PKI)) {Import-Module PKI};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If (!(Get-Module WebAdministration)) {Import-Module WebAdministration};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$CertQuery = Get-ChildItem -Path 'Cert:\LocalMachine\My' | Where-Object {`$_.Subject -eq 'CN=$WindowsAzurePack2013TenantAuthenticationSiteServerNLBName'} | Where-Object {`$_.EnhancedKeyUsageList.ObjectId -eq '1.3.6.1.5.5.7.3.1'};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If ((`$CertQuery.Count -eq 1) -and (`$CertQuery[0] -ne `$null)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$SSLCert = `$CertQuery[0].Thumbprint;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Remove-Item IIS:\SslBindings\0.0.0.0!30071;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>New-Item -Path IIS:\SslBindings\0.0.0.0!30071 -Value (Get-Item Cert:\LocalMachine\My\`$SSLCert);</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>If (Get-WebBinding -Name 'MgmtSvc-AuthSite' -Protocol https -Port 30071) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Remove-WebBinding -Name 'MgmtSvc-AuthSite' -Protocol https -Port 30071;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>New-WebBinding -Name 'MgmtSvc-AuthSite' -Protocol https -Port 30071 -HostHeader '$WindowsAzurePack2013TenantAuthenticationSiteServerNLBName';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Restart-WebAppPool -Name 'MgmtSvc-AuthSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Stop-Website -Name 'MgmtSvc-AuthSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Start-Website -Name 'MgmtSvc-AuthSite';</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and $WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013TenantAuthenticationSiteServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013TenantAuthenticationSiteServer) -and $WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013TenantAuthenticationSiteServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue).Name.Split(':')[0] -eq '$WindowsAzurePack2013TenantAuthenticationSiteServerNLBIPv4') {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>Set-MgmtSvcRelyingPartySettings -Target 'Tenant' -MetadataEndpoint 'https://$WindowsAzurePack2013TenantAuthenticationSiteServerNLBName`:30071/FederationMetadata/2007-06/FederationMetadata.xml' -PortalConnectionString `$PortalConnectionString -ManagementConnectionString `$ManagementConnectionString -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013TenantAuthenticationSiteServer.role';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013TenantAuthenticationSiteServer) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Resource Provider NLB Configuration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013ResourceProviderNLBConfiguration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcAdmin)) {Import-Module -Name MgmtSvcAdmin};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry = 0;</Value>
              </Switch>
              <Switch>
                <Value>While (!(`$Token) -and (`$TokenTry -lt 5)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServer`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Token)) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 5;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$RP = Get-MgmtSvcResourceProviderConfiguration -Name 'monitoring';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.AdminEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30020/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.TenantEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30020/';</Value>
              </Switch>
              <Switch>
                <Value>Set-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation -Confirm:`$false;</Value>
              </Switch>
              <Switch>
                <Value>`$RP = Get-MgmtSvcResourceProviderConfiguration -Name 'marketplace';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.AdminEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30018/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.TenantEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30018/subscriptions';</Value>
              </Switch>
              <Switch>
                <Value>Set-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation -Confirm:`$false;</Value>
              </Switch>
              <Switch>
                <Value>`$RP = Get-MgmtSvcResourceProviderConfiguration -Name 'usageservice';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.AdminEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30022/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.TenantEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30022/';</Value>
              </Switch>
              <Switch>
                <Value>Set-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation -Confirm:`$false;</Value>
              </Switch>
              <Switch>
                <Value>If (((Get-MgmtSvcResourceProviderConfiguration -Name 'monitoring').AdminEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30020/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'monitoring').TenantEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30020/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'marketplace').AdminEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30018/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'marketplace').TenantEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30018/subscriptions') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'usageservice').AdminEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30022/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'usageservice').TenantEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30022/')) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013ResourceProviderNLBConfiguration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 SQL Server Resource Provider NLB Configuration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013SQLServerResourceProviderNLBConfiguration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcAdmin)) {Import-Module -Name MgmtSvcAdmin};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry = 0;</Value>
              </Switch>
              <Switch>
                <Value>While (!(`$Token) -and (`$TokenTry -lt 5)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServer`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Token)) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 5;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$RP = Get-MgmtSvcResourceProviderConfiguration -Name 'sqlservers';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.AdminEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.TenantEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/subscriptions';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.UsageEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.NotificationEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/';</Value>
              </Switch>
              <Switch>
                <Value>Set-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation -Confirm:`$false;</Value>
              </Switch>
              <Switch>
                <Value>If (((Get-MgmtSvcResourceProviderConfiguration -Name 'sqlservers').AdminEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'sqlservers').TenantEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/subscriptions') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'sqlservers').UsageEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'sqlservers').NotificationEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013SQLServerExtensionServerNLBName`:30010/')) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013SQLServerResourceProviderNLBConfiguration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 MySQL Resource Provider NLB Configuration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013MySQLResourceProviderNLBConfiguration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcAdmin)) {Import-Module -Name MgmtSvcAdmin};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry = 0;</Value>
              </Switch>
              <Switch>
                <Value>While (!(`$Token) -and (`$TokenTry -lt 5)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServer`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Token)) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 5;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$RP = Get-MgmtSvcResourceProviderConfiguration -Name 'mysqlservers';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.AdminEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.TenantEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/subscriptions';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.UsageEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/';</Value>
              </Switch>
              <Switch>
                <Value>`$RP.NotificationEndpoint.ForwardingAddress = 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/';</Value>
              </Switch>
              <Switch>
                <Value>Set-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation -Confirm:`$false;</Value>
              </Switch>
              <Switch>
                <Value>If (((Get-MgmtSvcResourceProviderConfiguration -Name 'mysqlservers').AdminEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'mysqlservers').TenantEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/subscriptions') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'mysqlservers').UsageEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/') -and ((Get-MgmtSvcResourceProviderConfiguration -Name 'mysqlservers').NotificationEndpoint.ForwardingAddress -eq 'https://$WindowsAzurePack2013MySQLExtensionServerNLBName`:30012/')) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013MySQLResourceProviderNLBConfiguration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Admin Web Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013AdminWebShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminSiteServerNLBName -eq "")</Condition>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Windows Azure Pack Admin' + [char]39 + ' -URL ' + [char]39 + 'https://$WindowsAzurePack2013AdminSiteServer`:30091/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Windows\System32\url.dll' + [char]39 + ' -IconIndex ' + [char]39 + '5' + [char]39;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminSiteServerNLBName -ne "")</Condition>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Windows Azure Pack Admin' + [char]39 + ' -URL ' + [char]39 + 'https://$WindowsAzurePack2013AdminSiteServerNLBName`:30091/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Windows\System32\url.dll' + [char]39 + ' -IconIndex ' + [char]39 + '5' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013AdminWebShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Tenant Web Shell Setup">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013TenantWebShellSetup.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path $SystemDrive\Users\Default\Desktop\ShellSetup.ps1)) {</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = @();</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Pin (`$Action,`$Type,`$Scope,`$Folder,`$Application) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Scope) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'User' + [char]39 + ' {`$Root = `$Shell.NameSpace(2)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Public' + [char]39 + ' {`$Root = `$Shell.NameSpace(23)}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    Switch (`$Action) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Pin' + [char]39 + ' {`$Text = ' + [char]39 + 'Pin to ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        ' + [char]39 + 'Unpin' + [char]39 + ' {`$Text = ' + [char]39 + 'Unpin from ' + [char]39 + ' + `$Type}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Path -ne ' + [char]39 + [char]39 + ') {`$Path = `$Root.Self.Path + ' + [char]39 + '\' + [char]39 + ' + `$Folder}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    `$Folder = `$Shell.NameSpace(`$Path)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    try {`$Item = `$Folder.ParseName(' + [char]34 + '`$Application.lnk' + [char]34 + ')} catch {`$Item = `$null}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    If (`$Item -ne `$null) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        `$Item.Verbs() | ForEach-Object {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            `$Verb = `$_';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            Switch (`$Type) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Taskbar' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '                ' + [char]39 + 'Start' + [char]39 + ' {If (`$Verb.Name.Replace(' + [char]39 + [char]38 + [char]39 + ',' + [char]39 + [char]39 + ') -eq `$Text) {`$Verb.DoIt()}}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '            }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '        }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '    }';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'Function Link (`$Link,`$URL,`$Prop3,`$Icon,`$IconIndex) {';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Favorites = (New-Object -ComObject Shell.Application).NameSpace(6).Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[DEFAULT]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'BASEURL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[{000214A0-0000-0000-C000-000000000046}]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'Prop3=`$Prop3' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + '[InternetShortcut]' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IDList=' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'URL=`$URL' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconFile=`$Icon' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += [char]34 + 'IconIndex=`$IconIndex' + [char]34 + ' | Out-File ' + [char]34 + '`$Favorites\Links\`$Link.url' + [char]34 + ' -Append -Encoding ascii';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Shell = New-Object -ComObject Shell.Application';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$Desktop = `$Shell.NameSpace(0)';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += '`$DesktopPath = `$Desktop.Self.Path';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup += 'If (Test-Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1'+ [char]34 + ') {Remove-Item -Path ' + [char]34 + '`$DesktopPath\ShellSetup.ps1' + [char]34 + '}';</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup = Get-Content $SystemDrive\Users\Default\Desktop\ShellSetup.ps1;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013TenantSiteServerNLBName -eq "")</Condition>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Windows Azure Pack Tenant' + [char]39 + ' -URL ' + [char]39 + 'https://$WindowsAzurePack2013TenantSiteServer`:30081/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Windows\System32\url.dll' + [char]39 + ' -IconIndex ' + [char]39 + '5' + [char]39;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013TenantSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013TenantSiteServerNLBName -ne "")</Condition>
                <Value>`$ShellSetup += 'Link -Link ' + [char]39 + 'Windows Azure Pack Tenant' + [char]39 + ' -URL ' + [char]39 + 'https://$WindowsAzurePack2013TenantSiteServerNLBName`:30081/' + [char]39 + ' -Prop3 ' + [char]39 + '19,2' + [char]39 + ' -Icon ' + [char]39 + '$SystemDrive\Windows\System32\url.dll' + [char]39 + ' -IconIndex ' + [char]39 + '5' + [char]39;</Value>
              </Switch>
              <Switch>
                <Value>`$ShellSetup | Out-File $SystemDrive\Users\Default\Desktop\ShellSetup.ps1 -Encoding ASCII;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013TenantWebShellSetup.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="Windows Azure Pack 2013 Web Sites">
      <Variable Name="WindowsAzurePack2013WebSitesSource" Value="WindowsAzurePack2013WebSites" />
      <SourceFolder>$WindowsAzurePack2013WebSitesSource</SourceFolder>
      <Download>
        <Type>Download</Type>
        <URL>http://download.microsoft.com/download/D/9/4/D9497A0A-4B5B-4D13-A52F-20ABED41B64E/TODC/WebSitesFeed.msi</URL>
        <File>WebSitesFeed.msi</File>
        <FileSize>978944</FileSize>
      </Download>
      <Download>
        <Type>DownloadRun</Type>
        <URL>http://download.microsoft.com/download/D/9/4/D9497A0A-4B5B-4D13-A52F-20ABED41B64E/TODC/WebSites0.9.0.xml</URL>
        <File>WebSites0.9.0.xml</File>
        <Run>
          <ExistingFile>installers\HostingController\9CBA4AF59448354D1298C77017EC2AD26B31A6D0\webhosting.msi</ExistingFile>
          <FileSize>6852608</FileSize>
          <Command>$env:ProgramFiles\Microsoft\Web Platform Installer\WebPICmd.exe</Command>
          <Argument>/offline /products:HostingController,HostingFrontEndRole,HostingWebRole,HostingPublishingRole,HostingManagementServerRole,HostingAdministration,HostingFileServerRole,HostingWebPlatformInstaller /Path:$Download\$WindowsAzurePack2013WebSitesSource /XML:$Download\Download\$WindowsAzurePack2013WebSitesSource\WebSites0.9.0.xml /Language:en</Argument>
        </Run>
      </Download>
      <Install Name="Windows Azure Pack 2013 Web Sites File Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesFileServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Value>Set-Item WSMan:\localhost\Shell\MaxConcurrentUsers -Value 10;</Value>
              </Switch>
              <Switch>
                <Value>Set-Item WSMan:\localhost\Shell\MaxShellsPerUser -Value 50;</Value>
              </Switch>
              <Switch>
                <Value>Set-Item WSMan:\localhost\Shell\MaxProcessesPerShell -Value 5000;</Value>
              </Switch>
              <Switch>
                <Value>Set-Item WSMan:\localhost\Shell\IdleTimeout -Value 10000;</Value>
              </Switch>
              <Switch>
                <Value>If (((Get-Item WSMan:\localhost\Shell\MaxConcurrentUsers).Value -eq 10) -and ((Get-Item WSMan:\localhost\Shell\MaxShellsPerUser).Value -eq 50) -and ((Get-Item WSMan:\localhost\Shell\MaxProcessesPerShell).Value -eq 5000) -and ((Get-Item WSMan:\localhost\Shell\IdleTimeout).Value -eq 10000)) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path '$WindowsAzurePack2013WebSitesContentSharePath')) {New-Item -Path '$WindowsAzurePack2013WebSitesContentSharePath' -ItemType Directory};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Test-Path '$WindowsAzurePack2013WebSitesCertificateSharePath')) {New-Item -Path '$WindowsAzurePack2013WebSitesCertificateSharePath' -ItemType Directory};</Value>
              </Switch>
              <Switch>
                <Value>If ((Test-Path '$WindowsAzurePack2013WebSitesContentSharePath') -and (Test-Path '$WindowsAzurePack2013WebSitesCertificateSharePath')) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SmbShare -Name '$WindowsAzurePack2013WebSitesContentShareName' -ErrorAction SilentlyContinue)) {New-SmbShare -Name '$WindowsAzurePack2013WebSitesContentShareName' -Path '$WindowsAzurePack2013WebSitesContentSharePath' -FullAccess Everyone};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SmbShare -Name '$WindowsAzurePack2013WebSitesCertificateShareName' -ErrorAction SilentlyContinue)) {New-SmbShare -Name '$WindowsAzurePack2013WebSitesCertificateShareName' -Path '$WindowsAzurePack2013WebSitesCertificateSharePath' -FullAccess Everyone};</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-SmbShare -Name '$WindowsAzurePack2013WebSitesContentShareName') -and (Get-SmbShare -Name '$WindowsAzurePack2013WebSitesCertificateShareName')) {</Value>
              </Switch>
              <Switch>
                <Value>`$ACL = New-Object System.Security.AccessControl.DirectorySecurity;</Value>
              </Switch>
              <Switch>
                <Value>`$User = New-Object System.Security.Principal.NTAccount('BUILTIN\Administrators');</Value>
              </Switch>
              <Switch>
                <Value>`$Rights = [System.Security.AccessControl.FileSystemRights]'FullControl';</Value>
              </Switch>
              <Switch>
                <Value>`$InheritanceFlag = [System.Security.AccessControl.InheritanceFlags]'ContainerInherit,ObjectInherit';</Value>
              </Switch>
              <Switch>
                <Value>`$PropagationFlag = [System.Security.AccessControl.PropagationFlags]::None;</Value>
              </Switch>
              <Switch>
                <Value>`$Type =[System.Security.AccessControl.AccessControlType]::Allow;</Value>
              </Switch>
              <Switch>
                <Value>`$ACE = New-Object System.Security.AccessControl.FileSystemAccessRule (`$User, `$Rights, `$InheritanceFlag, `$PropagationFlag, `$Type);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.AddAccessRule(`$ACE);</Value>
              </Switch>
              <Switch>
                <Value>`$User = New-Object System.Security.Principal.NTAccount('$WindowsAzurePack2013WebSitesCertificateShareUserServiceAccount');</Value>
              </Switch>
              <Switch>
                <Value>`$Rights = [System.Security.AccessControl.FileSystemRights]'ReadAndExecute,Synchronize';</Value>
              </Switch>
              <Switch>
                <Value>`$InheritanceFlag = [System.Security.AccessControl.InheritanceFlags]'ContainerInherit,ObjectInherit';</Value>
              </Switch>
              <Switch>
                <Value>`$PropagationFlag = [System.Security.AccessControl.PropagationFlags]::None;</Value>
              </Switch>
              <Switch>
                <Value>`$Type =[System.Security.AccessControl.AccessControlType]::Allow;</Value>
              </Switch>
              <Switch>
                <Value>`$ACE = New-Object System.Security.AccessControl.FileSystemAccessRule (`$User, `$Rights, `$InheritanceFlag, `$PropagationFlag, `$Type);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.SetAccessRuleProtection(`$true,`$false);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.AddAccessRule(`$ACE);</Value>
              </Switch>
              <Switch>
                <Value>Set-Acl -Path '$WindowsAzurePack2013WebSitesCertificateSharePath' -AclObject `$ACL;</Value>
              </Switch>
              <Switch>
                <Value>`$ACL = New-Object System.Security.AccessControl.DirectorySecurity;</Value>
              </Switch>
              <Switch>
                <Value>`$User = New-Object System.Security.Principal.NTAccount('Everyone');</Value>
              </Switch>
              <Switch>
                <Value>`$Rights = [System.Security.AccessControl.FileSystemRights]'ReadData,ReadExtendedAttributes,ReadAttributes,Synchronize';</Value>
              </Switch>
              <Switch>
                <Value>`$InheritanceFlag = [System.Security.AccessControl.InheritanceFlags]'ContainerInherit,ObjectInherit';</Value>
              </Switch>
              <Switch>
                <Value>`$PropagationFlag = [System.Security.AccessControl.PropagationFlags]'InheritOnly';</Value>
              </Switch>
              <Switch>
                <Value>`$Type =[System.Security.AccessControl.AccessControlType]::Allow;</Value>
              </Switch>
              <Switch>
                <Value>`$ACE = New-Object System.Security.AccessControl.FileSystemAccessRule (`$User, `$Rights, `$InheritanceFlag, `$PropagationFlag, `$Type);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.AddAccessRule(`$ACE);</Value>
              </Switch>
              <Switch>
                <Value>`$User = New-Object System.Security.Principal.NTAccount('BUILTIN\Administrators');</Value>
              </Switch>
              <Switch>
                <Value>`$Rights = [System.Security.AccessControl.FileSystemRights]'FullControl';</Value>
              </Switch>
              <Switch>
                <Value>`$InheritanceFlag = [System.Security.AccessControl.InheritanceFlags]'ContainerInherit,ObjectInherit';</Value>
              </Switch>
              <Switch>
                <Value>`$PropagationFlag = [System.Security.AccessControl.PropagationFlags]::None;</Value>
              </Switch>
              <Switch>
                <Value>`$Type =[System.Security.AccessControl.AccessControlType]::Allow;</Value>
              </Switch>
              <Switch>
                <Value>`$ACE = New-Object System.Security.AccessControl.FileSystemAccessRule (`$User, `$Rights, `$InheritanceFlag, `$PropagationFlag, `$Type);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.AddAccessRule(`$ACE);</Value>
              </Switch>
              <Switch>
                <Value>`$User = New-Object System.Security.Principal.NTAccount('$WindowsAzurePack2013WebSitesFileShareOwnerServiceAccount');</Value>
              </Switch>
              <Switch>
                <Value>`$Rights = [System.Security.AccessControl.FileSystemRights]'Modify,Synchronize';</Value>
              </Switch>
              <Switch>
                <Value>`$InheritanceFlag = [System.Security.AccessControl.InheritanceFlags]'ContainerInherit,ObjectInherit';</Value>
              </Switch>
              <Switch>
                <Value>`$PropagationFlag = [System.Security.AccessControl.PropagationFlags]::None;</Value>
              </Switch>
              <Switch>
                <Value>`$Type =[System.Security.AccessControl.AccessControlType]::Allow;</Value>
              </Switch>
              <Switch>
                <Value>`$ACE = New-Object System.Security.AccessControl.FileSystemAccessRule (`$User, `$Rights, `$InheritanceFlag, `$PropagationFlag, `$Type);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.AddAccessRule(`$ACE);</Value>
              </Switch>
              <Switch>
                <Value>`$User = New-Object System.Security.Principal.NTAccount('$WindowsAzurePack2013WebSitesFileShareUserServiceAccount');</Value>
              </Switch>
              <Switch>
                <Value>`$Rights = [System.Security.AccessControl.FileSystemRights]'ExecuteFile,ReadAttributes,Synchronize';</Value>
              </Switch>
              <Switch>
                <Value>`$InheritanceFlag = [System.Security.AccessControl.InheritanceFlags]'ContainerInherit';</Value>
              </Switch>
              <Switch>
                <Value>`$PropagationFlag = [System.Security.AccessControl.PropagationFlags]::None;</Value>
              </Switch>
              <Switch>
                <Value>`$Type =[System.Security.AccessControl.AccessControlType]::Allow;</Value>
              </Switch>
              <Switch>
                <Value>`$ACE = New-Object System.Security.AccessControl.FileSystemAccessRule (`$User, `$Rights, `$InheritanceFlag, `$PropagationFlag, `$Type);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.SetAccessRuleProtection(`$true,`$false);</Value>
              </Switch>
              <Switch>
                <Value>`$ACL.AddAccessRule(`$ACE);</Value>
              </Switch>
              <Switch>
                <Value>Set-Acl -Path '$WindowsAzurePack2013WebSitesContentSharePath' -AclObject `$ACL;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesFileServer.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Controller Server">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesControllerServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>robocopy.exe '$TempPath\Installer\$WindowsAzurePack2013WebSitesSource' '$SystemDrive\inetpub\WebSitesOffline' /e;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$nsMgr = New-Object System.Xml.XmlNamespaceManager (New-Object System.Xml.NameTable);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$nsMgr.AddNamespace('a', 'http://www.w3.org/2005/Atom');</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>function GetAbsoluteLink ([string] `$relativePath, [string] `$httpPathToDirWithFeedXml) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$escapedUriStr = [System.Uri]::EscapeUriString(`$httpPathToDirWithFeedXml + `$relativePath);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$uri = New-Object System.Uri (`$escapedUriStr);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>return `$uri.AbsoluteUri;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>function ConvertRelativeLinksToAbsoluteLinks ([string] `$feedFilePath, [string] `$httpPathToDirWithFeedXml) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>if (!`$httpPathToDirWithFeedXml.EndsWith('/')) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$httpPathToDirWithFeedXml = `$httpPathToDirWithFeedXml + '/';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>[xml] `$feedXml = Get-Content `$feedFilePath;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>foreach (`$entry in `$feedXml.feed.entry) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>if (`$entry.images.relativeIconUrl -ne `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$entry.images.icon = [string] (GetAbsoluteLink `$entry.images.relativeIconUrl `$httpPathToDirWithFeedXml);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$removedNode = `$entry.images.RemoveChild(`$entry.images.SelectSingleNode('a:relativeIconUrl', `$nsMgr));</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>foreach (`$installer in `$entry.installers.installer) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>if (`$installer.relativeEulaURL -ne `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$installer.eulaURL = [string] (GetAbsoluteLink `$installer.relativeEulaURL `$httpPathToDirWithFeedXml);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$removedNode = `$installer.RemoveChild(`$installer.SelectSingleNode('a:relativeEulaURL', `$nsMgr));</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>foreach (`$installerFile in `$installer.installerFile) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>if (`$installerFile.relativeInstallerURL -ne `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$installerFile.installerURL = [string] (GetAbsoluteLink `$installerFile.relativeInstallerURL `$httpPathToDirWithFeedXml);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$removedNode = `$installerFile.RemoveChild(`$installerFile.SelectSingleNode('a:relativeInstallerURL', `$nsMgr));</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$feedXml.Save(`$feedFilePath);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>function GetHash([string] `$filePath) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>if (![System.IO.Path]::IsPathRooted(`$filePath)) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$curDir = (Get-Location).Path;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$filePath = [System.IO.Path]::Combine(`$curDir, `$filePath);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>if (![System.IO.File]::Exists(`$filePath)) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>Write-Error 'The file `$filePath was not found.';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>return;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$sha1 = New-Object System.Security.Cryptography.SHA1Managed;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$allBytes = [System.IO.File]::ReadAllBytes(`$filePath);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$hashBytes = `$sha1.ComputeHash(`$allBytes);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$hashWithDashes = [System.BitConverter]::ToString(`$hashBytes);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>return `$hashWithDashes.Replace('-', [string]::Empty);</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>New-WebApplication -Name 'WebSitesFeed' -Site 'Default Web Site' -PhysicalPath '$SystemDrive\inetpub\WebSitesOffline' -ApplicationPool DefaultAppPool -Force;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>Add-WebConfiguration //staticContent -Value @{fileExtension='.msp';mimeType='application/octet-stream'};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>Add-WebConfiguration //staticContent -Value @{fileExtension='.msu';mimeType='application/octet-stream'};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>Add-WebConfiguration //staticContent -Value @{fileExtension='.tmp';mimeType='text/plain'};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>Add-WebConfiguration //staticContent -Value @{fileExtension='.';mimeType='text/plain'};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>ConvertRelativeLinksToAbsoluteLinks '$SystemDrive\inetpub\WebSitesOffline\feeds\latest\WebSites0.9.0.xml' 'http://localhost/WebSitesFeed/feeds/latest/';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$Hash = GetHash '$SystemDrive\inetpub\WebSitesOffline\feeds\latest\WebSites0.9.0.xml';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -eq "True"</Condition>
                <Value>`$Feed = 'http://localhost/WebSitesFeed/feeds/latest/WebSites0.9.0.xml';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -ne "True"</Condition>
                <Value>`$Hash = '826363D220C6EF0D8DBF36FA63172A339D16C268';</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesOfflineFeed -ne "True"</Condition>
                <Value>`$Feed = 'http://go.microsoft.com/?linkid=9837345';</Value>
              </Switch>
              <Switch>
                <Value>`$ArgumentList = '/q /i $TempPath\Installer\$WindowsAzurePack2013WebSitesSource\WebSitesFeed.msi WEBSITES_FEED=' + `$Feed + ' FEED_HASH=' + `$Hash + ' FEED_FILE_NAME=WebSites0.9.0.xml WEBSITES_UPGRADE_ACTIONS=None';</Value>
              </Switch>
              <Switch>
                <Value>Start-Process -FilePath 'msiexec.exe'-ArgumentList `$ArgumentList -NoNewWindow -Wait;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WmiObject -Class Win32_Product | Where-Object {`$_.IdentifyingNumber -eq '{7DE9D988-C892-43A6-884B-74A5008D6018}'}) {</Value>
              </Switch>
              <Switch>
                <Value>. '$SystemDrive\Program Files\IIS\Microsoft Web Sites\Feed\WebSitesSetupHelper.ps1' -actions CreateOrUpdateFeed -mainFeed `$Feed -mainFeedFileName WebSites0.9.0.xml -mainFeedHash `$Hash -feedVersion 2.0-7.5.10274.0;</Value>
              </Switch>
              <Switch>
                <Value>. '$SystemDrive\Program Files\IIS\Microsoft Web Sites\Feed\WebSitesSetupHelper.ps1' -actions InstallController;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WmiObject -Class Win32_Product | Where-Object {`$_.IdentifyingNumber -eq '{DCB7E1BD-2D6C-43BE-9A27-3DD6B2423C32}'}) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>`$ControllerInitializationSettings = @{</Value>
              </Switch>
              <Switch>
                <Value>Hosting = 'server=$WindowsAzurePack2013WebSitesDatabaseServer;database=Hosting;uid=sa;pwd=$WindowsAzurePack2013WebSitesDatabaseSQLSAPassword;';</Value>
                <Log>Hosting = 'server=$WindowsAzurePack2013WebSitesDatabaseServer;database=Hosting;uid=sa;pwd=********;';</Log>
              </Switch>
              <Switch>
                <Value>ResourceMetering = 'server=$WindowsAzurePack2013WebSitesDatabaseServer;database=ResourceMetering;uid=sa;pwd=$WindowsAzurePack2013WebSitesDatabaseSQLSAPassword;';</Value>
                <Log>ResourceMetering = 'server=$WindowsAzurePack2013WebSitesDatabaseServer;database=ResourceMetering;uid=sa;pwd=********;';</Log>
              </Switch>
              <Switch>
                <Value>DNSSuffix = '$WindowsAzurePack2013WebSitesDNSSuffix';</Value>
              </Switch>
              <Switch>
                <Value>CloudAdminUserName = '$WindowsAzurePack2013WebSitesCloudAdmin';</Value>
              </Switch>
              <Switch>
                <Value>CloudAdminPassword = '$WindowsAzurePack2013WebSitesCloudAdminPassword';</Value>
                <Log>CloudAdminPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>ManagementServerAdminUserName = '$WindowsAzurePack2013WebSitesManagementServerAdminServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>ManagementServerAdminPassword = '$WindowsAzurePack2013WebSitesManagementServerAdminServiceAccountPassword';</Value>
                <Log>ManagementServerAdminPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>FileServerAdminUserName = '$WindowsAzurePack2013WebSitesFileServerAdminServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>FileServerAdminPassword = '$WindowsAzurePack2013WebSitesFileServerAdminServiceAccountPassword';</Value>
                <Log>FileServerAdminPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>FrontEndAdminUserName = '$WindowsAzurePack2013WebSitesFrontEndAdminServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>FrontEndAdminPassword = '$WindowsAzurePack2013WebSitesFrontEndAdminServiceAccountPassword';</Value>
                <Log>FrontEndAdminPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>PublisherAdminUserName = '$WindowsAzurePack2013WebSitesPublisherAdminServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>PublisherAdminPassword = '$WindowsAzurePack2013WebSitesPublisherAdminServiceAccountPassword';</Value>
                <Log>PublisherAdminPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>WorkerAdminUserName = '$WindowsAzurePack2013WebSitesWorkerAdminServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>WorkerAdminPassword = '$WindowsAzurePack2013WebSitesWorkerAdminServiceAccountPassword';</Value>
                <Log>WorkerAdminPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>FileServerName = '$WindowsAzurePack2013WebSitesFileServer';</Value>
              </Switch>
              <Switch>
                <Value>FileServerType = 'WindowsPreConfigured';</Value>
              </Switch>
              <Switch>
                <Value>ContentShareUNCPath = '\\$WindowsAzurePack2013WebSitesFileServer\$WindowsAzurePack2013WebSitesContentShareName';</Value>
              </Switch>
              <Switch>
                <Value>FileShareOwnerUserName = '$WindowsAzurePack2013WebSitesFileShareOwnerServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>FileShareOwnerPassword = '$WindowsAzurePack2013WebSitesFileShareOwnerServiceAccountPassword';</Value>
                <Log>FileShareOwnerPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>FileShareUserUserName = '$WindowsAzurePack2013WebSitesFileShareUserServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>FileShareUserPassword = '$WindowsAzurePack2013WebSitesFileShareUserServiceAccountPassword';</Value>
                <Log>FileShareUserPassword = '********';</Log>
              </Switch>
              <Switch>
                <Value>CertificateShareUNCPath = '\\$WindowsAzurePack2013WebSitesFileServer\$WindowsAzurePack2013WebSitesCertificateShareName';</Value>
              </Switch>
              <Switch>
                <Value>CentralCertStoreUserName = '$WindowsAzurePack2013WebSitesCertificateShareUserServiceAccount';</Value>
              </Switch>
              <Switch>
                <Value>CentralCertStorePassword = '$WindowsAzurePack2013WebSitesCertificateShareUserServiceAccountPassword';</Value>
                <Log>CentralCertStorePassword = '********';</Log>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -ne 1</Condition>
                <Value>EnableSQM = 'False';</Value>
              </Switch>
              <Switch>
                <Condition>$CustomerExperienceImprovementProgram -eq 1</Condition>
                <Value>EnableSQM = 'True';</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -ne 1</Condition>
                <Value>EnableMicrosoftUpdate = 'False';</Value>
              </Switch>
              <Switch>
                <Condition>$MicrosoftUpdate -eq 1</Condition>
                <Value>EnableMicrosoftUpdate = 'True';</Value>
              </Switch>
              <Switch>
                <Value>SkipManagementServerProvisioning = 'True';</Value>
              </Switch>
              <Switch>
                <Value>IsVMMBased = 'False';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>Initialize-WebSitesInstance -Settings `$ControllerInitializationSettings -Verbose;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-WebSitesServer -ServerType Controller -Name $WindowsAzurePack2013WebSitesControllerServer) {</Value>
              </Switch>
              <Switch>
                <Value>Rename-Item -Path ('$SystemDrive\HostingOfflineFeed\installers\WFastCgi15Py27\F6F7015873F00FF20E3B685658994072DDA74ECA\' + (Get-ChildItem '$SystemDrive\HostingOfflineFeed\installers\WFastCgi15Py27\F6F7015873F00FF20E3B685658994072DDA74ECA').Name) -NewName 'WFastCGI - 2.0.msi';</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesControllerServer.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Management Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{0ACE275D-20FB-4864-A0D1-B47BADC272F7}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType ManagementServer -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>While ((Get-WebSitesServer | Where-Object {`$_.Name -eq '$WindowsAzurePack2013WebSitesManagementServer'}).Status -ne 'Ready') {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 1;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013WebSitesManagementServer) -and $WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013WebSitesManagementServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013WebSitesManagementServer) -and $WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013WebSitesManagementServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesManagementServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites FrontEnd Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{0ACE275D-20FB-4864-A0D1-B47BADC272F7}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType LoadBalancer -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>While ((Get-WebSitesServer | Where-Object {`$_.Name -eq '$WindowsAzurePack2013WebSitesFrontEndServer'}).Status -ne 'Ready') {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 1;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013WebSitesFrontEndServer) -and $WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013WebSitesFrontEndServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013WebSitesFrontEndServer) -and $WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013WebSitesFrontEndServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesFrontEndServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Publisher Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>ProductCode</Type>
          <Value>{0ACE275D-20FB-4864-A0D1-B47BADC272F7}</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType Publisher -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>While ((Get-WebSitesServer | Where-Object {`$_.Name -eq '$WindowsAzurePack2013WebSitesPublisherServer'}).Status -ne 'Ready') {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 1;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module ServerManager)) {Import-Module ServerManager};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WindowsFeature -Name NLB | Where-Object {`$_.Installed})) {Install-WindowsFeature -Name NLB -IncludeManagementTools};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-Module NetworkLoadBalancingClusters)) {Import-Module NetworkLoadBalancingClusters};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>If ((Get-NetAdapter).Count -eq `$null) {</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>If (!(Get-WmiObject -Namespace root\MicrosoftNLB -Class MicrosoftNLB_Node -ErrorAction SilentlyContinue)) {</Value>
              </Switch>
              <Switch>
                <Condition>($Server -eq $WindowsAzurePack2013WebSitesPublisherServer) -and $WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>New-NlbCluster -InterfaceName (Get-NetAdapter).Name -IPAddress $WindowsAzurePack2013WebSitesPublisherServerNLBIPv4;</Value>
              </Switch>
              <Switch>
                <Condition>($Server -ne $WindowsAzurePack2013WebSitesPublisherServer) -and $WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>Get-NlbCluster -HostName $WindowsAzurePack2013WebSitesPublisherServer | Add-NlbClusterNode -NewNodeName $Server -NewNodeInterface (Get-NetAdapter).Name;</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$WindowsAzurePack2013WebSitesPublisherServerNLBConfig -eq "True"</Condition>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Shared Worker Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesSharedWorkerServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType WebWorker -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>})</Value>
              </Switch>
              <Switch>
                <Value>{'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesSharedWorkerServer.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Reserved Large Worker Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesReservedLargeWorkerServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType WebWorker -ComputeMode Dedicated -WorkerSize Large -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>})</Value>
              </Switch>
              <Switch>
                <Value>{'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesReservedLargeWorkerServer.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Reserved Medium Worker Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesReservedMediumWorkerServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType WebWorker -ComputeMode Dedicated -WorkerSize Medium -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>})</Value>
              </Switch>
              <Switch>
                <Value>{'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesReservedMediumWorkerServer.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Reserved Small Worker Server">
        <SourceSubFolder>None</SourceSubFolder>
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesReservedSmallWorkerServer.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (Invoke-Command -ComputerName '$WindowsAzurePack2013WebSitesControllerServer' {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module WebSites)) {Import-Module WebSites};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-Module WebSites) {</Value>
              </Switch>
              <Switch>
                <Value>New-WebSitesServer -ServerType WebWorker -ComputeMode Dedicated -WorkerSize Small -Name '$Server';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>})</Value>
              </Switch>
              <Switch>
                <Value>{'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesReservedSmallWorkerServer.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
    <Installable Name="System Center 2012 R2 Integration">
      <Install Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Cluster Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationVirtualMachineManagerClusterIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFServer -Name $SystemCenter2012R2VirtualMachineManagerVmmServerName -ServerType 0;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFServer -Name $SystemCenter2012R2VirtualMachineManagerVmmServerName) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationVirtualMachineManagerClusterIntegration.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationVirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFServer -Name $SystemCenter2012R2VirtualMachineManagerManagementServer -ServerType 0;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFServer -Name $SystemCenter2012R2VirtualMachineManagerManagementServer) {'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationVirtualMachineManagerIntegration.role'};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 App Controller Virtual Machine Manager Cluster Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2AppControllerVirtualMachineManagerClusterIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$i = 0;</Value>
              </Switch>
              <Switch>
                <Value>While ((`$i -lt 5) -and !(Get-SCACServer -ServerName 'https://$SystemCenter2012R2AppControllerServer`:$SystemCenter2012R2AppControllerPort' -Credential `$Credential)) {Start-Sleep 60;`$i++};</Value>
              </Switch>
              <Switch>
                <Value>Add-SCACCloudSystem -Name '$SystemCenter2012R2VirtualMachineManagerVmmServerName' -ServerName '$SystemCenter2012R2VirtualMachineManagerVmmServerName' -Port $SystemCenter2012R2VirtualMachineManagerIndigoTcpPort -VMM:`$true;</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCACCloudSystem -Name '$SystemCenter2012R2VirtualMachineManagerVmmServerName') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2AppControllerVirtualMachineManagerClusterIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 App Controller Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2AppControllerVirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module AppController)) {Import-Module AppController};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$i = 0;</Value>
              </Switch>
              <Switch>
                <Value>Get-SCACServer -ServerName 'https://$SystemCenter2012R2AppControllerServer`:$SystemCenter2012R2AppControllerPort' -Credential `$Credential;</Value>
              </Switch>
              <Switch>
                <Value>`$Done = `$False;</Value>
              </Switch>
              <Switch>
                <Value>While ((`$i -lt 5) -and !(`$Done)) {</Value>
              </Switch>
              <Switch>
                <Value>Get-SCACServer -ServerName 'https://$SystemCenter2012R2AppControllerServer`:$SystemCenter2012R2AppControllerPort' -Credential `$Credential;</Value>
              </Switch>
              <Switch>
                <Value>Add-SCACCloudSystem -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer' -ServerName '$SystemCenter2012R2VirtualMachineManagerManagementServer' -Port $SystemCenter2012R2VirtualMachineManagerIndigoTcpPort -VMM:`$true;</Value>
              </Switch>
              <Switch>
                <Value>try {If (Get-SCACCloudSystem -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer') {`$Done = `$True}} catch {Start-Sleep 60};</Value>
              </Switch>
              <Switch>
                <Value>`$i++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCACCloudSystem -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2AppControllerVirtualMachineManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OperationsManagerVirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2ManagementPacksSource\Microsoft.SQLServer.Library.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2ManagementPacksSource\Microsoft.Windows.Server.Library.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2ManagementPacksSource\Microsoft.Windows.Server.2008.Discovery.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2ManagementPacksSource\Microsoft.Windows.InternetInformationServices.CommonLibrary.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2ManagementPacksSource\Microsoft.Windows.InternetInformationServices.2003.mp;</Value>
              </Switch>
              <Switch>
                <Value>Import-SCManagementPack $TempPath\Installer\$SystemCenter2012R2ManagementPacksSource\Microsoft.Windows.InternetInformationServices.2008.mp;</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OperationsManagerVirtualMachineManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Cluster Operations Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerClusterOperationsManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module VirtualMachineManager)) {Import-Module VirtualMachineManager};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2VirtualMachineManagerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2VirtualMachineManagerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOpsMgrConnection -VMMServer $SystemCenter2012R2VirtualMachineManagerVmmServerName)) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCOpsMgrConnection -EnablePRO `$true -EnableMaintenanceModeIntegration `$true -OpsMgrServer $SystemCenter2012R2OperationsManagerManagementServer -VMMServerCredential `$Credential -UseVMMServerServiceAccount -VMMServer $SystemCenter2012R2VirtualMachineManagerVmmServerName</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOpsMgrConnection -VMMServer $SystemCenter2012R2VirtualMachineManagerVmmServerName) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerClusterOperationsManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Virtual Machine Manager Operations Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerOperationsManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module VirtualMachineManager)) {Import-Module VirtualMachineManager};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2VirtualMachineManagerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2VirtualMachineManagerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOpsMgrConnection -VMMServer $SystemCenter2012R2VirtualMachineManagerManagementServer)) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCOpsMgrConnection -EnablePRO `$true -EnableMaintenanceModeIntegration `$true -OpsMgrServer $SystemCenter2012R2OperationsManagerManagementServer -VMMServerCredential `$Credential -UseVMMServerServiceAccount -VMMServer $SystemCenter2012R2VirtualMachineManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOpsMgrConnection -VMMServer $SystemCenter2012R2VirtualMachineManagerManagementServer) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2VirtualMachineManagerOperationsManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2VirtualMachineManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSPFStamp -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer')) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFStamp -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer' -Servers (Get-SCSPFServer -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer') -Tenants (Get-SCSPFTenant -Name Administrator)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFStamp -Name '$SystemCenter2012R2VirtualMachineManagerManagementServer') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2VirtualMachineManagerIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Cluster Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2VirtualMachineManagerClusterIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSPFStamp -Name '$SystemCenter2012R2VirtualMachineManagerVmmServerName')) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCSPFStamp -Name '$SystemCenter2012R2VirtualMachineManagerVmmServerName' -Servers (Get-SCSPFServer -Name '$SystemCenter2012R2VirtualMachineManagerVmmServerName') -Tenants (Get-SCSPFTenant -Name Administrator)</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFStamp -Name '$SystemCenter2012R2VirtualMachineManagerVmmServerName') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2VirtualMachineManagerClusterIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 System Center 2012 R2 Service Management Automation Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2ServiceManagementAutomationIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcAdmin)) {Import-Module -Name MgmtSvcAdmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry = 0;</Value>
              </Switch>
              <Switch>
                <Value>While (!(`$Token) -and (`$TokenTry -lt 5)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServer`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Token)) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 5;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")</Condition>
                <Value>If (!(Get-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -Name 'automation' -DisableCertificateValidation)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (!(Get-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -Name 'automation' -DisableCertificateValidation)) {</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2ServiceManagementAutomationServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2ServiceManagementAutomationServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Condition>(($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")) -and (($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -eq $null) -or ($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -eq ""))</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -Name 'automation' -DisplayName 'Automation' -Enabled `$True -PassThroughEnabled `$True -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer`:$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUser `$Credential -InstanceDisplayName 'Automation' -MaxQuotaUpdateBatchSize 5 -SubscriptionStatusPollingInterval (New-TimeSpan -Seconds 10) -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>(($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")) -and (($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -ne $null) -and ($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -ne ""))</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -Name 'automation' -DisplayName 'Automation' -Enabled `$True -PassThroughEnabled `$True -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName`:$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUser `$Credential -InstanceDisplayName 'Automation' -MaxQuotaUpdateBatchSize 5 -SubscriptionStatusPollingInterval (New-TimeSpan -Seconds 10) -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>(($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")) -and (($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -eq $null) -or ($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -eq ""))</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -Name 'automation' -DisplayName 'Automation' -Enabled `$True -PassThroughEnabled `$True -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer`:$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUser `$Credential -InstanceDisplayName 'Automation' -MaxQuotaUpdateBatchSize 5 -SubscriptionStatusPollingInterval (New-TimeSpan -Seconds 10) -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>(($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")) -and (($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -ne $null) -and ($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -ne ""))</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -Name 'automation' -DisplayName 'Automation' -Enabled `$True -PassThroughEnabled `$True -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName`:$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUser `$Credential -InstanceDisplayName 'Automation' -MaxQuotaUpdateBatchSize 5 -SubscriptionStatusPollingInterval (New-TimeSpan -Seconds 10) -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")</Condition>
                <Value>If (Get-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -Name 'automation' -DisableCertificateValidation) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>If (Get-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -Name 'automation' -DisableCertificateValidation) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2ServiceManagementAutomationIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 System Center 2012 R2 Service Provider Foundation Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2ServiceProviderFoundationIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcAdmin)) {Import-Module -Name MgmtSvcAdmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry = 0;</Value>
              </Switch>
              <Switch>
                <Value>While (!(`$Token) -and (`$TokenTry -lt 5)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServer`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Token)) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 5;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-MgmtSvcResourceProviderConfiguration -Name 'systemcenter')) {</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceProviderFoundationServerNLBName -eq $null) -or ($SystemCenter2012R2ServiceProviderFoundationServerNLBName -eq "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'systemcenter' -DisplayName 'Virtual Machine Clouds' -InstanceDisplayName 'Virtual Machine Clouds' -Type Standard -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -AdminAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantSourceUriTemplate '{subid}/services/systemcenter/vmm/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/{*path}' -NotificationForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber//provider/' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -NotificationAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'systemcenter' -DisplayName 'Virtual Machine Clouds' -InstanceDisplayName 'Virtual Machine Clouds' -Type Standard -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -AdminAuthenticationPassword '********' -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/services/systemcenter/vmm/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/{*path}' -NotificationForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber//provider/' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -NotificationAuthenticationPassword '********';</Log>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceProviderFoundationServerNLBName -ne $null) -and ($SystemCenter2012R2ServiceProviderFoundationServerNLBName -ne "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'systemcenter' -DisplayName 'Virtual Machine Clouds' -InstanceDisplayName 'Virtual Machine Clouds' -Type Standard -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -AdminAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantSourceUriTemplate '{subid}/services/systemcenter/vmm/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/{*path}' -NotificationForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber//provider/' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -NotificationAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'systemcenter' -DisplayName 'Virtual Machine Clouds' -InstanceDisplayName 'Virtual Machine Clouds' -Type Standard -AdminForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -AdminAuthenticationPassword '********' -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/services/systemcenter/vmm/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/{*path}' -NotificationForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber//provider/' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -NotificationAuthenticationPassword '********';</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-MgmtSvcResourceProviderConfiguration -Name 'cloudservices')) {</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceProviderFoundationServerNLBName -eq $null) -or ($SystemCenter2012R2ServiceProviderFoundationServerNLBName -eq "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'cloudservices' -DisplayName 'Cloud Services' -InstanceDisplayName 'Cloud Services' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantSourceUriTemplate '{subid}/cloudservices/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/CloudServices/{*path}';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'cloudservices' -DisplayName 'Cloud Services' -InstanceDisplayName 'Cloud Services' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/cloudservices/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/CloudServices/{*path}';</Log>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceProviderFoundationServerNLBName -ne $null) -and ($SystemCenter2012R2ServiceProviderFoundationServerNLBName -ne "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'cloudservices' -DisplayName 'Cloud Services' -InstanceDisplayName 'Cloud Services' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantSourceUriTemplate '{subid}/cloudservices/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/CloudServices/{*path}';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'cloudservices' -DisplayName 'Cloud Services' -InstanceDisplayName 'Cloud Services' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/cloudservices/{*path}' -TenantTargetUriTemplate '{subid}/Microsoft.Management.Odata.svc/CloudServices/{*path}';</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-MgmtSvcResourceProviderConfiguration -Name 'gallery')) {</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceProviderFoundationServerNLBName -eq $null) -or ($SystemCenter2012R2ServiceProviderFoundationServerNLBName -eq "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'gallery' -DisplayName 'Gallery' -InstanceDisplayName 'Gallery' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantSourceUriTemplate '{subid}/gallery/{*path}' -TenantTargetUriTemplate '{subid}/GalleryService.svc/{*path}';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'gallery' -DisplayName 'Gallery' -InstanceDisplayName 'Gallery' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServer`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/gallery/{*path}' -TenantTargetUriTemplate '{subid}/GalleryService.svc/{*path}';</Log>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceProviderFoundationServerNLBName -ne $null) -and ($SystemCenter2012R2ServiceProviderFoundationServerNLBName -ne "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'gallery' -DisplayName 'Gallery' -InstanceDisplayName 'Gallery' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword' -TenantSourceUriTemplate '{subid}/gallery/{*path}' -TenantTargetUriTemplate '{subid}/GalleryService.svc/{*path}';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'gallery' -DisplayName 'Gallery' -InstanceDisplayName 'Gallery' -Type CloudServiceProvider -TenantForwardingAddress 'https://$SystemCenter2012R2ServiceProviderFoundationServerNLBName`:$SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber/SC2012R2/VMM/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/gallery/{*path}' -TenantTargetUriTemplate '{subid}/GalleryService.svc/{*path}';</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-MgmtSvcResourceProviderConfiguration -Name 'systemcenter') -and (Get-MgmtSvcResourceProviderConfiguration -Name 'cloudservices') -and (Get-MgmtSvcResourceProviderConfiguration -Name 'gallery')) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013SystemCenter2012R2ServiceProviderFoundationIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="Windows Azure Pack 2013 Web Sites Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\WindowsAzurePack2013WebSitesIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcAdmin)) {Import-Module -Name MgmtSvcAdmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module -Name MgmtSvcConfig)) {Import-Module -Name MgmtSvcConfig};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $InstallerServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$InstallerServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry = 0;</Value>
              </Switch>
              <Switch>
                <Value>While (!(`$Token) -and (`$TokenTry -lt 5)) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -ne "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServerNLBName`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAuthenticationSiteServerNLBName -eq "")</Condition>
                <Value>`$Token = Get-MgmtSvcToken -Type Windows -AuthenticationSite 'https://$WindowsAzurePack2013AdminAuthenticationSiteServer`:30072/' -ClientRealm 'http://azureservices/AdminSite' -User `$Credential -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>If (!(`$Token)) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Sleep 5;</Value>
              </Switch>
              <Switch>
                <Value>`$TokenTry++;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013WebSitesManagementServerNLBName -eq $null) -or ($WindowsAzurePack2013WebSitesManagementServerNLBName -eq "")</Condition>
                <Value>If (!(Get-MgmtSvcResourceProviderConfiguration -Name 'webspaces' | Where-Object {`$_.InstanceDisplayName -eq '$WindowsAzurePack2013WebSitesManagementServer'})) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013WebSitesManagementServerNLBName -ne $null) -and ($WindowsAzurePack2013WebSitesManagementServerNLBName -ne "")</Condition>
                <Value>If (!(Get-MgmtSvcResourceProviderConfiguration -Name 'webspaces' | Where-Object {`$_.InstanceDisplayName -eq '$WindowsAzurePack2013WebSitesManagementServerNLBName'})) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013WebSitesManagementServerNLBName -eq $null) -or ($WindowsAzurePack2013WebSitesManagementServerNLBName -eq "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'webspaces' -DisplayName 'Web Site Cloud' -InstanceDisplayName '$WindowsAzurePack2013WebSitesManagementServer' -Type Standard -AllowMultipleInstances -AdminForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -AdminAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword' -TenantForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -TenantAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword' -TenantSourceUriTemplate '{subid}/services/webspaces/{*path}' -TenantTargetUriTemplate 'subscriptions/{subid}/webspaces/{*path}' -UsageForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/' -UsageAuthenticationMode Basic -UsageAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -UsageAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword' -NotificationForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/quotamanagement' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -NotificationAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'webspaces' -DisplayName 'Web Site Cloud' -InstanceDisplayName '$WindowsAzurePack2013WebSitesManagementServer' -Type Standard -AllowMultipleInstances -AdminForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -AdminAuthenticationPassword '********' -TenantForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/services/webspaces/{*path}' -TenantTargetUriTemplate 'subscriptions/{subid}/webspaces/{*path}' -UsageForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/' -UsageAuthenticationMode Basic -UsageAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -UsageAuthenticationPassword '********' -NotificationForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServer/quotamanagement' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -NotificationAuthenticationPassword '********';</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013WebSitesManagementServerNLBName -ne $null) -and ($WindowsAzurePack2013WebSitesManagementServerNLBName -ne "")</Condition>
                <Value>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'webspaces' -DisplayName 'Web Site Cloud' -InstanceDisplayName '$WindowsAzurePack2013WebSitesManagementServerNLBName' -Type Standard -AllowMultipleInstances -AdminForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -AdminAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword' -TenantForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -TenantAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword' -TenantSourceUriTemplate '{subid}/services/webspaces/{*path}' -TenantTargetUriTemplate 'subscriptions/{subid}/webspaces/{*path}' -UsageForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/' -UsageAuthenticationMode Basic -UsageAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -UsageAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword' -NotificationForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/quotamanagement' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -NotificationAuthenticationPassword '$WindowsAzurePack2013WebSitesCloudAdminPassword';</Value>
                <Log>`$RP = New-MgmtSvcResourceProviderConfiguration -Name 'webspaces' -DisplayName 'Web Site Cloud' -InstanceDisplayName '$WindowsAzurePack2013WebSitesManagementServerNLBName' -Type Standard -AllowMultipleInstances -AdminForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/' -AdminAuthenticationMode Basic -AdminAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -AdminAuthenticationPassword '********' -TenantForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/' -TenantAuthenticationMode Basic -TenantAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -TenantAuthenticationPassword '********' -TenantSourceUriTemplate '{subid}/services/webspaces/{*path}' -TenantTargetUriTemplate 'subscriptions/{subid}/webspaces/{*path}' -UsageForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/' -UsageAuthenticationMode Basic -UsageAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -UsageAuthenticationPassword '********' -NotificationForwardingAddress 'https://$WindowsAzurePack2013WebSitesManagementServerNLBName/quotamanagement' -NotificationAuthenticationMode Basic -NotificationAuthenticationUserName '$WindowsAzurePack2013WebSitesCloudAdmin' -NotificationAuthenticationPassword '********';</Log>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServerNLBName`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -eq $null) -or ($WindowsAzurePack2013AdminAPIServerNLBName -eq "")</Condition>
                <Value>Add-MgmtSvcResourceProvider -AdminUri 'https://$WindowsAzurePack2013AdminAPIServer`:30004' -Token `$Token -ResourceProvider `$RP -DisableCertificateValidation;</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013WebSitesManagementServerNLBName -eq $null) -or ($WindowsAzurePack2013WebSitesManagementServerNLBName -eq "")</Condition>
                <Value>If (Get-MgmtSvcResourceProviderConfiguration -Name 'webspaces' | Where-Object {`$_.InstanceDisplayName -eq '$WindowsAzurePack2013WebSitesManagementServer'}) {</Value>
              </Switch>
              <Switch>
                <Condition>($WindowsAzurePack2013WebSitesManagementServerNLBName -ne $null) -and ($WindowsAzurePack2013WebSitesManagementServerNLBName -ne "")</Condition>
                <Value>If (Get-MgmtSvcResourceProviderConfiguration -Name 'webspaces' | Where-Object {`$_.InstanceDisplayName -eq '$WindowsAzurePack2013WebSitesManagementServerNLBName'}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\WindowsAzurePack2013WebSitesIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Provider Foundation Service Management Automation Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationServiceManagementAutomationIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module spfadmin)) {Import-Module spfadmin};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSPFServer -Name 'IaasAutomation')) {</Value>
              </Switch>
              <Switch>
                <Value>`$Server = New-SCSpfServer -Name IaasAutomation -ServerType None;</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -eq $null) -or ($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -eq "")</Condition>
                <Value>New-SCSpfSetting -Name EndpointURL -Value ('https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServer`:$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber/'.ToLower()) -SettingType EndpointConnectionString -Server `$Server</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -ne $null) -and ($SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName -ne "")</Condition>
                <Value>New-SCSpfSetting -Name EndpointURL -Value ('https://$SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName`:$SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber/'.ToLower()) -SettingType EndpointConnectionString -Server `$Server</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSPFServer -Name 'IaasAutomation') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceProviderFoundationServiceManagementAutomationIntegration.role'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Management Automation Service Provider Foundation Integration">
        <Validation>
          <Type>UserInGroup</Type>
          <Value>$SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccount/smaAdminGroup</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>net.exe</Executable>
            <Switches>
              <Switch>
                <Value>localgroup smaAdminGroup `"$SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccount`" /add</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Datawarehouse Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerDatawarehouseIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module Microsoft.EnterpriseManagement.Warehouse.Cmdlets)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Microsoft.EnterpriseManagement.Warehouse.Cmdlets.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCDWSource -DataSourceType ServiceManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012R2ServiceManagerManagementGroupName'})) {</Value>
              </Switch>
              <Switch>
                <Value>Register-SCDWSource -DataSourceType ServiceManager -SourceComputerName $SystemCenter2012R2ServiceManagerManagementServer -SourceCredential `$Credential</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCDWSource -DataSourceType ServiceManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012R2ServiceManagerManagementGroupName'}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerDatawarehouseIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Orchestrator Service Manager Connector Integration">
        <Validation>
          <Type>UserInGroup</Type>
          <Value>$SystemCenter2012R2ServiceManagerServicesServiceAccount/OrchestratorUsersGroup</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>net.exe</Executable>
            <Switches>
              <Switch>
                <Value>localgroup OrchestratorUsersGroup `"$SystemCenter2012R2ServiceManagerServicesServiceAccount`" /add</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Orchestrator Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOrchestratorConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorWebURL -eq ""</Condition>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OrchestratorWebComponentsServer') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')})) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorWebURL -ne ""</Condition>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OrchestratorWebURL') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')})) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorWebURL -eq ""</Condition>
                <Value>New-SCOrchestratorConnector -DisplayName '$SystemCenter2012R2OrchestratorWebComponentsServer' -SCOCredential `$Credential -WebServiceURL 'http://$SystemCenter2012R2OrchestratorWebComponentsServer`:$SystemCenter2012R2OrchestratorWebServicePort/Orchestrator2012/Orchestrator.svc' -WebConsoleURL 'http://$SystemCenter2012R2OrchestratorWebComponentsServer`:$SystemCenter2012R2OrchestratorWebConsolePort/'</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorWebURL -ne ""</Condition>
                <Value>New-SCOrchestratorConnector -DisplayName '$SystemCenter2012R2OrchestratorWebURL' -SCOCredential `$Credential -WebServiceURL 'http://$SystemCenter2012R2OrchestratorWebURL`:$SystemCenter2012R2OrchestratorWebServicePort/Orchestrator2012/Orchestrator.svc' -WebConsoleURL 'http://$SystemCenter2012R2OrchestratorWebURL`:$SystemCenter2012R2OrchestratorWebConsolePort/'</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorWebURL -eq ""</Condition>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OrchestratorWebComponentsServer') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')}) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OrchestratorWebURL -ne ""</Condition>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OrchestratorWebURL') -and (`$_.DataProviderDisplayName -eq 'System Center Orchestrator Runbook Connector')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOrchestratorConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Configuration Manager Service Manager Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ConfigurationManagerServiceManagerIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'USE [master]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'CREATE LOGIN [$SystemCenter2012R2ServiceManagerServicesServiceAccount] FROM WINDOWS WITH DEFAULT_DATABASE=[master]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'USE [$SystemCenter2012R2ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'CREATE USER [$SystemCenter2012R2ServiceManagerServicesServiceAccount] FOR LOGIN [$SystemCenter2012R2ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'USE [$SystemCenter2012R2ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'ALTER ROLE [db_datareader] ADD MEMBER [$SystemCenter2012R2ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'USE [master]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'CREATE LOGIN [$SystemCenter2012R2ServiceManagerServicesServiceAccount] FROM WINDOWS WITH DEFAULT_DATABASE=[master]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'USE [$SystemCenter2012R2ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'CREATE USER [$SystemCenter2012R2ServiceManagerServicesServiceAccount] FOR LOGIN [$SystemCenter2012R2ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'USE [$SystemCenter2012R2ConfigurationManagerDatabase]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'ALTER ROLE [db_datareader] ADD MEMBER [$SystemCenter2012R2ServiceManagerServicesServiceAccount]' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>'GO' | Out-File '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql' -Append;</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null) -and ($SystemCenter2012R2ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ConfigurationManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ConfigurationManagerDatabaseServerShort -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null) -and ($SystemCenter2012R2ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ConfigurationManagerDatabaseServer -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ConfigurationManagerDatabaseServerShort\$SystemCenter2012R2ConfigurationManagerDatabaseInstance -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null) -and ($SystemCenter2012R2ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ConfigurationManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ConfigurationManagerDatabaseServerShort -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>($SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null) -and ($SystemCenter2012R2ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER")</Condition>
                <Value>Invoke-Command -ComputerName $SystemCenter2012R2ConfigurationManagerDatabaseNode -ScriptBlock {Start-Process -FilePath 'sqlcmd.exe' -ArgumentList '-S $SystemCenter2012R2ConfigurationManagerDatabaseServerShort\$SystemCenter2012R2ConfigurationManagerDatabaseInstance -i $TempPath\Installer.sql' -Wait};</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -ne $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2ConfigurationManagerDatabaseNode\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseNode -eq $null</Condition>
                <Value>Remove-Item -Path '\\$SystemCenter2012R2ConfigurationManagerDatabaseServer\$TempPathUNC\Installer.sql';</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ConfigurationManagerServiceManagerIntegration.role';</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Virtual Machine Manager Cluster Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerVirtualMachineManagerClusterConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2VirtualMachineManagerVmmServerName') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')})) {</Value>
              </Switch>
              <Switch>
                <Value>`$RA = (Get-SCSMRunAsAccount -DisplayName 'Operational Database Account').SecureReference;</Value>
              </Switch>
              <Switch>
                <Value>New-SCVMMConnector -DisplayName '$SystemCenter2012R2VirtualMachineManagerVmmServerName' -RunAsAccount `$RA -ServerName $SystemCenter2012R2VirtualMachineManagerVmmServerName</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2VirtualMachineManagerVmmServerName') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerVirtualMachineManagerClusterConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Virtual Machine Manager Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerVirtualMachineManagerConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2VirtualMachineManagerManagementServer') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')})) {</Value>
              </Switch>
              <Switch>
                <Value>`$RA = (Get-SCSMRunAsAccount -DisplayName 'Operational Database Account').SecureReference;</Value>
              </Switch>
              <Switch>
                <Value>New-SCVMMConnector -DisplayName '$SystemCenter2012R2VirtualMachineManagerManagementServer' -RunAsAccount `$RA -ServerName $SystemCenter2012R2VirtualMachineManagerManagementServer</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2VirtualMachineManagerManagementServer') -and (`$_.DataProviderDisplayName -eq 'System Center Virtual Machine Manager Connector')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerVirtualMachineManagerConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Operations Manager Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOperationsManagerConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OperationsManagerManagementGroupName') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Configuration Items')})) {</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name System.Image.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012R2ServiceManagerInstallPath\Operations Manager 2012 R2 Management Packs\System.Image.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name System.Virtualization.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012R2ServiceManagerInstallPath\Operations Manager 2012 R2 Management Packs\System.Virtualization.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name Microsoft.SystemCenter.DataWarehouse.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012R2ServiceManagerInstallPath\Operations Manager 2012 R2 Management Packs\Microsoft.SystemCenter.DataWarehouse.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name Microsoft.SystemCenter.DataWarehouse.Report.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012R2ServiceManagerInstallPath\Operations Manager 2012 R2 Management Packs\Microsoft.SystemCenter.DataWarehouse.Report.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMManagementPack -Name Microsoft.SystemCenter.OperationsManager.Library)) {Import-SCSMManagementPack -ManagementPack '$SystemCenter2012R2ServiceManagerInstallPath\Operations Manager 2012 R2 Management Packs\Microsoft.SystemCenter.OperationsManager.Library.mp'};</Value>
              </Switch>
              <Switch>
                <Value>New-SCOMConfigurationItemConnector -DisplayName $SystemCenter2012R2OperationsManagerManagementGroupName -OperationsManagerServer $SystemCenter2012R2OperationsManagerManagementServer -SCOMCredential `$Credential -ManagementPack 'Microsoft.Windows.Library' -ScheduleDay Daily -ScheduleHour 0</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OperationsManagerManagementGroupName') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Configuration Items')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOperationsManagerConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Operations Manager Alert Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOperationsManagerAlertConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OperationsManagerManagementGroupName Alerts') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Alerts')})) {</Value>
              </Switch>
              <Switch>
                <Value>New-SCOMAlertConnector -DisplayName '$SystemCenter2012R2OperationsManagerManagementGroupName Alerts' -OperationsManagerServer $SystemCenter2012R2OperationsManagerManagementServer -SCOMCredential `$Credential -CloseAlert -ResolveIncident</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2OperationsManagerManagementGroupName Alerts') -and (`$_.DataProviderDisplayName -eq 'Operations Manager Alerts')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOperationsManagerAlertConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Configuration Manager Connector Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerConfigurationManagerConnectorIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module System.Center.Service.Manager)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Powershell\System.Center.Service.Manager.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2ServiceManagerServicesServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2ServiceManagerServicesServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2ConfigurationManagerSiteCode') -and (`$_.DataProviderDisplayName -eq 'Configuration Manager')})) {</Value>
              </Switch>
              <Switch>
                <Value>`$MP = Get-SCSMManagementPack -DisplayName 'System Center Configuration Manager 2012 Connector Configuration';</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>New-SCCMConnector -DisplayName $SystemCenter2012R2ConfigurationManagerSiteCode -DatabaseName $SystemCenter2012R2ConfigurationManagerDatabase -DatabaseServer $SystemCenter2012R2ConfigurationManagerDatabaseServer -SCCMCredential `$Credential -ScheduleDay Daily -ScheduleHour 0 -SolutionManagementPack `$MP</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2ConfigurationManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>New-SCCMConnector -DisplayName $SystemCenter2012R2ConfigurationManagerSiteCode -DatabaseName $SystemCenter2012R2ConfigurationManagerDatabase -DatabaseServer $SystemCenter2012R2ConfigurationManagerDatabaseServer\$SystemCenter2012R2ConfigurationManagerDatabaseInstance -SCCMCredential `$Credential -ScheduleDay Daily -ScheduleHour 0 -SolutionManagementPack `$MP</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCSMConnector | Where-Object {(`$_.DisplayName -eq '$SystemCenter2012R2ConfigurationManagerSiteCode') -and (`$_.DataProviderDisplayName -eq 'Configuration Manager')}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerConfigurationManagerConnectorIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Service Manager Operations Manager Datawarehouse Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOperationsManagerDatawarehouseIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module Microsoft.EnterpriseManagement.Warehouse.Cmdlets)) {Import-Module '$SystemCenter2012R2ServiceManagerInstallPath\Microsoft.EnterpriseManagement.Warehouse.Cmdlets.psd1'};</Value>
              </Switch>
              <Switch>
                <Value>`$SecurePassword = ConvertTo-SecureString -String $SystemCenter2012R2OperationsManagerActionServiceAccountPassword -AsPlainText -Force;</Value>
                <Log>`$SecurePassword = ConvertTo-SecureString -String ******** -AsPlainText -Force;</Log>
              </Switch>
              <Switch>
                <Value>`$Credential = New-Object System.Management.Automation.PSCredential '$SystemCenter2012R2OperationsManagerActionServiceAccount',`$SecurePassword;</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCDWSource -DataSourceType OperationsManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012R2OperationsManagerManagementGroupName'})) {</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatabaseInstance -eq "MSSQLSERVER"</Condition>
                <Value>Register-SCDWSource -DataSourceType OperationsManager -SourceComputerName $SystemCenter2012R2OperationsManagerManagementServer -DataSourceDbName $SystemCenter2012R2OperationsManagerDatabaseName -DataSourceDbServerName $SystemCenter2012R2OperationsManagerDatabaseServer -FullPathToSourceManagementPackBundle '$SystemCenter2012R2ServiceManagerInstallPath\OperationsManagerMP.mpb' -SourceCredential `$Credential</Value>
              </Switch>
              <Switch>
                <Condition>$SystemCenter2012R2OperationsManagerDatabaseInstance -ne "MSSQLSERVER"</Condition>
                <Value>Register-SCDWSource -DataSourceType OperationsManager -SourceComputerName $SystemCenter2012R2OperationsManagerManagementServer -DataSourceDbName $SystemCenter2012R2OperationsManagerDatabaseName -DataSourceDbServerName $SystemCenter2012R2OperationsManagerDatabaseServer\$SystemCenter2012R2OperationsManagerDatabaseInstance -FullPathToSourceManagementPackBundle '$SystemCenter2012R2ServiceManagerInstallPath\OperationsManagerMP.mpb' -SourceCredential `$Credential</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCDWSource -DataSourceType OperationsManager | Where-Object {`$_.DataSourceName -eq '$SystemCenter2012R2OperationsManagerManagementGroupName'}) {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2ServiceManagerOperationsManagerDatawarehouseIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
      <Install Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Roles Integration">
        <Validation>
          <Type>TestPath</Type>
          <Value>$SystemDrive\Temp\SystemCenter2012R2OperationsManagerDataProtectionManagerCentralConsoleServerRolesIntegration.role</Value>
        </Validation>
        <CommandLines>
          <CommandLine>
            <Executable>powershell.exe</Executable>
            <Switches>
              <Switch>
                <Value>-command</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Start-Transcript -Path $SystemDrive\Temp\PS.log -Append;</Value>
              </Switch>
              <Switch>
                <Value>If ((Get-ExecutionPolicy) -eq 'Restricted') {Set-ExecutionPolicy RemoteSigned -Force};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-Module OperationsManager)) {Import-Module OperationsManager};</Value>
              </Switch>
              <Switch>
                <Value>If (!(Get-SCOMUserRole -DisplayName 'DPM Admin')) {</Value>
              </Switch>
              <Switch>
                <Value>Start-Process -FilePath '$SystemDrive\Program Files\Microsoft DPM\bin\DefaultRoleConfigurator.exe' -ArgumentList '-Quiet' -Wait</Value>
              </Switch>
              <Switch>
                <Value>};</Value>
              </Switch>
              <Switch>
                <Value>If (Get-SCOMUserRole -DisplayName 'DPM Admin') {</Value>
              </Switch>
              <Switch>
                <Value>'Done' | Out-File '$SystemDrive\Temp\SystemCenter2012R2OperationsManagerDataProtectionManagerCentralConsoleServerRolesIntegration.role';</Value>
              </Switch>
              <Switch>
                <Value>}</Value>
              </Switch>
              <Switch>
                <Condition>$DebugPS -eq "True"</Condition>
                <Value>Stop-Transcript</Value>
              </Switch>
              <Switch>
                <Value>`"</Value>
              </Switch>
            </Switches>
          </CommandLine>
        </CommandLines>
      </Install>
    </Installable>
  </Installables>
  <Components>
    <Component Name="System Center 2012 SP1 Orchestrator">
      <Variable Name="SystemCenter2012SP1OrchestratorAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012SP1OrchestratorDatabase" Value="Orchestrator" />
      <Variable Name="SystemCenter2012SP1OrchestratorRemote" Value="True" />
      <Variable Name="SystemCenter2012SP1OrchestratorInstallDir" Value="$SystemDrive\Program Files (x86)\Microsoft System Center 2012\Orchestrator" />
      <Variable Name="SystemCenter2012SP1OrchestratorWebURL" Value="" />
      <Variable Name="SystemCenter2012SP1OrchestratorWebServicePort" Value="81" />
      <Variable Name="SystemCenter2012SP1OrchestratorWebConsolePort" Value="82" />
      <Variable Name="SystemCenter2012SP1OrchestratorServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1OrchestratorServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="System Center 2012 SP1 Service Provider Foundation">
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationInstallFolder" Value="$SystemDrive\inetpub" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationWebSitePortNumber" Value="8090" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCVMMServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCVMMServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCVMMNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationVMMSecurityGroupUsers" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCAdminNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationAdminSecurityGroupUsers" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCProviderServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCProviderServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationSCProviderNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012SP1ServiceProviderFoundationProviderSecurityGroupUsers" Value="" Required="True" />
    </Component>
    <Component Name="System Center 2012 SP1 Virtual Machine Manager">
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerProgramFiles" Value="$SystemDrive\Program Files\Microsoft System Center 2012\Virtual Machine Manager" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerDatabase" Value="VirtualManagerDB" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerIndigoTcpPort" Value="8100" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerWSManTcpPort" Value="5985" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerBitsTcpPort" Value="443" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerIndigoNETTCPPort" Value="8102" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerIndigoHTTPSPort" Value="8101" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerIndigoHTTPPort" Value="8103" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerLibraryPath" Value="$SystemDrive\ProgramData\Virtual Machine Manager Library Files" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerVmmServerName" Value="" Comment="Only required for clustered VMM"/>
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerTopContainerName" Value="" Comment="Only required for clustered VMM"/>
      <Variable Name="SystemCenter2012SP1VirtualMachineManagerVMMStaticIPAddress" Value="" Comment="Only required for clustered VMM with static IP nodes"/>
    </Component>
    <Component Name="System Center 2012 SP1 App Controller">
      <Variable Name="SystemCenter2012SP1AppControllerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012SP1AppControllerPort" Value="443" />
      <Variable Name="SystemCenter2012SP1AppControllerDatabase" Value="AppController" />
      <Variable Name="SystemCenter2012SP1AppControllerInstallPath" Value="$SystemDrive\Program Files\Microsoft System Center 2012\App Controller" />
      <Variable Name="SystemCenter2012SP1AppControllerServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1AppControllerServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="System Center 2012 SP1 Operations Manager">
      <Variable Name="SystemCenter2012SP1OperationsManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012SP1OperationsManagerManagementGroupName" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1OperationsManagerInstallPath" Value="$SystemDrive\Program Files\Microsoft System Center 2012\Operations Manager" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDatabaseName" Value="OperationsManager" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDatabaseSize" Value="1000" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDWDatabaseName" Value="OperationsManagerDW" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDWDatabaseSize" Value="1000" />
      <Variable Name="SystemCenter2012SP1OperationsManagerActionServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1OperationsManagerActionServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDASServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDASServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDataReaderServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDataReaderServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDataWriterServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1OperationsManagerDataWriterServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1OperationsManagerWebConsoleAuthorizationMode" Value="Mixed" />
    </Component>
    <Component Name="System Center 2012 SP1 Configuration Manager">
      <Variable Name="SystemCenter2012SP1ConfigurationManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012SP1ConfigurationManagerInstallDir" Value="$SystemDrive\Program Files\Microsoft System Center 2012\Configuration Manager" />
      <Variable Name="SystemCenter2012SP1ConfigurationManagerConsoleTargetDir" Value="$SystemDrive\Program Files (x86)\Microsoft Configuration Manager\AdminConsole" />
      <Variable Name="SystemCenter2012SP1ConfigurationManagerDatabase" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1ConfigurationManagerSiteCode" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1ConfigurationManagerSite" Value="" Required="True" />
    </Component>
    <Component Name="System Center 2012 SP1 Service Manager">
      <Variable Name="SystemCenter2012SP1ServiceManagerAdminRoleGroup" Value="$InstallerServiceAccount" Principal="True" />
      <Variable Name="SystemCenter2012SP1ServiceManagerInstallPath" Value="$SystemDrive\Program Files\Microsoft System Center 2012\Service Manager" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDatabase" Value="ServiceManager" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDatabaseSize" Value="2000" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWStagingAndConfig" Value="DWStagingAndConfig" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWStagingAndConfigSize" Value="2000" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWRepository" Value="DWRepository" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWRepositorySize" Value="2000" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWDataMart" Value="DWDataMart" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWDataMartSize" Value="2000" />
      <Variable Name="SystemCenter2012SP1ServiceManagerOMDWDataMart" Value="OMDWDataMart" />
      <Variable Name="SystemCenter2012SP1ServiceManagerOMDWDataMartSize" Value="2000" />
      <Variable Name="SystemCenter2012SP1ServiceManagerCMDWDataMart" Value="CMDWDataMart" />
      <Variable Name="SystemCenter2012SP1ServiceManagerCMDWDataMartSize" Value="2000" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDWASDataBase" Value="DWASDataBase" />
      <Variable Name="SystemCenter2012SP1ServiceManagerServicesServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceManagerServicesServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceManagerWorkflowServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceManagerWorkflowServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceManagerReportingServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceManagerReportingServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceManagerAnalysisServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceManagerAnalysisServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012SP1ServiceManagerManagementGroupName" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1ServiceManagerDatawarehouseManagementGroupName" Value="" Required="True" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalWebSiteName" Value="SCSMWebContentServer" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalWebSiteCertificate" Value="False" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalWebSitePortHTTP" Value="81" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalWebSitePortHTTPS" Value="443" />
      <Variable Name="SystemCenter2012SP1ServiceManagerSpPortalWebSiteName" Value="Service Manager Portal" />
      <Variable Name="SystemCenter2012SP1ServiceManagerSpPortalWebSiteCertificate" Value="False" />
      <Variable Name="SystemCenter2012SP1ServiceManagerSpPortalWebSitePortHTTP" Value="81" />
      <Variable Name="SystemCenter2012SP1ServiceManagerSpPortalWebSitePortHTTPS" Value="443" />
      <Variable Name="SystemCenter2012SP1ServiceManagerSpPortalDatabaseName" Value="Sharepoint_SMPortalContent" />
      <Variable Name="SystemCenter2012SP1ServiceManagerPortalUsers" Value="" Required="True" Principal="True" />
    </Component>
    <Component Name="System Center 2012 SP1 Data Protection Manager">
      <Variable Name="SystemCenter2012SP1DataProtectionManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012SP1DataProtectionManagerProgramFiles" Value="$SystemDrive\Program Files\Microsoft System Center 2012\DPM" />
      <Variable Name="SystemCenter2012SP1DataProtectionManagerSQLPassword" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="Windows Azure Services 2012">
      <Variable Name="WindowsAzureServices2012AdminGroup" Value="" Principal="True" />
      <Variable Name="WindowsAzureServices2012ConfigStorePassphrase" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="System Center 2012 R2 Virtual Machine Manager">
      <Variable Name="SystemCenter2012R2VirtualMachineManagerServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerProgramFiles" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\Virtual Machine Manager" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerDatabase" Value="VirtualManagerDB" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerIndigoTcpPort" Value="8100" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerWSManTcpPort" Value="5985" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerBitsTcpPort" Value="443" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerIndigoNETTCPPort" Value="8102" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerIndigoHTTPSPort" Value="8101" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerIndigoHTTPPort" Value="8103" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerLibraryPath" Value="$SystemDrive\ProgramData\Virtual Machine Manager Library Files" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerVmmServerName" Value="" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerTopContainerName" Value="" />
      <Variable Name="SystemCenter2012R2VirtualMachineManagerVMMStaticIPAddress" Value="" />
    </Component>
    <Component Name="System Center 2012 R2 Orchestrator">
      <Variable Name="SystemCenter2012R2OrchestratorServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2OrchestratorAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2OrchestratorDatabase" Value="Orchestrator" />
      <Variable Name="SystemCenter2012R2OrchestratorRemote" Value="True" />
      <Variable Name="SystemCenter2012R2OrchestratorInstallDir" Value="$SystemDrive\Program Files (x86)\Microsoft System Center 2012 R2\Orchestrator" />
      <Variable Name="SystemCenter2012R2OrchestratorWebURL" Value="" />
      <Variable Name="SystemCenter2012R2OrchestratorWebServicePort" Value="81" />
      <Variable Name="SystemCenter2012R2OrchestratorWebConsolePort" Value="82" />
      <Variable Name="SystemCenter2012R2OrchestratorServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2OrchestratorServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="System Center 2012 R2 Service Provider Foundation">
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationDatabaseName" Value="SCSPFDB" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationWebSitePortNumber" Value="8090" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCVMMNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationVMMSecurityGroupUsers" Value="" Required="True" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCAdminNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationAdminSecurityGroupUsers" Value="" Required="True" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCProviderServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCProviderServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCProviderNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationProviderSecurityGroupUsers" Value="" Required="True" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCUsageServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCUsageServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationSCUsageNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationUsageSecurityGroupUsers" Value="" Required="True" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationServerNLBName" Value="" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationServerNLBIPv4" Value="" />
      <Variable Name="SystemCenter2012R2ServiceProviderFoundationServerNLBConfig" Value="False" />
    </Component>
    <Component Name="System Center 2012 R2 Service Management Automation">
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationAdminGroup" Value="" Required="True" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationInstallFolder" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\Service Management Automation" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationWebSitePortNumber" Value="9090" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationDatabase" Value="SMA" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationNetworkServiceSelected" Value="false" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationAdminGroup" Value="" Required="True" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBName" Value="" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBIPv4" Value="" />
      <Variable Name="SystemCenter2012R2ServiceManagementAutomationWebServiceServerNLBConfig" Value="False" />
    </Component>
    <Component Name="System Center 2012 R2 Service Reporting">
      <Variable Name="SystemCenter2012R2ServiceReportingServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceReportingRunAsAccount" Value="$SystemCenter2012R2ServiceReportingDatawarehouseSQLServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceReportingInstallFolder" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\Service Reporting" />
      <Variable Name="SystemCenter2012R2ServiceReportingRepositoryDatabaseName" Value="UsageETLRepositoryDB" />
      <Variable Name="SystemCenter2012R2ServiceReportingStagingDatabaseName" Value="UsageStagingDB" />
      <Variable Name="SystemCenter2012R2ServiceReportingDWDatabaseName" Value="UsageDatawarehouseDB" />
      <Variable Name="SystemCenter2012R2ServiceReportingAnalysisDatabaseName" Value="UsageAnalysisDB" />
    </Component>
    <Component Name="System Center 2012 R2 App Controller">
      <Variable Name="SystemCenter2012R2AppControllerServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2AppControllerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2AppControllerPort" Value="443" />
      <Variable Name="SystemCenter2012R2AppControllerDatabase" Value="AppController" />
      <Variable Name="SystemCenter2012R2AppControllerInstallPath" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\App Controller" />
      <Variable Name="SystemCenter2012R2AppControllerServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2AppControllerServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="System Center 2012 R2 Operations Manager">
      <Variable Name="SystemCenter2012R2OperationsManagerServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2OperationsManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2OperationsManagerManagementGroupName" Value="" Required="True" />
      <Variable Name="SystemCenter2012R2OperationsManagerInstallPath" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\Operations Manager" />
      <Variable Name="SystemCenter2012R2OperationsManagerDatabaseName" Value="OperationsManager" />
      <Variable Name="SystemCenter2012R2OperationsManagerDatabaseSize" Value="1000" />
      <Variable Name="SystemCenter2012R2OperationsManagerDWDatabaseName" Value="OperationsManagerDW" />
      <Variable Name="SystemCenter2012R2OperationsManagerDWDatabaseSize" Value="1000" />
      <Variable Name="SystemCenter2012R2OperationsManagerActionServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2OperationsManagerActionServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2OperationsManagerDASServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2OperationsManagerDASServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2OperationsManagerDataReaderServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2OperationsManagerDataReaderServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2OperationsManagerDataWriterServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2OperationsManagerDataWriterServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2OperationsManagerWebConsoleAuthorizationMode" Value="Mixed" />
    </Component>
    <Component Name="System Center 2012 R2 Configuration Manager">
      <Variable Name="SystemCenter2012R2ConfigurationManagerServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2ConfigurationManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2ConfigurationManagerInstallDir" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\Configuration Manager" />
      <Variable Name="SystemCenter2012R2ConfigurationManagerConsoleTargetDir" Value="$SystemDrive\Program Files (x86)\Microsoft Configuration Manager\AdminConsole" />
      <Variable Name="SystemCenter2012R2ConfigurationManagerDatabase" Value="" Required="True" />
      <Variable Name="SystemCenter2012R2ConfigurationManagerSiteCode" Value="" Required="True" />
      <Variable Name="SystemCenter2012R2ConfigurationManagerSite" Value="" Required="True" />
    </Component>
    <Component Name="System Center 2012 R2 Service Manager">
      <Variable Name="SystemCenter2012R2ServiceManagerServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceManagerAdminRoleGroup" Value="$InstallerServiceAccount" Principal="True" />
      <Variable Name="SystemCenter2012R2ServiceManagerInstallPath" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\Service Manager" />
      <Variable Name="SystemCenter2012R2ServiceManagerDatabase" Value="ServiceManager" />
      <Variable Name="SystemCenter2012R2ServiceManagerDatabaseSize" Value="2000" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWStagingAndConfig" Value="DWStagingAndConfig" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWStagingAndConfigSize" Value="2000" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWRepository" Value="DWRepository" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWRepositorySize" Value="2000" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWDataMart" Value="DWDataMart" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWDataMartSize" Value="2000" />
      <Variable Name="SystemCenter2012R2ServiceManagerOMDWDataMart" Value="OMDWDataMart" />
      <Variable Name="SystemCenter2012R2ServiceManagerOMDWDataMartSize" Value="2000" />
      <Variable Name="SystemCenter2012R2ServiceManagerCMDWDataMart" Value="CMDWDataMart" />
      <Variable Name="SystemCenter2012R2ServiceManagerCMDWDataMartSize" Value="2000" />
      <Variable Name="SystemCenter2012R2ServiceManagerDWASDataBase" Value="DWASDataBase" />
      <Variable Name="SystemCenter2012R2ServiceManagerServicesServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceManagerServicesServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceManagerWorkflowServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceManagerWorkflowServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceManagerReportingServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceManagerReportingServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceManagerAnalysisServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceManagerAnalysisServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SystemCenter2012R2ServiceManagerManagementGroupName" Value="" Required="True" />
      <Variable Name="SystemCenter2012R2ServiceManagerDatawarehouseManagementGroupName" Value="" Required="True" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalWebSiteName" Value="SCSMWebContentServer" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalWebSiteCertificate" Value="False" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalWebSitePortHTTP" Value="81" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalWebSitePortHTTPS" Value="443" />
      <Variable Name="SystemCenter2012R2ServiceManagerSpPortalWebSiteName" Value="Service Manager Portal" />
      <Variable Name="SystemCenter2012R2ServiceManagerSpPortalWebSiteCertificate" Value="False" />
      <Variable Name="SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTP" Value="81" />
      <Variable Name="SystemCenter2012R2ServiceManagerSpPortalWebSitePortHTTPS" Value="443" />
      <Variable Name="SystemCenter2012R2ServiceManagerSpPortalDatabaseName" Value="Sharepoint_SMPortalContent" />
      <Variable Name="SystemCenter2012R2ServiceManagerPortalUsers" Value="" Required="True" Principal="True" />
    </Component>
    <Component Name="System Center 2012 R2 Data Protection Manager">
      <Variable Name="SystemCenter2012R2DataProtectionManagerServerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2DataProtectionManagerAdminGroup" Value="" Principal="True" />
      <Variable Name="SystemCenter2012R2DataProtectionManagerProgramFiles" Value="$SystemDrive\Program Files\Microsoft System Center 2012 R2\DPM" />
      <Variable Name="SystemCenter2012R2DataProtectionManagerSQLPassword" Value="$InstallerServiceAccountPassword" />
    </Component>
    <Component Name="Windows Azure Pack 2013">
      <Variable Name="WindowsAzurePack2013ServerAdminGroup" Value="" Principal="True" />
      <Variable Name="WindowsAzurePack2013AdminGroup" Value="" Principal="True" />
      <Variable Name="WindowsAzurePack2013ConfigStorePassphrase" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013AdminAPIServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013AdminAPIServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013AdminAPIServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013SQLServerExtensionServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013SQLServerExtensionServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013SQLServerExtensionServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013MySQLExtensionServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013MySQLExtensionServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013MySQLExtensionServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013TenantAPIServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013TenantAPIServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013TenantAPIServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013TenantPublicAPIServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013TenantPublicAPIServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013TenantPublicAPIServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013AdminSiteServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013AdminSiteServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013AdminSiteServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013TenantSiteServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013TenantSiteServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013TenantSiteServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013AdminAuthenticationSiteServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013AdminAuthenticationSiteServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013AdminAuthenticationSiteServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013TenantAuthenticationSiteServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013TenantAuthenticationSiteServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013TenantAuthenticationSiteServerNLBConfig" Value="False" />
    </Component>
    <Component Name="Windows Azure Pack 2013 Web Sites">
      <Variable Name="WindowsAzurePack2013WebSitesServerAdminGroup" Value="" Principal="True" />
      <Variable Name="WindowsAzurePack2013WebSitesOfflineFeed" Value="True" />
      <Variable Name="WindowsAzurePack2013WebSitesCloudAdmin" Value="CloudAdmin" />
      <Variable Name="WindowsAzurePack2013WebSitesCloudAdminPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesDNSSuffix" Value="" Required="True" />
      <Variable Name="WindowsAzurePack2013WebSitesFileServerAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesFileServerAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesFileShareOwnerServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesFileShareOwnerServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesFileShareUserServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesFileShareUserServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesCertificateShareUserServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesCertificateShareUserServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesContentShareName" Value="WebSites" />
      <Variable Name="WindowsAzurePack2013WebSitesContentSharePath" Value="$SystemDrive\WebSites" />
      <Variable Name="WindowsAzurePack2013WebSitesCertificateShareName" Value="Certificates" />
      <Variable Name="WindowsAzurePack2013WebSitesCertificateSharePath" Value="$SystemDrive\Certificates" />
      <Variable Name="WindowsAzurePack2013WebSitesManagementServerAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesManagementServerAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesPublisherAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesPublisherAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesFrontEndAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesFrontEndAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesWorkerAdminServiceAccount" Value="$InstallerServiceAccount" />
      <Variable Name="WindowsAzurePack2013WebSitesWorkerAdminServiceAccountPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="WindowsAzurePack2013WebSitesManagementServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013WebSitesManagementServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013WebSitesManagementServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013WebSitesFrontEndServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013WebSitesFrontEndServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013WebSitesFrontEndServerNLBConfig" Value="False" />
      <Variable Name="WindowsAzurePack2013WebSitesPublisherServerNLBName" Value="" />
      <Variable Name="WindowsAzurePack2013WebSitesPublisherServerNLBIPv4" Value="" />
      <Variable Name="WindowsAzurePack2013WebSitesPublisherServerNLBConfig" Value="False" />
    </Component>
    <Component Name="SQL Server 2008 R2">
    </Component>
    <Component Name="SQL Server 2012">
      <Variable Name="SQLServer2012ServerAdminGroup" Value="" Principal="True" />
    </Component>
  </Components>
  <SQL>
    <SQL Version="SQL Server 2008 R2">
      <Variable Name="SQLInstallSharedDir" Value="$SystemDrive\Program Files\Microsoft SQL Server" />
      <Variable Name="SQLInstallSharedWOWDir" Value="$SystemDrive\Program Files (x86)\Microsoft SQL Server" />
      <Variable Name="SQLInstanceDir" Value="$SystemDrive\Program Files\Microsoft SQL Server" />
      <Variable Name="SQLSecurityMode" Value="SQL" />
      <Variable Name="SQLSAPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SQLAdmins" Value="" Required="True" Principal="True" />
      <Variable Name="SQLAgtServiceAccount" Value="" />
      <Variable Name="SQLAgtServiceAccountPassword" Value="" />
      <Variable Name="SQLServiceAccount" Value="" />
      <Variable Name="SQLServiceAccountPassword" Value="" />
      <Variable Name="SQLASServiceAccount" Value="" />
      <Variable Name="SQLASServiceAccountPassword" Value="" />
      <Variable Name="SQLRSServiceAccount" Value="" />
      <Variable Name="SQLRSServiceAccountPassword" Value="" />
      <Variable Name="SQLInstallSQLDataDir" Value="$SystemDrive\Program Files\Microsoft SQL Server" />
      <Variable Name="SQLUserDBDir" Value="$SQLInstallSQLDataDir\MSSQL10_50.$Instance\MSSQL\Data" />
      <Variable Name="SQLUserDBLogDir" Value="$SQLInstallSQLDataDir\MSSQL10_50.$Instance\MSSQL\Data" />
      <Variable Name="SQLTempDBDir" Value="$SQLInstallSQLDataDir\MSSQL10_50.$Instance\MSSQL\Data" />
      <Variable Name="SQLTempDBLogDir" Value="$SQLInstallSQLDataDir\MSSQL10_50.$Instance\MSSQL\Data" />
      <Variable Name="SQLBackupDir" Value="$SQLInstallSQLDataDir\MSSQL10_50.$Instance\MSSQL\Data" />
      <Variable Name="SQLASDataDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS10_50.$Instance\OLAP\Data" />
      <Variable Name="SQLASLogDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS10_50.$Instance\OLAP\Log" />
      <Variable Name="SQLASBackupDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS10_50.$Instance\OLAP\Backup" />
      <Variable Name="SQLASTempDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS10_50.$Instance\OLAP\Temp" />
    </SQL>
    <SQL Version="SQL Server 2012">
      <Variable Name="SQLInstallSharedDir" Value="$SystemDrive\Program Files\Microsoft SQL Server" />
      <Variable Name="SQLInstallSharedWOWDir" Value="$SystemDrive\Program Files (x86)\Microsoft SQL Server" />
      <Variable Name="SQLInstanceDir" Value="$SystemDrive\Program Files\Microsoft SQL Server" />
      <Variable Name="SQLSecurityMode" Value="SQL" />
      <Variable Name="SQLSAPassword" Value="$InstallerServiceAccountPassword" />
      <Variable Name="SQLAdmins" Value="" Required="True" Cluster="True" Principal="True" />
      <Variable Name="SQLAgtServiceAccount" Value="" Cluster="True" />
      <Variable Name="SQLAgtServiceAccountPassword" Value="" Cluster="True" />
      <Variable Name="SQLServiceAccount" Value="" Cluster="True" />
      <Variable Name="SQLServiceAccountPassword" Value="" Cluster="True" />
      <Variable Name="SQLASServiceAccount" Value="" />
      <Variable Name="SQLASServiceAccountPassword" Value="" />
      <Variable Name="SQLInstallSQLDataDir" Value="$SystemDrive\Program Files\Microsoft SQL Server" Cluster="True" />
      <Variable Name="SQLUserDBDir" Value="$SQLInstallSQLDataDir\MSSQL11.$Instance\MSSQL\Data" Cluster="True" />
      <Variable Name="SQLUserDBLogDir" Value="$SQLInstallSQLDataDir\MSSQL11.$Instance\MSSQL\Data" Cluster="True" />
      <Variable Name="SQLTempDBDir" Value="$SQLInstallSQLDataDir\MSSQL11.$Instance\MSSQL\Data" Cluster="True" />
      <Variable Name="SQLTempDBLogDir" Value="$SQLInstallSQLDataDir\MSSQL11.$Instance\MSSQL\Data" Cluster="True" />
      <Variable Name="SQLBackupDir" Value="$SQLInstallSQLDataDir\MSSQL11.$Instance\MSSQL\Data" Cluster="True" />
      <Variable Name="SQLASDataDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS11.$Instance\OLAP\Data" />
      <Variable Name="SQLASLogDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS11.$Instance\OLAP\Log" />
      <Variable Name="SQLASBackupDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS11.$Instance\OLAP\Backup" />
      <Variable Name="SQLASTempDir" Value="$SystemDrive\Program Files\Microsoft SQL Server\MSAS11.$Instance\OLAP\Temp" />
      <Variable Name="SQLClusterIPAddress" Value="" />
      <Variable Name="SQLClusterNetwork" Value="Cluster Network 1" Cluster="True" />
      <Variable Name="SQLClusterIPSubnet" Value="" />
      <Variable Name="SQLClusterDisks" Value="" />
    </SQL>
  </SQL>
  <Roles>
    <Role Name="SQL Server 2012 Database Server" Component="SQL Server 2012" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SQLServer2012ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="SQL Server 2012 Reporting Server" Component="SQL Server 2012" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SQLServer2012ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>RS</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="SQL Server 2012 Analysis Server" Component="SQL Server 2012" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SQLServer2012ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>AS</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="SQL Server 2012 Fulltext" Component="SQL Server 2012" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SQLServer2012ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="SQL Server 2012 Management Tools" Component="SQL Server 2012">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Site Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Install Installable="SQL Server 2012" Install="SQL Server 2012 Management Tools" />
    </Role>
    <Role Name="SQL Server 2012 Management Tools Shell Setup" Component="SQL Server 2012" Type="Integration">
      <Install Installable="SQL Server 2012" Install="SQL Server 2012 Management Tools Shell Setup" />
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Database Server" Component="System Center 2012 SP1 Orchestrator" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Management Server" Component="System Center 2012 SP1 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 SP1 Orchestrator Database Server" />
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Orchestrator Management Server" />
      <Firewall>
        <Rule Type="Application" Value="$OrchestratorInstallDir\Management Server\ManagementService.exe" />
      </Firewall>
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Primary Runbook Server" Component="System Center 2012 SP1 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 SP1 Orchestrator Management Server" />
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Orchestrator Runbook Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Web Components Server" Component="System Center 2012 SP1 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Static Content Compression" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Orchestrator Management Server" />
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Orchestrator Web Components Server" />
      <Firewall>
        <Rule Type="Port" Value="TCP/$OrchestratorWebServicePort" />
      </Firewall>
      <Firewall>
        <Rule Type="Port" Value="TCP/$OrchestratorWebConsolePort" />
      </Firewall>
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Standby Runbook Server" Component="System Center 2012 SP1 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 SP1 Orchestrator Primary Runbook Server" />
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Orchestrator Runbook Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Runbook Designer" Component="System Center 2012 SP1 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Console</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Orchestrator Runbook Designer" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Provider Foundation Database Server" Component="System Center 2012 SP1 Service Provider Foundation" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <SQL>
          <Port>True</Port>
        </SQL>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Service Provider Foundation Server" Component="System Center 2012 SP1 Service Provider Foundation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Certificate>True</Certificate>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Management OData IIS Extension" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="System Center 2012 SP1 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012SP1ServiceProviderFoundationServer -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Database Server" />
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Service Provider Foundation Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Provider Foundation Additional Server" Component="System Center 2012 SP1 Service Provider Foundation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Certificate>True</Certificate>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Management OData IIS Extension" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="System Center 2012 SP1 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012SP1ServiceProviderFoundationServer -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Server" />
      <Install Installable="System Center 2012 SP1 Orchestrator" Install="System Center 2012 SP1 Service Provider Foundation Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Database Server" Component="System Center 2012 SP1 Virtual Machine Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Additional Server</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Management Server" Component="System Center 2012 SP1 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Memory>2000</Memory>
        <Combinations>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Additional Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1VirtualMachineManagerServiceAccount" />
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012SP1VirtualMachineManagerManagementServer -ne $SystemCenter2012SP1VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools" />
        <Prerequisite Name="Windows Preinstallation Environment" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Database Server" />
      <Install Installable="System Center 2012 SP1 Virtual Machine Manager" Install="System Center 2012 SP1 Virtual Machine Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" Component="System Center 2012 SP1 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Memory>2000</Memory>
        <Combinations>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <Cluster>System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server</Cluster>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1VirtualMachineManagerServiceAccount" />
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="RSAT Clustering Powershell" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012SP1VirtualMachineManagerClusterActiveManagementServer -ne $SystemCenter2012SP1VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools" />
        <Prerequisite Name="Windows Preinstallation Environment" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Database Server" />
      <Install Installable="System Center 2012 SP1 Virtual Machine Manager" Install="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server" Component="System Center 2012 SP1 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Memory>2000</Memory>
        <Combinations>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1VirtualMachineManagerServiceAccount" />
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="RSAT Clustering Powershell" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012SP1VirtualMachineManagerClusterPassiveManagementServer -ne $SystemCenter2012SP1VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools" />
        <Prerequisite Name="Windows Preinstallation Environment" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
      <Install Installable="System Center 2012 SP1 Virtual Machine Manager" Install="System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Console" Component="System Center 2012 SP1 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Additional Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 App Controller Console</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Windows Management Framework 3.0 - Windows 6.1 x64" />
      </Prerequisites>
      <Condition>$SystemCenter2012SP1VirtualMachineManagerConsole -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
      <Install Installable="System Center 2012 SP1 Virtual Machine Manager" Install="System Center 2012 SP1 Virtual Machine Manager Console" />
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Database Server" Component="System Center 2012 SP1 App Controller" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Additional Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <SQL>
          <Port>True</Port>
        </SQL>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Server" Component="System Center 2012 SP1 App Controller">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="AS TCP Activation" />
        <ServerFeature Name="AS Named Pipes Activation" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS ASP.NET" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name=".NET HTTP Activation" />
        <ServerFeature Name=".NET Non-HTTP Activation" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="Windows Identity Foundation" />
      </ServerFeatures>      
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full"></Prerequisite>
        <Prerequisite Name="Windows Management Framework 3.0 - Windows 6.1 x64" />
        <Prerequisite Name="Windows Identity Foundation 3.5 - Windows 6.1 x64" />
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 SP1 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012SP1AppControllerServer -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 SP1 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012SP1AppControllerServer -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 App Controller Database Server" />
      <Install Installable="System Center 2012 SP1 App Controller" Install="System Center 2012 SP1 App Controller Server" />
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Additional Server" Component="System Center 2012 SP1 App Controller">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="AS TCP Activation" />
        <ServerFeature Name="AS Named Pipes Activation" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS ASP.NET" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name=".NET HTTP Activation" />
        <ServerFeature Name=".NET Non-HTTP Activation" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="Windows Identity Foundation" />
      </ServerFeatures>      
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full"></Prerequisite>
        <Prerequisite Name="Windows Management Framework 3.0 - Windows 6.1 x64" />
        <Prerequisite Name="Windows Identity Foundation 3.5 - Windows 6.1 x64" />
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 SP1 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012SP1AppControllerServer -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 SP1 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012SP1AppControllerServer -ne $SystemCenter2012SP1VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 App Controller Server" />
      <Install Installable="System Center 2012 SP1 App Controller" Install="System Center 2012 SP1 App Controller Additional Server" />
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Console" Component="System Center 2012 SP1 App Controller">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Additional Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
        </Combinations>
      </Validation>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Database Server" Component="System Center 2012 SP1 Operations Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Datawarehouse Server" Component="System Center 2012 SP1 Operations Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Management Server" Component="System Center 2012 SP1 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerActionServiceAccount" />
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerDASServiceAccount" />
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Operations Manager Database Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Datawarehouse Server" />
      <Install Installable="System Center 2012 SP1 Operations Manager" Install="System Center 2012 SP1 Operations Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Additional Management Server" Component="System Center 2012 SP1 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerActionServiceAccount" />
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerDASServiceAccount" />
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Operations Manager" Install="System Center 2012 SP1 Operations Manager Additional Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Reporting Server" Component="System Center 2012 SP1 Operations Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
      </Prerequisites>
      <SQL Version="SQL Server 2008 R2">
        <Feature>RS</Feature>
        <Feature>AS</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>RS</Feature>
        <Feature>AS</Feature>
        <Collation>Default</Collation>
      </SQL>
      <Dependency Name="System Center 2012 SP1 Operations Manager Datawarehouse Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Operations Manager" Install="System Center 2012 SP1 Operations Manager Reporting Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Web Console Server" Component="System Center 2012 SP1 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS ASP.NET" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name=".NET HTTP Activation" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Application Development" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Operations Manager" Install="System Center 2012 SP1 Operations Manager Web Console Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Console" Component="System Center 2012 SP1 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Console</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
      </Prerequisites>
      <Install Installable="System Center 2012 SP1 Operations Manager" Install="System Center 2012 SP1 Operations Manager Console" />
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Database Server" Component="System Center 2012 SP1 Configuration Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Site Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="Computer" Account="SystemCenter2012SP1ConfigurationManagerSiteServer"></Admin>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Provider Server" Component="System Center 2012 SP1 Configuration Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Site Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="Computer" Account="SystemCenter2012SP1ConfigurationManagerSiteServer"></Admin>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Windows Deployment Tools" />
        <Prerequisite Name="Windows Preinstallation Environment" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Windows Deployment Tools" />
        <Prerequisite Name="Windows Preinstallation Environment" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Configuration Manager Database Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Site Server" Component="System Center 2012 SP1 Configuration Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS HTTP Redirection" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Logging Tools" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="IIS 6 WMI Compatibility" />
        <ServerFeature Name="BITS IIS Server Extension" />
        <ServerFeature Name="Remote Differential Compression" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Redirection" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Logging Tools" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="IIS 6 WMI Compatibility" />
        <ServerFeature Name="BITS IIS Server Extension" />
        <ServerFeature Name="Remote Differential Compression" />
        <ServerFeature Name="Update Services API" />
        <ServerFeature Name="Update Services Console" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="User State Migration Tool" />
        <Prerequisite Name="Windows Server Update Services 3.0 SP2 Console" />
        <Prerequisite Name="System Center 2012 SP1 Configuration Manager Prerequisites" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User State Migration Tool" />
        <Prerequisite Name="System Center 2012 SP1 Configuration Manager Prerequisites" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Configuration Manager Database Server" />
      <Dependency Name="System Center 2012 SP1 Configuration Manager Provider Server" />
      <Install Installable="System Center 2012 SP1 Configuration Manager" Install="System Center 2012 SP1 Configuration Manager Site Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Console" Component="System Center 2012 SP1 Configuration Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Site Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Console</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
        </Combinations>
      </Validation>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
      </Prerequisites>
      <Install Installable="System Center 2012 SP1 Configuration Manager" Install="System Center 2012 SP1 Configuration Manager Console" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Database Server" Component="System Center 2012 SP1 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Locale</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Datawarehouse Server" Component="System Center 2012 SP1 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Locale</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Analysis Server" Component="System Center 2012 SP1 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>AS</Feature>
        <Collation>Locale</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>AS</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Reporting Server" Component="System Center 2012 SP1 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>RS</Feature>
        <Collation>Locale</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>RS</Feature>
        <Collation>Locale</Collation>
      </SQL>
      <Dependency Name="System Center 2012 SP1 Service Manager Datawarehouse Server" />
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager Reporting Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Management Server" Component="System Center 2012 SP1 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1ServiceManagerServicesServiceAccount" />
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2008 R2 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2008 R2')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2012')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2008 R2 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2008 R2')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2012')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Manager Database Server" />
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Datawarehouse Management Server" Component="System Center 2012 SP1 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1ServiceManagerServicesServiceAccount" />
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="SQL Server 2008 R2 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerAnalysisServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseVersion -eq 'SQL Server 2008 R2')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerAnalysisServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseVersion -eq 'SQL Server 2012')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2008 R2 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerAnalysisServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseVersion -eq 'SQL Server 2008 R2')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatawarehouseServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerAnalysisServer -ne $SystemCenter2012SP1ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatawarehouseVersion -eq 'SQL Server 2012')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Manager Datawarehouse Server" />
      <Dependency Name="System Center 2012 SP1 Service Manager Reporting Server" />
      <Dependency Name="System Center 2012 SP1 Service Manager Analysis Server" />
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager Datawarehouse Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Additional Management Server" Component="System Center 2012 SP1 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012SP1ServiceManagerServicesServiceAccount" />
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2008 R2 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2008 R2')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2012')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2008 R2 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2008 R2')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012SP1ServiceManagerDatabaseServer -ne $SystemCenter2012SP1ServiceManagerManagementServer) -and ($SystemCenter2012SP1ServiceManagerDatabaseVersion -eq 'SQL Server 2012')</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager Additional Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Web Content Server" Component="System Center 2012 SP1 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS ASP.NET" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Management Console" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager Web Content Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager SharePoint Web Parts Server" Component="System Center 2012 SP1 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET HTTP Activation" />
        <ServerFeature Name=".NET Non-HTTP Activation" />
        <ServerFeature Name="AS .NET Framework 3.5.1" />
        <ServerFeature Name="AS Web Server (IIS) Support" />
        <ServerFeature Name="AS TCP Port Sharing" />
        <ServerFeature Name="AS HTTP Activation" />
        <ServerFeature Name="AS Message Queuing Activation" />
        <ServerFeature Name="AS TCP Activation" />
        <ServerFeature Name="AS Named Pipes Activation" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS HTTP Redirection" />
        <ServerFeature Name="IIS ASP.NET" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ASP" />
        <ServerFeature Name="IIS CGI" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Server Side Includes" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Logging Tools" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Digest Authentication" />
        <ServerFeature Name="IIS Client Certificate Mapping Authentication" />
        <ServerFeature Name="IIS IIS Client Certificate Mapping Authentication" />
        <ServerFeature Name="IIS URL Authorization" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS IP and Domain Restrictions" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS Management Service" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="IIS 6 WMI Compatibility" />
        <ServerFeature Name="IIS 6 Scripting Tools" />
        <ServerFeature Name="IIS 6 Management Console" />
        <ServerFeature Name="Message Queuing Server" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="SQL Server 2008 Native Client" />
        <Prerequisite Name="Windows Identity Foundation 3.5 - Windows 6.1 x64" />
        <Prerequisite Name="Sync Framework Runtime 1.0" />
        <Prerequisite Name="Microsoft Chart Controls" />
        <Prerequisite Name="Filter Pack 2.0" />
        <Prerequisite Name="SQL Server 2008 Analysis Services ADOMD.NET" />
        <Prerequisite Name="Server Speech Platform Runtime" />
        <Prerequisite Name="Server Speech Recognition Language en-US" />
        <Prerequisite Name="SQL Server 2008 R2 SP2 SSRS" />
        <Prerequisite Name="SharePoint 2010 Module misc" />
        <Prerequisite Name="SharePoint 2010 Module setup" />
        <Prerequisite Name="SharePoint 2010 Foundation" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Service Manager Web Content Server" />
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager SharePoint Web Parts Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Console" Component="System Center 2012 SP1 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Service Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Console</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Report Viewer 2008 Redistributable" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects" />
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2008 Redistributable" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects" />
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Condition>$SystemCenter2012SP1ServiceManagerConsole -ne $SystemCenter2012SP1ServiceManagerManagementServer</Condition>
      <Install Installable="System Center 2012 SP1 Service Manager" Install="System Center 2012 SP1 Service Manager Console" />
    </Role>
    <Role Name="System Center 2012 SP1 Data Protection Manager Database Server" Component="System Center 2012 SP1 Data Protection Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Data Protection Manager Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Feature>RS</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>RS</Feature>
        <Collation>Default</Collation>
      </SQL>
      <Condition>$SystemCenter2012SP1DataProtectionManagerDatabaseServer -ne $SystemCenter2012SP1DataProtectionManagerServer</Condition>
      <Install Installable="System Center 2012 SP1 Data Protection Manager" Install="System Center 2012 SP1 Data Protection Manager Database Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Data Protection Manager Server" Component="System Center 2012 SP1 Data Protection Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Data Protection Manager Database Server</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Single Instance Storage" />
        <Prerequisite Name="SQL Server 2008 R2 Management Tools" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Single Instance Storage" />
        <Prerequisite Name="SQL Server 2008 R2 Management Tools" />
      </Prerequisites>
      <Multiple>Sequential</Multiple>
      <Dependency Name="System Center 2012 SP1 Data Protection Manager Database Server" />
      <Install Installable="System Center 2012 SP1 Data Protection Manager" Install="System Center 2012 SP1 Data Protection Manager Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Data Protection Manager Console" Component="System Center 2012 SP1 Data Protection Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 SP1 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 Data Protection Manager Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 SP1 App Controller Console</Combination>
          <Combination>System Center 2012 SP1 Operations Manager Console</Combination>
          <Combination>System Center 2012 SP1 Configuration Manager Console</Combination>
          <Combination>System Center 2012 SP1 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2008 R2 Management Tools</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="Visual C++ 2008 Redistributable" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Visual C++ 2008 Redistributable" />
      </Prerequisites>
      <Condition>$SystemCenter2012SP1DataProtectionManagerConsole -ne $SystemCenter2012SP1DataProtectionManagerServer</Condition>
      <Install Installable="System Center 2012 SP1 Data Protection Manager" Install="System Center 2012 SP1 Data Protection Manager Console" />
    </Role>
    <Role Name="Windows Azure Services 2012 Database Server" Component="Windows Azure Services 2012" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
          <OperatingSystem>6.1.7601</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
        </Combinations>
        <SQL>
          <Instance>MSSQLSERVER</Instance>
        </SQL>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2008 R2">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="Windows Azure Services 2012 AdminAPI Server" Component="Windows Azure Services 2012">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="IIS Management Service" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 3" />
        <Prerequisite Name="MySQL Connector Net 6.5.4" />
      </Prerequisites>
      <Dependency Name="Windows Azure Services 2012 Database Server" />
      <Install Installable="Windows Azure Services 2012" Install="Windows Azure Services 2012 AdminAPI Server" />
    </Role>
    <Role Name="Windows Azure Services 2012 TenantAPI Server" Component="Windows Azure Services 2012">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="IIS Management Service" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 3" />
      </Prerequisites>
      <Dependency Name="Windows Azure Services 2012 AdminAPI Server" />
      <Install Installable="Windows Azure Services 2012" Install="Windows Azure Services 2012 TenantAPI Server" />
    </Role>
    <Role Name="Windows Azure Services 2012 TenantPublicAPI Server" Component="Windows Azure Services 2012">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="IIS Management Service" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 3" />
      </Prerequisites>
      <Dependency Name="Windows Azure Services 2012 TenantAPI Server" />
      <Install Installable="Windows Azure Services 2012" Install="Windows Azure Services 2012 TenantPublicAPI Server" />
    </Role>
    <Role Name="Windows Azure Services 2012 AdminSite Server" Component="Windows Azure Services 2012">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantSite Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET MVC 3" />
        <Prerequisite Name="URL Rewrite 2" />
      </Prerequisites>
      <Dependency Name="Windows Azure Services 2012 TenantPublicAPI Server" />
      <Install Installable="Windows Azure Services 2012" Install="Windows Azure Services 2012 AdminSite Server" />
    </Role>
    <Role Name="Windows Azure Services 2012 TenantSite Server" Component="Windows Azure Services 2012">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Services 2012 Database Server</Combination>
          <Combination>Windows Azure Services 2012 AdminAPI Server</Combination>
          <Combination>Windows Azure Services 2012 AdminSite Server</Combination>
          <Combination>Windows Azure Services 2012 TenantAPI Server</Combination>
          <Combination>Windows Azure Services 2012 TenantPublicAPI Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 SP1 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 SP1 App Controller Database Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 SP1 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 SP1 Service Provider Foundation Additional Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET MVC 3" />
        <Prerequisite Name="URL Rewrite 2" />
      </Prerequisites>
      <Dependency Name="Windows Azure Services 2012 AdminSite Server" />
      <Install Installable="Windows Azure Services 2012" Install="Windows Azure Services 2012 TenantSite Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Cluster Integration" Component="System Center 2012 SP1 Service Provider Foundation" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Cluster Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Integration" Component="System Center 2012 SP1 Service Provider Foundation" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Virtual Machine Manager Cluster Integration" Component="System Center 2012 SP1 App Controller" Type="Integration">
      <Dependency Name="System Center 2012 SP1 App Controller Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 App Controller Virtual Machine Manager Cluster Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Virtual Machine Manager Integration" Component="System Center 2012 SP1 App Controller" Type="Integration">
      <Dependency Name="System Center 2012 SP1 App Controller Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 App Controller Virtual Machine Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Datawarehouse Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Service Manager Datawarehouse Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Datawarehouse Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Operations Manager Datawarehouse Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Datawarehouse Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Operations Manager Datawarehouse Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Service Manager Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Configuration Manager Site Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Configuration Manager Service Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Service Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Orchestrator Web Components Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Orchestrator Service Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Orchestrator Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Orchestrator Web Components Server" />
      <Dependency Name="System Center 2012 SP1 Orchestrator Service Manager Connector Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Orchestrator Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Cluster Service Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1ServiceManagerServicesServiceAccount" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Virtual Machine Manager Cluster Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Service Manager Connector Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Virtual Machine Manager Cluster Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Service Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1ServiceManagerServicesServiceAccount" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Virtual Machine Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Service Manager Connector Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Virtual Machine Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration" Component="System Center 2012 SP1 Operations Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1VirtualMachineManagerServiceAccount" />
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="System Center 2012 SP1 Management Packs" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="System Center 2012 SP1 Management Packs" />
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Operations Manager Integration" Component="System Center 2012 SP1 Virtual Machine Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerActionServiceAccount" />
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
        <Prerequisite Name="System Center 2012 SP1 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2008 R2 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
        <Prerequisite Name="System Center 2012 SP1 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2008 R2 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Virtual Machine Manager Cluster Operations Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Cluster Passive Operations Manager Integration" Component="System Center 2012 SP1 Virtual Machine Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerActionServiceAccount" />
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
        <Prerequisite Name="System Center 2012 SP1 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2008 R2 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
        <Prerequisite Name="System Center 2012 SP1 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2008 R2 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Operations Manager Integration" Component="System Center 2012 SP1 Virtual Machine Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1OperationsManagerActionServiceAccount" />
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
        <Prerequisite Name="System Center 2012 SP1 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2008 R2 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2010 Redistributable" />
        <Prerequisite Name="System Center 2012 SP1 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2008 R2 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Virtual Machine Manager Operations Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Service Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012SP1ServiceManagerServicesServiceAccount" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Operations Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Service Manager Connector Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Operations Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Operations Manager Alert Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Operations Manager Service Manager Connector Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Operations Manager Alert Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Configuration Manager Connector Integration" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Service Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Configuration Manager Site Server" />
      <Dependency Name="System Center 2012 SP1 Configuration Manager Service Manager Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Service Manager Configuration Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Data Protection Manager Virtual Machine Manager Integration" Component="System Center 2012 SP1 Data Protection Manager" Type="Integration">
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name=".NET Framework 4.0 Full" />
        <Prerequisite Name="Windows Management Framework 3.0 - Windows 6.1 x64" />
      </Prerequisites>
      <Install Installable="System Center 2012 SP1 Virtual Machine Manager" Install="System Center 2012 SP1 Virtual Machine Manager Console" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Data Protection Manager Integration" Component="System Center 2012 SP1 Operations Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Data Protection Manager" Install="System Center 2012 SP1 Operations Manager Data Protection Manager Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Integration" Component="System Center 2012 SP1 Data Protection Manager" Type="Integration">
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 SP1 Operations Manager Data Protection Manager Integration" />
      <Install Installable="System Center 2012 SP1 Data Protection Manager" Install="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Roles Integration" Component="System Center 2012 SP1 Data Protection Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Integration" Install="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Roles Integration" />
    </Role>
    <Role Name="Windows Azure Services 2012 System Center 2012 SP1 Service Provider Foundation Integration" Component="Windows Azure Services 2012" Type="Integration">
      <Dependency Name="Windows Azure Services 2012 AdminAPI Server" />
      <Dependency Name="Windows Azure Services 2012 TenantAPI Server" />
      <Dependency Name="Windows Azure Services 2012 TenantPublicAPI Server" />
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Server" />
      <Install Installable="System Center 2012 SP1 Integration" Install="Windows Azure Services 2012 System Center 2012 SP1 Service Provider Foundation Integration" />
    </Role>
    <Role Name="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Integration" Component="Windows Azure Services 2012" Type="Integration">
      <Dependency Name="Windows Azure Services 2012 AdminAPI Server" />
      <Dependency Name="Windows Azure Services 2012 TenantAPI Server" />
      <Dependency Name="Windows Azure Services 2012 TenantPublicAPI Server" />
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Management Server" />
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Integration" />
    </Role>
    <Role Name="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Cluster Integration" Component="Windows Azure Services 2012" Type="Integration">
      <Dependency Name="Windows Azure Services 2012 AdminAPI Server" />
      <Dependency Name="Windows Azure Services 2012 TenantAPI Server" />
      <Dependency Name="Windows Azure Services 2012 TenantPublicAPI Server" />
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server" />
      <Dependency Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Cluster Integration" />
      <Install Installable="System Center 2012 SP1 Integration" Install="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Cluster Integration" />
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Admin Group" Component="System Center 2012 SP1 Orchestrator" Type="Integration">
      <Condition>($SystemCenter2012SP1OrchestratorAdminGroup -ne "") -and ($SystemCenter2012SP1OrchestratorAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Orchestrator Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Admin Group" Component="System Center 2012 SP1 Virtual Machine Manager" Type="Integration">
      <Condition>($SystemCenter2012SP1VirtualMachineManagerAdminGroup -ne "") -and ($SystemCenter2012SP1VirtualMachineManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Virtual Machine Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Cluster Admin Group" Component="System Center 2012 SP1 Virtual Machine Manager" Type="Integration">
      <Condition>($SystemCenter2012SP1VirtualMachineManagerAdminGroup -ne "") -and ($SystemCenter2012SP1VirtualMachineManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Virtual Machine Manager Cluster Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 App Controller Admin Group" Component="System Center 2012 SP1 App Controller" Type="Integration">
      <Condition>($SystemCenter2012SP1AppControllerAdminGroup -ne "") -and ($SystemCenter2012SP1AppControllerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 App Controller Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Admin Group" Component="System Center 2012 SP1 Operations Manager" Type="Integration">
      <Condition>($SystemCenter2012SP1OperationsManagerAdminGroup -ne "") -and ($SystemCenter2012SP1OperationsManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Operations Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Admin Group" Component="System Center 2012 SP1 Configuration Manager" Type="Integration">
      <Dependency Name="System Center 2012 SP1 Configuration Manager Site Server" />
      <Condition>($SystemCenter2012SP1ConfigurationManagerAdminGroup -ne "") -and ($SystemCenter2012SP1ConfigurationManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Configuration Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 Data Protection Manager Admin Group" Component="System Center 2012 SP1 Data Protection Manager" Type="Integration">
      <Condition>($SystemCenter2012SP1DataProtectionManagerAdminGroup -ne "") -and ($SystemCenter2012SP1DataProtectionManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Data Protection Manager Admin Group" />
    </Role>
    <Role Name="Windows Azure Services 2012 Admin Group" Component="Windows Azure Services 2012" Type="Integration">
      <Condition>($WindowsAzureServices2012AdminGroup -ne "") -and ($WindowsAzureServices2012AdminGroup -ne $Null)</Condition>
      <Install Installable="Windows Azure Services 2012" Install="Windows Azure Services 2012 Admin Group" />
    </Role>
    <Role Name="System Center 2012 SP1 Orchestrator Shell Setup" Component="System Center 2012 SP1 Orchestrator" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Orchestrator Shell Setup" />
    </Role>
    <Role Name="System Center 2012 SP1 Virtual Machine Manager Shell Setup" Component="System Center 2012 SP1 Virtual Machine Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Virtual Machine Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 SP1 Operations Manager Shell Setup" Component="System Center 2012 SP1 Operations Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Operations Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 SP1 Configuration Manager Shell Setup" Component="System Center 2012 SP1 Configuration Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Configuration Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 SP1 Service Manager Shell Setup" Component="System Center 2012 SP1 Service Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Service Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 SP1 Data Protection Manager Shell Setup" Component="System Center 2012 SP1 Data Protection Manager" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="System Center 2012 SP1 Data Protection Manager Shell Setup" />
    </Role>
    <Role Name="SQL Server 2008 R2 Management Tools Shell Setup" Component="SQL Server 2008 R2" Type="Integration">
      <Install Installable="System Center 2012 SP1 Configuration" Install="SQL Server 2008 R2 Management Tools Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Database Server" Component="System Center 2012 R2 Virtual Machine Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Management Server" Component="System Center 2012 R2 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Memory>2000</Memory>
        <Combinations>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2VirtualMachineManagerManagementServer -ne $SystemCenter2012R2VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2VirtualMachineManagerManagementServer -ne $SystemCenter2012R2VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Database Server" />
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" Component="System Center 2012 R2 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Memory>2000</Memory>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
        <Cluster>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Cluster>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="RSAT Clustering Powershell" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="RSAT Clustering Powershell" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2VirtualMachineManagerClusterActiveManagementServer -ne $SystemCenter2012R2VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2VirtualMachineManagerManagementServer -ne $SystemCenter2012R2VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Database Server" />
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server" Component="System Center 2012 R2 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Memory>2000</Memory>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="RSAT Clustering Powershell" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="RSAT Clustering Powershell" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2VirtualMachineManagerClusterPassiveManagementServer -ne $SystemCenter2012R2VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2VirtualMachineManagerManagementServer -ne $SystemCenter2012R2VirtualMachineManagerDatabaseServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Command Line Utilities" />
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Console" Component="System Center 2012 R2 Virtual Machine Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Condition>$SystemCenter2012R2VirtualMachineManagerConsole -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Console" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Database Server" Component="System Center 2012 R2 Orchestrator" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OrchestratorServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Management Server" Component="System Center 2012 R2 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OrchestratorServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Orchestrator Database Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Management Server" />
      <Firewall>
        <Rule Type="Application" Value="$OrchestratorInstallDir\Management Server\ManagementService.exe" />
      </Firewall>
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Primary Runbook Server" Component="System Center 2012 R2 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OrchestratorServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Orchestrator Management Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Runbook Server" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Web Components Server" Component="System Center 2012 R2 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OrchestratorServerAdminGroup" />
      <!-- SCO Web Svcs Fix -->
      <Admin Type="User" Account="SystemCenter2012R2OrchestratorServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Orchestrator Management Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Web Components Server" />
      <Firewall>
        <Rule Type="Port" Value="TCP/$OrchestratorWebServicePort" />
      </Firewall>
      <Firewall>
        <Rule Type="Port" Value="TCP/$OrchestratorWebConsolePort" />
      </Firewall>
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Standby Runbook Server" Component="System Center 2012 R2 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OrchestratorServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Orchestrator Primary Runbook Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Runbook Server" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Runbook Designer" Component="System Center 2012 R2 Orchestrator">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Runbook Designer" />
    </Role>
    <Role Name="System Center 2012 R2 Service Provider Foundation Database Server" Component="System Center 2012 R2 Service Provider Foundation" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <SQL>
          <Port>True</Port>
        </SQL>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceProviderFoundationServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Provider Foundation Server" Component="System Center 2012 R2 Service Provider Foundation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceProviderFoundationServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Management OData IIS Extension" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="System Center 2012 R2 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012R2ServiceProviderFoundationServer -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Database Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Service Provider Foundation Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Provider Foundation Additional Server" Component="System Center 2012 R2 Service Provider Foundation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceProviderFoundationServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Management OData IIS Extension" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="System Center 2012 R2 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012R2ServiceProviderFoundationServer -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Service Provider Foundation Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Management Automation Database Server" Component="System Center 2012 R2 Service Management Automation" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagementAutomationServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Management Automation Web Service Server" Component="System Center 2012 R2 Service Management Automation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagementAutomationServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS URL Authorization" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS URL Authorization" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="System Center 2012 R2 Service Management Automation PowerShell Module" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="System Center 2012 R2 Service Management Automation PowerShell Module" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Management Automation Database Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Service Management Automation Web Service Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Management Automation Additional Web Service Server" Component="System Center 2012 R2 Service Management Automation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagementAutomationServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS URL Authorization" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS URL Authorization" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="System Center 2012 R2 Service Management Automation PowerShell Module" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="System Center 2012 R2 Service Management Automation PowerShell Module" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Management Automation Web Service Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Service Management Automation Web Service Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Management Automation Runbook Worker Server" Component="System Center 2012 R2 Service Management Automation">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagementAutomationServerAdminGroup" />
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="System Center 2012 R2 Service Management Automation PowerShell Module" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="System Center 2012 R2 Service Management Automation PowerShell Module" />
      </Prerequisites>
      <Multiple>Sequential</Multiple>
      <Dependency Name="System Center 2012 R2 Service Management Automation Web Service Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Service Management Automation Runbook Worker Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Reporting Datawarehouse Server" Component="System Center 2012 R2 Service Reporting" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceReportingServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>IS</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Reporting Analysis Server" Component="System Center 2012 R2 Service Reporting" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceReportingServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>AS</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Reporting Server" Component="System Center 2012 R2 Service Reporting">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceReportingServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name="PowerShell" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name="PowerShell" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects" />
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="SQL Server 2012 Shared Management Objects" />
        <Prerequisite Name="PowerShell Extensions for SQL Server 2012" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects" />
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="SQL Server 2012 Shared Management Objects" />
        <Prerequisite Name="PowerShell Extensions for SQL Server 2012" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Reporting Datawarehouse Server" />
      <Dependency Name="System Center 2012 R2 Service Reporting Analysis Server" />
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Service Reporting Server" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Database Server" Component="System Center 2012 R2 App Controller" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <SQL>
          <Port>True</Port>
        </SQL>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2AppControllerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 App Controller Server" Component="System Center 2012 R2 App Controller">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2AppControllerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="Windows Identity Foundation" />
      </ServerFeatures>      
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="Windows Identity Foundation" />
      </ServerFeatures>      
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 R2 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012R2AppControllerServer -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 R2 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012R2AppControllerServer -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 App Controller Database Server" />
      <Install Installable="System Center 2012 R2 App Controller" Install="System Center 2012 R2 App Controller Server" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Additional Server" Component="System Center 2012 R2 App Controller">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2AppControllerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="Windows Identity Foundation" />
      </ServerFeatures>      
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="ISAPI Filters" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="Windows Identity Foundation" />
      </ServerFeatures>      
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 R2 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012R2AppControllerServer -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="WCF Data Services 5.0" />
        <Prerequisite Name="System Center 2012 R2 Virtual Machine Manager Console">
          <Condition>$SystemCenter2012R2AppControllerServer -ne $SystemCenter2012R2VirtualMachineManagerManagementServer</Condition>
        </Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 App Controller Server" />
      <Install Installable="System Center 2012 R2 App Controller" Install="System Center 2012 R2 App Controller Additional Server" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Console" Component="System Center 2012 R2 App Controller">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
       </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2AppControllerServerAdminGroup" />
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Database Server" Component="System Center 2012 R2 Operations Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Datawarehouse Server" Component="System Center 2012 R2 Operations Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Management Server" Component="System Center 2012 R2 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <Compatibility>
          <IncompatibleSoftware Name="System Center 2012 R2 Service Manager">
            <Type>ProductCode</Type>
            <Value>{7B523367-360B-4EB6-9ED4-D2637816DD0F}</Value>
          </IncompatibleSoftware>
        </Compatibility>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerActionServiceAccount" />
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerDASServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Operations Manager Database Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Datawarehouse Server" />
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Additional Management Server" Component="System Center 2012 R2 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerActionServiceAccount" />
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerDASServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Additional Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Reporting Server" Component="System Center 2012 R2 Operations Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>RS</Feature>
        <Feature>AS</Feature>
        <Collation>Default</Collation>
      </SQL>
      <Dependency Name="System Center 2012 R2 Operations Manager Datawarehouse Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Reporting Server" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Web Console Server" Component="System Center 2012 R2 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Application Development" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Application Development" />
        <ServerFeature Name="IIS .NET Extensibility 3.5" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 3.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Web Console Server" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Console" Component="System Center 2012 R2 Operations Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Operations Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Operations Manager Web Console Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
      </Prerequisites>
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Console" />
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Database Server" Component="System Center 2012 R2 Configuration Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Site Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <SQL>
          <Port>True</Port>
        </SQL>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ConfigurationManagerServerAdminGroup" />
      <Admin Type="Computer" Account="SystemCenter2012R2ConfigurationManagerSiteServer"></Admin>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Provider Server" Component="System Center 2012 R2 Configuration Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Site Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ConfigurationManagerServerAdminGroup" />
      <Admin Type="Computer" Account="SystemCenter2012R2ConfigurationManagerSiteServer"></Admin>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Windows Deployment Tools 8.1" />
        <Prerequisite Name="Windows Preinstallation Environment 8.1" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Configuration Manager Database Server" />
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Site Server" Component="System Center 2012 R2 Configuration Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ConfigurationManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Redirection" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Logging Tools" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="IIS 6 WMI Compatibility" />
        <ServerFeature Name="BITS IIS Server Extension" />
        <ServerFeature Name="Remote Differential Compression" />
        <ServerFeature Name="Update Services API" />
        <ServerFeature Name="Update Services Console" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Redirection" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Logging Tools" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="IIS 6 WMI Compatibility" />
        <ServerFeature Name="BITS IIS Server Extension" />
        <ServerFeature Name="Remote Differential Compression" />
        <ServerFeature Name="Update Services API" />
        <ServerFeature Name="Update Services Console" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User State Migration Tool 8.1" />
        <Prerequisite Name="System Center 2012 R2 Configuration Manager Prerequisites" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User State Migration Tool 8.1" />
        <Prerequisite Name="System Center 2012 R2 Configuration Manager Prerequisites" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Configuration Manager Database Server" />
      <Dependency Name="System Center 2012 R2 Configuration Manager Provider Server" />
      <Install Installable="System Center 2012 R2 Configuration Manager" Install="System Center 2012 R2 Configuration Manager Site Server" />
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Console" Component="System Center 2012 R2 Configuration Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Configuration Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Provider Server</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Site Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <Install Installable="System Center 2012 R2 Configuration Manager" Install="System Center 2012 R2 Configuration Manager Console" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Database Server" Component="System Center 2012 R2 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Datawarehouse Server" Component="System Center 2012 R2 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Feature>FULLTEXT</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Analysis Server" Component="System Center 2012 R2 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>AS</Feature>
        <Collation>Locale</Collation>
      </SQL>
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Reporting Server" Component="System Center 2012 R2 Service Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Analysis Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <!-- ### Begin Report Deployment Fix ### -->
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
      <!-- ### End Report Deployment Fix ### -->
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>RS</Feature>
        <Collation>Locale</Collation>
      </SQL>
      <Dependency Name="System Center 2012 R2 Service Manager Datawarehouse Server" />
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Reporting Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Management Server" Component="System Center 2012 R2 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2ServiceManagerDatabaseServer -ne $SystemCenter2012R2ServiceManagerManagementServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2ServiceManagerDatabaseServer -ne $SystemCenter2012R2ServiceManagerManagementServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Manager Database Server" />
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Datawarehouse Management Server" Component="System Center 2012 R2 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseServer -ne $SystemCenter2012RwServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012R2ServiceManagerAnalysisServer -ne $SystemCenter2012R2ServiceManagerDatawarehouseManagementServer)</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>($SystemCenter2012R2ServiceManagerDatawarehouseServer -ne $SystemCenter2012R2ServiceManagerDatawarehouseManagementServer) -and ($SystemCenter2012R2ServiceManagerAnalysisServer -ne $SystemCenter2012R2ServiceManagerDatawarehouseManagementServer)</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Manager Datawarehouse Server" />
      <Dependency Name="System Center 2012 R2 Service Manager Reporting Server" />
      <Dependency Name="System Center 2012 R2 Service Manager Analysis Server" />
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Datawarehouse Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Additional Management Server" Component="System Center 2012 R2 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2ServiceManagerDatabaseServer -ne $SystemCenter2012R2ServiceManagerManagementServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable"></Prerequisite>
        <Prerequisite Name="SQL Server 2012 Native Client">
          <Condition>$SystemCenter2012R2ServiceManagerDatabaseServer -ne $SystemCenter2012R2ServiceManagerManagementServer</Condition>
        </Prerequisite>
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Additional Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Web Content Server" Component="System Center 2012 R2 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name=".NET HTTP Activation 4.5" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Web Content Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager SharePoint Web Parts Server" Component="System Center 2012 R2 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.1.7601</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.1.7601">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET HTTP Activation" />
        <ServerFeature Name=".NET Non-HTTP Activation" />
        <ServerFeature Name="AS .NET Framework 3.5.1" />
        <ServerFeature Name="AS Web Server (IIS) Support" />
        <ServerFeature Name="AS TCP Port Sharing" />
        <ServerFeature Name="AS HTTP Activation" />
        <ServerFeature Name="AS Message Queuing Activation" />
        <ServerFeature Name="AS TCP Activation" />
        <ServerFeature Name="AS Named Pipes Activation" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Directory Browsing" />
        <ServerFeature Name="IIS HTTP Errors" />
        <ServerFeature Name="IIS HTTP Redirection" />
        <ServerFeature Name="IIS ASP.NET" />
        <ServerFeature Name="IIS .NET Extensibility" />
        <ServerFeature Name="IIS ASP" />
        <ServerFeature Name="IIS CGI" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Server Side Includes" />
        <ServerFeature Name="IIS HTTP Logging" />
        <ServerFeature Name="IIS Logging Tools" />
        <ServerFeature Name="IIS Request Monitor" />
        <ServerFeature Name="IIS Tracing" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS Digest Authentication" />
        <ServerFeature Name="IIS Client Certificate Mapping Authentication" />
        <ServerFeature Name="IIS IIS Client Certificate Mapping Authentication" />
        <ServerFeature Name="IIS URL Authorization" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS IP and Domain Restrictions" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS Management Service" />
        <ServerFeature Name="IIS 6 Metabase Compatibility" />
        <ServerFeature Name="IIS 6 WMI Compatibility" />
        <ServerFeature Name="IIS 6 Scripting Tools" />
        <ServerFeature Name="IIS 6 Management Console" />
        <ServerFeature Name="Message Queuing Server" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.1.7601">
        <Prerequisite Name="SQL Server 2008 Native Client" />
        <Prerequisite Name="Windows Identity Foundation 3.5 - Windows 6.1 x64" />
        <Prerequisite Name="Sync Framework Runtime 1.0" />
        <Prerequisite Name="Microsoft Chart Controls" />
        <Prerequisite Name="Filter Pack 2.0" />
        <Prerequisite Name="SQL Server 2008 Analysis Services ADOMD.NET" />
        <Prerequisite Name="Server Speech Platform Runtime" />
        <Prerequisite Name="Server Speech Recognition Language en-US" />
        <Prerequisite Name="SQL Server 2008 R2 SP2 SSRS" />
        <Prerequisite Name="SharePoint 2010 Module misc" />
        <Prerequisite Name="SharePoint 2010 Module setup" />
        <Prerequisite Name="SharePoint 2010 Foundation" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Service Manager Web Content Server" />
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager SharePoint Web Parts Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Console" Component="System Center 2012 R2 Service Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Service Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Analysis Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Datawarehouse Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Additional Management Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Web Content Server</Combination>
          <Combination>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Report Viewer 2008 Redistributable" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects" />
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Report Viewer 2008 SP1 Redistributable" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects" />
        <Prerequisite Name="Silverlight" />
      </Prerequisites>
      <Condition>$SystemCenter2012R2ServiceManagerConsole -ne $SystemCenter2012R2ServiceManagerManagementServer</Condition>
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Console" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Datawarehouse Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Service Manager Datawarehouse Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Datawarehouse Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Database Server" Component="System Center 2012 R2 Data Protection Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2DataProtectionManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
      <Condition>$SystemCenter2012R2DataProtectionManagerDatabaseServer -ne $SystemCenter2012R2DataProtectionManagerServer</Condition>
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Data Protection Manager Database Server" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Reporting Server" Component="System Center 2012 R2 Data Protection Manager" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Server Graphical Shell</Name>
              <Validation>99</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2DataProtectionManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>RS</Feature>
        <Collation>Default</Collation>
      </SQL>
      <Dependency Name="System Center 2012 R2 Data Protection Manager Database Server" />
      <Condition>$SystemCenter2012R2DataProtectionManagerReportingServer -ne $SystemCenter2012R2DataProtectionManagerDatabaseServer</Condition>
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Data Protection Manager Reporting Server" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Server" Component="System Center 2012 R2 Data Protection Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="SystemCenter2012R2DataProtectionManagerServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Single Instance Storage" />
        <Prerequisite Name="SQL Server 2012 Management Tools" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Single Instance Storage" />
        <Prerequisite Name="SQL Server 2012 Management Tools" />
      </Prerequisites>
      <Multiple>Sequential</Multiple>
      <Dependency Name="System Center 2012 R2 Data Protection Manager Database Server" />
      <Dependency Name="System Center 2012 R2 Data Protection Manager Reporting Server" />
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Data Protection Manager Server" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Console" Component="System Center 2012 R2 Data Protection Manager">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>System Center 2012 R2 Data Protection Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Reporting Server</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
        </Combinations>
      </Validation>
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
      </Prerequisites>
      <Condition>$SystemCenter2012R2DataProtectionManagerConsole -ne $SystemCenter2012R2DataProtectionManagerServer</Condition>
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Data Protection Manager Console" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Database Server" Component="Windows Azure Pack 2013" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <SQL>
          <Port>True</Port>
        </SQL>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="Windows Azure Pack 2013 Admin API Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Web App Gallery Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Monitoring Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Usage Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Web App Gallery Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Monitoring Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Usage Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Database Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin API Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Admin API Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Web App Gallery Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Monitoring Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Usage Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Web App Gallery Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Monitoring Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Usage Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin API Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Tenant API Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant API Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Tenant API Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant API Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Tenant Public API Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Public API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Public API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Public API Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Tenant Public API Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Public API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x64" />
        <Prerequisite Name="Visual C++ 2010 Redistributable x86" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Public API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Tenant Public API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Public API Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 SQL Server Extension Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - SQL Server Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - SQL Server Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 SQL Server Extension Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional SQL Server Extension Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - SQL Server Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - SQL Server Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 SQL Server Extension Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 SQL Server Extension Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 MySQL Extension Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="MySQL Connector Net 6.5.4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - MySQL Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="MySQL Connector Net 6.5.4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - MySQL Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 MySQL Extension Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional MySQL Extension Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="MySQL Connector Net 6.5.4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - MySQL Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="MySQL Connector Net 6.5.4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - MySQL Extension" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 MySQL Extension Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 MySQL Extension Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Admin Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant Public API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Admin Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin Site Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Tenant Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant Public API Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Tenant Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Basic Authentication" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Tenant Site Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Admin Authentication Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin Site Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin Authentication Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Admin Authentication Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Admin Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin Authentication Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Tenant Authentication Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Tenant Site Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Authentication Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Additional Tenant Authentication Site Server" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Management Server</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 Service Reporting Server</Combination>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013ServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="URL Rewrite 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Tenant Authentication Site" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Tenant Authentication Site Server" />
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Authentication Site Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Console" Component="Windows Azure Pack 2013">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Orchestrator Management Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Primary Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Web Components Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Standby Runbook Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Additional Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Additional Web Service Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Runbook Worker Server</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Console</Combination>
          <Combination>System Center 2012 R2 Orchestrator Runbook Designer</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
          <Combination>System Center 2012 R2 Operations Manager Console</Combination>
          <Combination>System Center 2012 R2 Configuration Manager Console</Combination>
          <Combination>System Center 2012 R2 Service Manager Console</Combination>
          <Combination>System Center 2012 R2 Data Protection Manager Console</Combination>
          <Combination>System Center 2012 R2 App Controller Server</Combination>
          <Combination>System Center 2012 R2 App Controller Additional Server</Combination>
          <Combination>System Center 2012 R2 App Controller Console</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Database Server" Component="Windows Azure Pack 2013 Web Sites" SQL="True">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>6.3.9600</OperatingSystem>
          <OperatingSystem>6.2.9200</OperatingSystem>
        </OperatingSystems>
        <Combinations>
          <Combination>Windows Azure Pack 2013 Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant API Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Public API Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Admin Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Authentication Site Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional Tenant Site Server</Combination>
          <Combination>Windows Azure Pack 2013 SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional SQL Server Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Additional MySQL Extension Server</Combination>
          <Combination>Windows Azure Pack 2013 Console</Combination>
          <Combination>Windows Azure Pack 2013 Database Server</Combination>
          <Combination>Windows Azure Pack 2013 Web Sites Database Server</Combination>
          <Combination>SQL Server 2012 Management Tools</Combination>
          <Combination>System Center 2012 R2 Virtual Machine Manager Database Server</Combination>
          <Combination>System Center 2012 R2 Orchestrator Database Server</Combination>
          <Combination>System Center 2012 R2 Service Provider Foundation Database Server</Combination>
          <Combination>System Center 2012 R2 Service Management Automation Database Server</Combination>
          <Combination>System Center 2012 R2 App Controller Database Server</Combination>
          <Combination>SQL Server 2012 Database Server</Combination>
          <Combination>SQL Server 2012 Reporting Server</Combination>
          <Combination>SQL Server 2012 Analysis Server</Combination>
          <Combination>SQL Server 2012 Fulltext</Combination>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <SQL Version="SQL Server 2012">
        <Feature>SQLENGINE</Feature>
        <Collation>Default</Collation>
      </SQL>
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites File Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesFileServerAdminServiceAccount" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesFileShareOwnerServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="File Server" />
        <ServerFeature Name="File Server Resource Manager" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="File Server" />
        <ServerFeature Name="File Server Resource Manager" />
      </ServerFeatures>
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites File Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Controller Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
        <ServerFeature Name=".NET Framework 4.5" />
        <ServerFeature Name="IIS Web Server" />
        <ServerFeature Name="IIS Default Document" />
        <ServerFeature Name="IIS Static Content" />
        <ServerFeature Name="IIS Static Content Compression" />
        <ServerFeature Name="IIS Dynamic Content Compression" />
        <ServerFeature Name="IIS Request Filtering" />
        <ServerFeature Name="IIS Windows Authentication" />
        <ServerFeature Name="IIS .NET Extensibility 4.5" />
        <ServerFeature Name="IIS ASP.NET 4.5" />
        <ServerFeature Name="IIS ISAPI Extensions" />
        <ServerFeature Name="IIS ISAPI Filters" />
        <ServerFeature Name="IIS Management Console" />
        <ServerFeature Name="IIS Management Scripts and Tools" />
        <ServerFeature Name="IIS 6 Management Compatibility" />
        <ServerFeature Name="ASP.NET 4.5" />
        <ServerFeature Name="PowerShell" />
        <ServerFeature Name="PowerShell 2.0" />
        <ServerFeature Name="Process Model" />
        <ServerFeature Name=".NET Environment 3.5" />
        <ServerFeature Name="Configuration APIs" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
        <Prerequisite Name="Web Platform Installer 4.6 x64" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="ASP.NET Web Pages 2" />
        <Prerequisite Name="ASP.NET MVC 4" />
        <Prerequisite Name="Windows Azure Pack 2013 - PowerShell API" />
        <Prerequisite Name="Windows Azure Pack 2013 - Configuration Site" />
        <Prerequisite Name="Web Platform Installer 4.6 x64" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Database Server" />
      <Dependency Name="Windows Azure Pack 2013 Web Sites File Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Controller Server" />
    </Role>

    <Role Name="Windows Azure Pack 2013 Web Sites Management Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesManagementServerAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Management Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Additional Management Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesManagementServerAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Management Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Management Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites FrontEnd Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesFrontEndAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites FrontEnd Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Additional FrontEnd Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesFrontEndAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites FrontEnd Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites FrontEnd Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Publisher Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
        <Multiple>False</Multiple>
        <NLB>True</NLB>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesPublisherAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Publisher Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Additional Publisher Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesPublisherAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Publisher Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Publisher Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Shared Worker Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesWorkerAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Shared Worker Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Reserved Large Worker Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesWorkerAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Reserved Large Worker Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Reserved Medium Worker Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesWorkerAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Reserved Medium Worker Server" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Reserved Small Worker Server" Component="Windows Azure Pack 2013 Web Sites">
      <Validation>
        <OperatingSystems>
          <OperatingSystem>
            <Version>6.3.9600</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
          <OperatingSystem>
            <Version>6.2.9200</Version>
            <Feature>
              <Name>Graphical Management Tools and Infrastructure</Name>
              <Validation>478</Validation>
            </Feature>
          </OperatingSystem>
        </OperatingSystems>
        <Combinations>
        </Combinations>
      </Validation>
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesServerAdminGroup" />
      <Admin Type="User" Account="WindowsAzurePack2013WebSitesWorkerAdminServiceAccount" />
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="User Account Control" />
      </Prerequisites>
      <Dependency Name="Windows Azure Pack 2013 Web Sites Controller Server" />
      <Install Installable="Windows Azure Pack 2013 Web Sites" Install="Windows Azure Pack 2013 Web Sites Reserved Small Worker Server" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Admin Group" Component="System Center 2012 R2 Virtual Machine Manager" Type="Integration">
      <Condition>($SystemCenter2012R2VirtualMachineManagerAdminGroup -ne "") -and ($SystemCenter2012R2VirtualMachineManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Cluster Admin Group" Component="System Center 2012 R2 Virtual Machine Manager" Type="Integration">
      <Condition>($SystemCenter2012R2VirtualMachineManagerAdminGroup -ne "") -and ($SystemCenter2012R2VirtualMachineManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Cluster Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Shell Setup" Component="System Center 2012 R2 Virtual Machine Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Admin Group" Component="System Center 2012 R2 Orchestrator" Type="Integration">
      <Condition>($SystemCenter2012R2OrchestratorAdminGroup -ne "") -and ($SystemCenter2012R2OrchestratorAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Shell Setup" Component="System Center 2012 R2 Orchestrator" Type="Integration">
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Web Shell Setup" Component="System Center 2012 R2 Orchestrator" Type="Integration">
      <Install Installable="System Center 2012 R2 Orchestrator" Install="System Center 2012 R2 Orchestrator Web Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Admin Group" Component="System Center 2012 R2 App Controller" Type="Integration">
      <Condition>($SystemCenter2012R2AppControllerAdminGroup -ne "") -and ($SystemCenter2012R2AppControllerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 App Controller" Install="System Center 2012 R2 App Controller Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Web Shell Setup" Component="System Center 2012 R2 App Controller" Type="Integration">
      <Install Installable="System Center 2012 R2 App Controller" Install="System Center 2012 R2 App Controller Web Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Admin Group" Component="System Center 2012 R2 Operations Manager" Type="Integration">
      <Condition>($SystemCenter2012R2OperationsManagerAdminGroup -ne "") -and ($SystemCenter2012R2OperationsManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Shell Setup" Component="System Center 2012 R2 Operations Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Web Shell Setup" Component="System Center 2012 R2 Operations Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Operations Manager" Install="System Center 2012 R2 Operations Manager Web Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Admin Group" Component="System Center 2012 R2 Configuration Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Configuration Manager Site Server" />
      <Condition>($SystemCenter2012R2ConfigurationManagerAdminGroup -ne "") -and ($SystemCenter2012R2ConfigurationManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 Configuration Manager" Install="System Center 2012 R2 Configuration Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Shell Setup" Component="System Center 2012 R2 Configuration Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Configuration Manager" Install="System Center 2012 R2 Configuration Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Shell Setup" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Web Shell Setup" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Service Manager" Install="System Center 2012 R2 Service Manager Web Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Admin Group" Component="System Center 2012 R2 Data Protection Manager" Type="Integration">
      <Condition>($SystemCenter2012R2DataProtectionManagerAdminGroup -ne "") -and ($SystemCenter2012R2DataProtectionManagerAdminGroup -ne $Null)</Condition>
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Data Protection Manager Admin Group" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Shell Setup" Component="System Center 2012 R2 Data Protection Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Data Protection Manager Shell Setup" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Resource Provider NLB Configuration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Condition>($WindowsAzurePack2013AdminAPIServerNLBName -ne $null) -and ($WindowsAzurePack2013AdminAPIServerNLBName -ne "")</Condition>
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Resource Provider NLB Configuration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 SQL Server Resource Provider NLB Configuration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Condition>($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013SQLServerExtensionServerNLBName -ne "")</Condition>
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 SQL Server Resource Provider NLB Configuration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 MySQL Resource Provider NLB Configuration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Condition>($WindowsAzurePack2013MySQLExtensionServerNLBName -ne $null) -and ($WindowsAzurePack2013MySQLExtensionServerNLBName -ne "")</Condition>
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 MySQL Resource Provider NLB Configuration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Admin Web Shell Setup" Component="Windows Azure Pack 2013" Type="Integration">
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Admin Web Shell Setup" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Tenant Web Shell Setup" Component="Windows Azure Pack 2013" Type="Integration">
      <Install Installable="Windows Azure Pack 2013" Install="Windows Azure Pack 2013 Tenant Web Shell Setup" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Service Provider Foundation Integration" Component="System Center 2012 R2 Service Provider Foundation" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2ServiceProviderFoundationSCVMMServiceAccount" />
    </Role>
    <Role Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Cluster Integration" Component="System Center 2012 R2 Service Provider Foundation" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Cluster Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Integration" Component="System Center 2012 R2 Service Provider Foundation" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Virtual Machine Manager Cluster Integration" Component="System Center 2012 R2 App Controller" Type="Integration">
      <Dependency Name="System Center 2012 R2 App Controller Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 App Controller Virtual Machine Manager Cluster Integration" />
    </Role>
    <Role Name="System Center 2012 R2 App Controller Virtual Machine Manager Integration" Component="System Center 2012 R2 App Controller" Type="Integration">
      <Dependency Name="System Center 2012 R2 App Controller Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 App Controller Virtual Machine Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration" Component="System Center 2012 R2 Operations Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2VirtualMachineManagerServiceAccount" />
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="System Center 2012 R2 Management Packs" />
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="System Center 2012 R2 Management Packs" />
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Operations Manager Integration" Component="System Center 2012 R2 Virtual Machine Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerActionServiceAccount" />
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
        <Prerequisite Name="System Center 2012 R2 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
        <Prerequisite Name="System Center 2012 R2 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Virtual Machine Manager Cluster Operations Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Cluster Passive Operations Manager Integration" Component="System Center 2012 R2 Virtual Machine Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerActionServiceAccount" />
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
        <Prerequisite Name="System Center 2012 R2 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
        <Prerequisite Name="System Center 2012 R2 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Operations Manager Integration" Component="System Center 2012 R2 Virtual Machine Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2OperationsManagerActionServiceAccount" />
      <Prerequisites OSVersion="6.3.9600">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
        <Prerequisite Name="System Center 2012 R2 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Prerequisites OSVersion="6.2.9200">
        <Prerequisite Name="SQL Server 2012 System CLR Types" />
        <Prerequisite Name="Report Viewer 2012 Redistributable" />
        <Prerequisite Name="System Center 2012 R2 Operations Manager Console" />
        <Prerequisite Name="SQL Server 2012 Analysis Management Objects"></Prerequisite>
      </Prerequisites>
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Virtual Machine Manager Operations Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Orchestrator Service Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Orchestrator Web Components Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Orchestrator Service Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Orchestrator Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Orchestrator Web Components Server" />
      <Dependency Name="System Center 2012 R2 Orchestrator Service Manager Connector Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Orchestrator Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Configuration Manager Service Manager Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Configuration Manager Site Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Configuration Manager Service Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Cluster Service Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Virtual Machine Manager Cluster Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Service Manager Connector Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Virtual Machine Manager Cluster Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Virtual Machine Manager Service Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Virtual Machine Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Service Manager Connector Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Virtual Machine Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Service Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Admin Type="User" Account="SystemCenter2012R2ServiceManagerServicesServiceAccount" />
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Operations Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Service Manager Connector Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Operations Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Operations Manager Alert Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Service Manager Connector Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Operations Manager Alert Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Configuration Manager Connector Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Configuration Manager Site Server" />
      <Dependency Name="System Center 2012 R2 Configuration Manager Service Manager Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Configuration Manager Connector Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Manager Operations Manager Datawarehouse Integration" Component="System Center 2012 R2 Service Manager" Type="Integration">
      <Dependency Name="System Center 2012 R2 Service Manager Datawarehouse Management Server" />
      <Dependency Name="System Center 2012 R2 Operations Manager Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Manager Operations Manager Datawarehouse Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Data Protection Manager Integration" Component="System Center 2012 R2 Operations Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Operations Manager Data Protection Manager Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Integration" Component="System Center 2012 R2 Data Protection Manager" Type="Integration">
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 3.51" />
      </ServerFeatures>
      <Dependency Name="System Center 2012 R2 Operations Manager Data Protection Manager Integration" />
      <Install Installable="System Center 2012 R2 Data Protection Manager" Install="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Roles Integration" Component="System Center 2012 R2 Data Protection Manager" Type="Integration">
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Roles Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Data Protection Manager Virtual Machine Manager Integration" Component="System Center 2012 R2 Data Protection Manager" Type="Integration">
      <ServerFeatures OSVersion="6.3.9600">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <ServerFeatures OSVersion="6.2.9200">
        <ServerFeature Name=".NET Framework 4.5" />
      </ServerFeatures>
      <Install Installable="System Center 2012 R2 Virtual Machine Manager" Install="System Center 2012 R2 Virtual Machine Manager Console" />
    </Role>
    <Role Name="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant Public API Server" />
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Management Server" />
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Integration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Cluster Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant Public API Server" />
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Dependency Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server" />
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Cluster Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Cluster Integration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 System Center 2012 R2 Service Provider Foundation Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="Windows Azure Pack 2013 System Center 2012 R2 Service Provider Foundation Integration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 Web Sites Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Dependency Name="Windows Azure Pack 2013 Web Sites Management Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="Windows Azure Pack 2013 Web Sites Integration" />
    </Role>
    <Role Name="Windows Azure Pack 2013 System Center 2012 R2 Service Management Automation Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin Authentication Site Server" />
      <Dependency Name="System Center 2012 R2 Service Management Automation Web Service Server" />
      <Install Installable="System Center 2012 R2 Integration" Install="Windows Azure Pack 2013 System Center 2012 R2 Service Management Automation Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Provider Foundation Service Management Automation Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Dependency Name="Windows Azure Pack 2013 Admin API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant API Server" />
      <Dependency Name="Windows Azure Pack 2013 Tenant Public API Server" />
      <Dependency Name="System Center 2012 R2 Service Provider Foundation Server" />
      <Dependency Name="Windows Azure Pack 2013 System Center 2012 R2 Service Management Automation Integration" />
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Provider Foundation Service Management Automation Integration" />
    </Role>
    <Role Name="System Center 2012 R2 Service Management Automation Service Provider Foundation Integration" Component="Windows Azure Pack 2013" Type="Integration">
      <Install Installable="System Center 2012 R2 Integration" Install="System Center 2012 R2 Service Management Automation Service Provider Foundation Integration" />
    </Role>
  </Roles>
  <Integrations>
    <Integration Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Cluster Integration">
      <Dependency>System Center 2012 SP1 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Provider Foundation Virtual Machine Manager Integration">
      <Dependency>System Center 2012 SP1 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 App Controller Virtual Machine Manager Cluster Integration">
      <Dependency>System Center 2012 SP1 App Controller Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 App Controller Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 App Controller Virtual Machine Manager Integration">
      <Dependency>System Center 2012 SP1 App Controller Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 App Controller Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Cluster Active Operations Manager Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Cluster Passive Operations Manager Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Virtual Machine Manager Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Operations Manager Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Datawarehouse Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Operations Manager Datawarehouse Integration">
      <Dependency>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Datawarehouse Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Configuration Manager Service Manager Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Configuration Manager Site Server</Dependency>
      <Target>System Center 2012 SP1 Configuration Manager Site Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Orchestrator Service Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Orchestrator Web Components Server</Dependency>
      <Target>System Center 2012 SP1 Orchestrator Web Components Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Orchestrator Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Orchestrator Web Components Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Cluster Service Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Cluster Service Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Cluster Passive Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Virtual Machine Manager Cluster Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Service Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Virtual Machine Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Service Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Operations Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Operations Manager Alert Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Configuration Manager Connector Integration">
      <Dependency>System Center 2012 SP1 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Configuration Manager Site Server</Dependency>
      <Target>System Center 2012 SP1 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Data Protection Manager Virtual Machine Manager Integration">
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Data Protection Manager Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Data Protection Manager Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Roles Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Data Protection Manager Central Console Server Integration">
      <Dependency>System Center 2012 SP1 Operations Manager Additional Management Server</Dependency>
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Additional Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Data Protection Manager Console">
      <Dependency>System Center 2012 SP1 Operations Manager Console</Dependency>
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Console</Target>
    </Integration>
    <Integration Name="Windows Azure Services 2012 System Center 2012 SP1 Service Provider Foundation Integration">
      <Dependency>Windows Azure Services 2012 AdminAPI Server</Dependency>
      <Dependency>Windows Azure Services 2012 TenantAPI Server</Dependency>
      <Dependency>Windows Azure Services 2012 TenantPublicAPI Server</Dependency>
      <Dependency>System Center 2012 SP1 Service Provider Foundation Server</Dependency>
      <Target>Windows Azure Services 2012 AdminAPI Server</Target>
    </Integration>
    <Integration Name="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Integration">
      <Dependency>Windows Azure Services 2012 AdminAPI Server</Dependency>
      <Dependency>Windows Azure Services 2012 TenantAPI Server</Dependency>
      <Dependency>Windows Azure Services 2012 TenantPublicAPI Server</Dependency>
      <Dependency>System Center 2012 SP1 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="Windows Azure Services 2012 System Center 2012 SP1 Virtual Machine Manager Cluster Integration">
      <Dependency>Windows Azure Services 2012 AdminAPI Server</Dependency>
      <Dependency>Windows Azure Services 2012 TenantAPI Server</Dependency>
      <Dependency>Windows Azure Services 2012 TenantPublicAPI Server</Dependency>
      <Dependency>System Center 2012 SP1 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Orchestrator Admin Group">
      <Dependency>System Center 2012 SP1 Orchestrator Management Server</Dependency>
      <Target>System Center 2012 SP1 Orchestrator Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Orchestrator Shell Setup">
      <Dependency>System Center 2012 SP1 Orchestrator Runbook Designer</Dependency>
      <Target>System Center 2012 SP1 Orchestrator Runbook Designer</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Shell Setup">
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Console</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager COnsole</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Admin Group">
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Virtual Machine Manager Cluster Admin Group">
      <Dependency>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 SP1 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 App Controller Admin Group">
      <Dependency>System Center 2012 SP1 App Controller Server</Dependency>
      <Target>System Center 2012 SP1 App Controller Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Admin Group">
      <Dependency>System Center 2012 SP1 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 SP1 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Operations Manager Shell Setup">
      <Dependency>System Center 2012 SP1 Operations Manager Console</Dependency>
      <Target>System Center 2012 SP1 Operations Manager COnsole</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Configuration Manager Admin Group">
      <Dependency>System Center 2012 SP1 Configuration Manager Site Server</Dependency>
      <Dependency>System Center 2012 SP1 Configuration Manager Console</Dependency>
      <Target>System Center 2012 SP1 Configuration Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Configuration Manager Shell Setup">
      <Dependency>System Center 2012 SP1 Configuration Manager Console</Dependency>
      <Target>System Center 2012 SP1 Configuration Manager COnsole</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Service Manager Shell Setup">
      <Dependency>System Center 2012 SP1 Service Manager Console</Dependency>
      <Target>System Center 2012 SP1 Service Manager COnsole</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Data Protection Manager Admin Group">
      <Dependency>System Center 2012 SP1 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 SP1 Data Protection Manager Server</Target>
    </Integration>
    <Integration Name="System Center 2012 SP1 Data Protection Manager Shell Setup">
      <Dependency>System Center 2012 SP1 Data Protection Manager Console</Dependency>
      <Target>System Center 2012 SP1 Data Protection Manager Console</Target>
    </Integration>
    <Integration Name="Windows Azure Services 2012 Admin Group">
      <Dependency>Windows Azure Services 2012 AdminSite Server</Dependency>
      <Target>Windows Azure Services 2012 AdminSite Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Admin Group">
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Cluster Admin Group">
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Shell Setup">
      <Dependency>System Center 2012 R2 Virtual Machine Manager Console</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager COnsole</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Orchestrator Admin Group">
      <Dependency>System Center 2012 R2 Orchestrator Management Server</Dependency>
      <Target>System Center 2012 R2 Orchestrator Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Orchestrator Shell Setup">
      <Dependency>System Center 2012 R2 Orchestrator Runbook Designer</Dependency>
      <Target>System Center 2012 R2 Orchestrator Runbook Designer</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Orchestrator Web Shell Setup">
      <Dependency>System Center 2012 R2 Orchestrator Runbook Designer</Dependency>
      <Dependency>System Center 2012 R2 Orchestrator Web Components Server</Dependency>
      <Target>System Center 2012 R2 Orchestrator Runbook Designer</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 App Controller Admin Group">
      <Dependency>System Center 2012 R2 App Controller Server</Dependency>
      <Target>System Center 2012 R2 App Controller Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 App Controller Web Shell Setup">
      <Dependency>System Center 2012 R2 App Controller Server</Dependency>
      <Dependency>System Center 2012 R2 App Controller Console</Dependency>
      <Target>System Center 2012 R2 App Controller Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Admin Group">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Shell Setup">
      <Dependency>System Center 2012 R2 Operations Manager Console</Dependency>
      <Target>System Center 2012 R2 Operations Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Web Shell Setup">
      <Dependency>System Center 2012 R2 Operations Manager Web Console Server</Dependency>
      <Dependency>System Center 2012 R2 Operations Manager Console</Dependency>
      <Target>System Center 2012 R2 Operations Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Configuration Manager Admin Group">
      <Dependency>System Center 2012 R2 Configuration Manager Site Server</Dependency>
      <Dependency>System Center 2012 R2 Configuration Manager Console</Dependency>
      <Target>System Center 2012 R2 Configuration Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Configuration Manager Shell Setup">
      <Dependency>System Center 2012 R2 Configuration Manager Console</Dependency>
      <Target>System Center 2012 R2 Configuration Manager COnsole</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Shell Setup">
      <Dependency>System Center 2012 R2 Service Manager Console</Dependency>
      <Target>System Center 2012 R2 Service Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Web Shell Setup">
      <Dependency>System Center 2012 R2 Service Manager SharePoint Web Parts Server</Dependency>
      <Dependency>System Center 2012 R2 Service Manager Console</Dependency>
      <Target>System Center 2012 R2 Service Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Data Protection Manager Admin Group">
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 R2 Data Protection Manager Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Data Protection Manager Shell Setup">
      <Dependency>System Center 2012 R2 Data Protection Manager Console</Dependency>
      <Target>System Center 2012 R2 Data Protection Manager COnsole</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 Resource Provider NLB Configuration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Target>Windows Azure Pack 2013 Admin API Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 SQL Server Resource Provider NLB Configuration">
      <Dependency>Windows Azure Pack 2013 SQL Server Extension Server</Dependency>
      <Target>Windows Azure Pack 2013 SQL Server Extension Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 MySQL Resource Provider NLB Configuration">
      <Dependency>Windows Azure Pack 2013 MySQL Extension Server</Dependency>
      <Target>Windows Azure Pack 2013 MySQL Extension Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 Admin Web Shell Setup">
      <Dependency>Windows Azure Pack 2013 Admin Site Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Console</Dependency>
      <Target>Windows Azure Pack 2013 Console</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 Tenant Web Shell Setup">
      <Dependency>Windows Azure Pack 2013 Tenant Site Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Console</Dependency>
      <Target>Windows Azure Pack 2013 Console</Target>
    </Integration>
    <Integration Name="SQL Server 2012 Management Tools Shell Setup">
      <Dependency>SQL Server 2012 Management Tools</Dependency>
      <Target>SQL Server 2012 Management Tools</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Service Provider Foundation Integration">
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Service Provider Foundation Integration">
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Service Provider Foundation Integration">
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Cluster Integration">
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Provider Foundation Virtual Machine Manager Integration">
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 App Controller Virtual Machine Manager Cluster Integration">
      <Dependency>System Center 2012 R2 App Controller Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 App Controller Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 App Controller Virtual Machine Manager Integration">
      <Dependency>System Center 2012 R2 App Controller Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 App Controller Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Virtual Machine Manager Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Cluster Active Operations Manager Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Cluster Passive Operations Manager Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Operations Manager Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Datawarehouse Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Service Manager Datawarehouse Management Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Datawarehouse Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Orchestrator Service Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Orchestrator Web Components Server</Dependency>
      <Target>System Center 2012 R2 Orchestrator Web Components Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Orchestrator Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Orchestrator Web Components Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Configuration Manager Service Manager Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Configuration Manager Site Server</Dependency>
      <Target>System Center 2012 R2 Configuration Manager Site Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Cluster Service Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Cluster Service Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Cluster Passive Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Virtual Machine Manager Cluster Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Virtual Machine Manager Service Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Virtual Machine Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Virtual Machine Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Service Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Operations Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Operations Manager Alert Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Configuration Manager Connector Integration">
      <Dependency>System Center 2012 R2 Service Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Configuration Manager Site Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Manager Operations Manager Datawarehouse Integration">
      <Dependency>System Center 2012 R2 Service Manager Datawarehouse Management Server</Dependency>
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Service Manager Datawarehouse Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Data Protection Manager Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Roles Integration">
      <Dependency>System Center 2012 R2 Operations Manager Management Server</Dependency>
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Data Protection Manager Central Console Server Integration">
      <Dependency>System Center 2012 R2 Operations Manager Additional Management Server</Dependency>
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Additional Management Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Operations Manager Data Protection Manager Console">
      <Dependency>System Center 2012 R2 Operations Manager Console</Dependency>
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Target>System Center 2012 R2 Operations Manager Console</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Data Protection Manager Virtual Machine Manager Integration">
      <Dependency>System Center 2012 R2 Data Protection Manager Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Data Protection Manager Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Integration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant Public API Server</Dependency>
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Management Server</Dependency>
      <Target>System Center 2012 R2 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 System Center 2012 R2 Virtual Machine Manager Cluster Integration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant Public API Server</Dependency>
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Dependency>System Center 2012 R2 Virtual Machine Manager Cluster Active Management Server</Dependency>
      <Target>System Center 2012 R2 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 System Center 2012 R2 Service Management Automation Integration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant Public API Server</Dependency>
      <Dependency>System Center 2012 R2 Service Management Automation Web Service Server</Dependency>
      <Target>Windows Azure Pack 2013 Admin API Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Provider Foundation Service Management Automation Integration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant Public API Server</Dependency>
      <Dependency>System Center 2012 R2 Service Management Automation Web Service Server</Dependency>
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Target>System Center 2012 R2 Service Provider Foundation Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Management Automation Service Provider Foundation Integration">
      <Dependency>System Center 2012 R2 Service Management Automation Web Service Server</Dependency>
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Target>System Center 2012 R2 Service Management Automation Web Service Server</Target>
    </Integration>
    <Integration Name="System Center 2012 R2 Service Management Automation Service Provider Foundation Integration">
      <Dependency>System Center 2012 R2 Service Management Automation Additional Web Service Server</Dependency>
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Target>System Center 2012 R2 Service Management Automation Additional Web Service Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 System Center 2012 R2 Service Provider Foundation Integration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant Public API Server</Dependency>
      <Dependency>System Center 2012 R2 Service Provider Foundation Server</Dependency>
      <Target>Windows Azure Pack 2013 Admin API Server</Target>
    </Integration>
    <Integration Name="Windows Azure Pack 2013 Web Sites Integration">
      <Dependency>Windows Azure Pack 2013 Admin API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Tenant Public API Server</Dependency>
      <Dependency>Windows Azure Pack 2013 Web Sites Management Server</Dependency>
      <Target>Windows Azure Pack 2013 Admin API Server</Target>
    </Integration>
  </Integrations>
</Installer>